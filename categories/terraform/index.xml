<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Terraform on 🏔️ MLOps Journey</title><link>https://keonhoban.github.io/mlops-journey/categories/terraform/</link><description>Recent content in Terraform on 🏔️ MLOps Journey</description><generator>Hugo -- 0.145.0</generator><language>ko</language><lastBuildDate>Wed, 04 Jun 2025 12:51:32 +0900</lastBuildDate><atom:link href="https://keonhoban.github.io/mlops-journey/categories/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>[Terraform] EC2 &amp; S3 리소스 자동화 구축 실습</title><link>https://keonhoban.github.io/mlops-journey/posts/terraform/01/</link><pubDate>Wed, 04 Jun 2025 12:51:32 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/terraform/01/</guid><description>&lt;h2 id="-aws--terraform-실습-ec2--s3-완전-자동화">☁️ AWS + Terraform 실습: EC2 &amp;amp; S3 완전 자동화&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>Terraform 도입 배경&lt;/strong>&lt;/p>
&lt;p>수동 콘솔 설정은 반복성과 확장성에 한계가 있음&lt;/p>
&lt;p>Terraform은 &lt;strong>버전 관리가 가능한 코드형 인프라(IaC)&lt;/strong> 로,&lt;/p>
&lt;p>&lt;strong>협업 시 동일한 환경을 빠르게 구축&lt;/strong>할 수 있는 강점을 가짐&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>이번 실습 목표&lt;/strong>&lt;/p>
&lt;p>IAM 사용자 생성부터 EC2 &amp;amp; S3 자동화까지, Terraform 기반 인프라 구축 전체 흐름을 실습&lt;/p>&lt;/blockquote>
&lt;p>👉 실습 디렉토리 전체 코드
&lt;a href="https://github.com/keonhoban/mlops-infra-labs/tree/main/terraform/01-ec2-s3-basic">🔗 GitHub – terraform/01-ec2-s3-basic&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="-전체-실습-흐름-요약">🔭 전체 실습 흐름 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>[1단계] IAM 사용자 생성 (Access Key 발급)
[2단계] AWS CLI 설치 및 configure
[3단계] Terraform 설치
[4단계] 실습 디렉토리 + 코드 구성
[5단계] terraform init → plan → apply → EC2 &amp;amp; S3 생성
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-실습-준비-체크리스트">🧩 실습 준비 체크리스트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AWS 계정&lt;/td>
&lt;td>루트 계정으로 로그인 후, IAM 사용자 생성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IAM 사용자&lt;/td>
&lt;td>프로그래밍 접근 + AdministratorAccess 부여&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS CLI&lt;/td>
&lt;td>&lt;code>aws configure&lt;/code>로 API 키 등록&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Terraform&lt;/td>
&lt;td>CLI 설치 필요 (OS별 방법 상이)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SSH 키페어&lt;/td>
&lt;td>EC2 접속용 &lt;code>.pem&lt;/code> 키 직접 생성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-1단계-iam-사용자-생성">🪪 1단계: IAM 사용자 생성&lt;/h2>
&lt;ol>
&lt;li>AWS 콘솔 → IAM → 사용자 추가&lt;/li>
&lt;li>액세스 유형: &lt;strong>프로그래밍 방식 액세스&lt;/strong> 체크&lt;/li>
&lt;li>권한: &lt;code>AdministratorAccess&lt;/code> 정책 부여
&lt;ul>
&lt;li>실습 목적이므로 관리자 권한줬지만, 이후 필요시 Least Privilege 원칙 적용
&lt;ul>
&lt;li>ex) EC2FullAccess, S3FullAccess&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>생성 후 &lt;code>Access Key ID&lt;/code>, &lt;code>Secret Access Key&lt;/code> 복사 (중요!)&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="-2단계-aws-cli-설치-및-구성">⚙️ 2단계: AWS CLI 설치 및 구성&lt;/h2>
&lt;h3 id="-설치-명령어">✅ 설치 명령어&lt;/h3>
&lt;p>&lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html">🔗 AWS CLI 설치 공식 문서&lt;/a>&lt;/p></description></item></channel></rss>
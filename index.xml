<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>🏔️ MLOps Journey on 🏔️ MLOps Journey</title><link>https://keonhoban.github.io/mlops-journey/</link><description>Recent content in 🏔️ MLOps Journey on 🏔️ MLOps Journey</description><generator>Hugo -- 0.145.0</generator><language>ko</language><lastBuildDate>Wed, 30 Apr 2025 08:21:40 +0900</lastBuildDate><atom:link href="https://keonhoban.github.io/mlops-journey/index.xml" rel="self" type="application/rss+xml"/><item><title>[파이썬] 05장. 내장 함수</title><link>https://keonhoban.github.io/mlops-journey/posts/python/05/</link><pubDate>Wed, 30 Apr 2025 08:21:40 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/python/05/</guid><description>&lt;h2 id="-내장-함수란">📌 내장 함수란?&lt;/h2>
&lt;blockquote>
&lt;p>파이썬이 기본적으로 제공하는 내장 기능 함수&lt;/p>
&lt;p>&lt;code>import&lt;/code> 없이 언제든 바로 사용 가능하며,&lt;/p>
&lt;p>&lt;strong>자료형 처리, 수치 계산, 제어 흐름 등&lt;/strong> 다양한 작업에 활용된다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>범주&lt;/th>
&lt;th>함수&lt;/th>
&lt;th>요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>수치 계산&lt;/td>
&lt;td>&lt;code>abs&lt;/code>, &lt;code>pow&lt;/code>, &lt;code>round&lt;/code>, &lt;code>divmod&lt;/code>&lt;/td>
&lt;td>절댓값, 제곱, 반올림, 몫+나머지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>자료 변환&lt;/td>
&lt;td>&lt;code>int&lt;/code>, &lt;code>str&lt;/code>, &lt;code>list&lt;/code>, &lt;code>tuple&lt;/code>, &lt;code>set&lt;/code>&lt;/td>
&lt;td>형 변환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>조건 판단&lt;/td>
&lt;td>&lt;code>all&lt;/code>, &lt;code>any&lt;/code>, &lt;code>bool&lt;/code>&lt;/td>
&lt;td>AND/OR 판단&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>반복 처리&lt;/td>
&lt;td>&lt;code>enumerate&lt;/code>, &lt;code>map&lt;/code>, &lt;code>filter&lt;/code>, &lt;code>zip&lt;/code>&lt;/td>
&lt;td>반복 + 위치/조건/함수 적용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유틸리티&lt;/td>
&lt;td>&lt;code>len&lt;/code>, &lt;code>type&lt;/code>, &lt;code>id&lt;/code>, &lt;code>dir&lt;/code>&lt;/td>
&lt;td>기본 정보 추출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>입출력&lt;/td>
&lt;td>&lt;code>input&lt;/code>, &lt;code>print&lt;/code>, &lt;code>open&lt;/code>&lt;/td>
&lt;td>사용자와의 상호작용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>표현식 실행&lt;/td>
&lt;td>&lt;code>eval&lt;/code>&lt;/td>
&lt;td>문자열로 표현된 코드 실행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>진수 변환&lt;/td>
&lt;td>&lt;code>bin&lt;/code>, &lt;code>oct&lt;/code>, &lt;code>hex&lt;/code>, &lt;code>ord&lt;/code>, &lt;code>chr&lt;/code>&lt;/td>
&lt;td>정수 ↔ 진수/문자&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-대표-함수-요약--예시">🔥 대표 함수 요약 + 예시&lt;/h2>
&lt;hr>
&lt;h3 id="-abs">🧩 abs&lt;/h3>
&lt;p>절댓값 반환&lt;/p></description></item><item><title>[파이썬] 04장. 클래스, 모듈, 패키지, 예외처리</title><link>https://keonhoban.github.io/mlops-journey/posts/python/04/</link><pubDate>Tue, 29 Apr 2025 10:21:58 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/python/04/</guid><description>&lt;h2 id="-클래스-모듈-패키지-예외처리">📌 클래스, 모듈, 패키지, 예외처리&lt;/h2>
&lt;blockquote>
&lt;p>파이썬 프로그램은 **클래스(설계도)**로 구조화하고,&lt;/p>
&lt;p>&lt;strong>모듈/패키지&lt;/strong>로 기능을 묶으며,&lt;/p>
&lt;p>&lt;strong>예외 처리&lt;/strong>로 프로그램을 견고하게 만든다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>범주&lt;/th>
&lt;th>개념 요약&lt;/th>
&lt;th>예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>클래스&lt;/strong>&lt;/td>
&lt;td>속성과 메서드를 가진 설계도&lt;/td>
&lt;td>&lt;code>class Calculator:&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>객체(인스턴스)&lt;/strong>&lt;/td>
&lt;td>클래스를 통해 만들어진 실제 사용 가능한 실체&lt;/td>
&lt;td>&lt;code>a = Calculator()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모듈&lt;/strong>&lt;/td>
&lt;td>함수/변수를 담은 .py 파일&lt;/td>
&lt;td>&lt;code>import mod1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>패키지&lt;/strong>&lt;/td>
&lt;td>모듈들을 디렉터리로 묶은 구조&lt;/td>
&lt;td>&lt;code>import game.sound.echo&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>예외 처리&lt;/strong>&lt;/td>
&lt;td>프로그램 오류를 안전하게 제어&lt;/td>
&lt;td>&lt;code>try-except&lt;/code> 구문&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-흐름-구조도">📊 흐름 구조도&lt;/h2>
&lt;pre tabindex="0">&lt;code>[ 클래스 설계 ]
↓
[ 객체 생성 ]
↓
[ 기능 구현 및 모듈화 (.py 파일) ]
↓
[ 모듈 묶기 → 패키지 구성 (폴더+__init__.py) ]
↓
[ 프로그램 실행 중 예외 발생 가능 ]
↓
[ try-except 로 안전한 처리 ]
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-핵심-기능-요약--코드-예시">🔥 핵심 기능 요약 + 코드 예시&lt;/h2>
&lt;hr>
&lt;h3 id="-클래스와-객체">🧩 클래스와 객체&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법/개념&lt;/th>
&lt;th>코드 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>클래스 생성&lt;/td>
&lt;td>&lt;code>class ClassName:&lt;/code>&lt;/td>
&lt;td>&lt;code>class Calculator:&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>생성자 메서드&lt;/td>
&lt;td>&lt;code>def __init__(self):&lt;/code>&lt;/td>
&lt;td>객체 초기 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>객체 생성&lt;/td>
&lt;td>&lt;code>a = ClassName()&lt;/code>&lt;/td>
&lt;td>&lt;code>cal = Calculator()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메서드 정의&lt;/td>
&lt;td>&lt;code>def method(self):&lt;/code>&lt;/td>
&lt;td>객체 동작 정의&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>객체 변수&lt;/td>
&lt;td>&lt;code>self.var = value&lt;/code>&lt;/td>
&lt;td>각 객체별로 독립&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Calculator&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(self, num):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result &lt;span style="color:#f92672">+=&lt;/span> num
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cal1 &lt;span style="color:#f92672">=&lt;/span> Calculator()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(cal1&lt;span style="color:#f92672">.&lt;/span>add(&lt;span style="color:#ae81ff">3&lt;/span>)) &lt;span style="color:#75715e"># 3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-클래스-상속과-오버라이딩">🧩 클래스 상속과 오버라이딩&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>문법/개념&lt;/th>
&lt;th>코드 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>상속&lt;/td>
&lt;td>&lt;code>class Child(Parent):&lt;/code>&lt;/td>
&lt;td>&lt;code>class MoreFourCal(FourCal):&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메서드 오버라이딩&lt;/td>
&lt;td>부모 메서드를 자식이 다시 정의&lt;/td>
&lt;td>&lt;code>def div(self): return 0 if self.second == 0 else ...&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SafeFourCal&lt;/span>(FourCal):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">div&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>second &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>first &lt;span style="color:#f92672">/&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>second
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-모듈">🧩 모듈&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법/개념&lt;/th>
&lt;th>코드 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>모듈 import&lt;/td>
&lt;td>&lt;code>import mod1&lt;/code>&lt;/td>
&lt;td>&lt;code>mod1.add(3, 4)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특정 함수 import&lt;/td>
&lt;td>&lt;code>from mod1 import add&lt;/code>&lt;/td>
&lt;td>&lt;code>add(3, 4)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모듈 내부 제어&lt;/td>
&lt;td>&lt;code>if __name__ == &amp;quot;__main__&amp;quot;:&lt;/code>&lt;/td>
&lt;td>파일 직접 실행시만 수행&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># mod1.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(a, b):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> a &lt;span style="color:#f92672">+&lt;/span> b
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 다른 파일에서 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> mod1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(mod1&lt;span style="color:#f92672">.&lt;/span>add(&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-패키지">🧩 패키지&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법/개념&lt;/th>
&lt;th>코드 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>패키지 import&lt;/td>
&lt;td>&lt;code>import game.sound.echo&lt;/code>&lt;/td>
&lt;td>&lt;code>game.sound.echo.echo_test()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상대 경로 import&lt;/td>
&lt;td>&lt;code>from ..sound import echo&lt;/code>&lt;/td>
&lt;td>상대적 위치 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>__init__.py&lt;/code>&lt;/td>
&lt;td>패키지 초기화 파일, 비워두거나 설정 작성&lt;/td>
&lt;td>&lt;code>VERSION = 3.5&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> game.sound &lt;span style="color:#f92672">import&lt;/span> echo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo&lt;span style="color:#f92672">.&lt;/span>echo_test()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-예외-처리">🧩 예외 처리&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법/개념&lt;/th>
&lt;th>코드 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>기본 예외 처리&lt;/td>
&lt;td>&lt;code>try-except&lt;/code>&lt;/td>
&lt;td>오류 제어&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>여러 오류 처리&lt;/td>
&lt;td>&lt;code>except (Error1, Error2):&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>finally 절&lt;/td>
&lt;td>오류 발생과 상관없이 무조건 실행&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용자 정의 예외&lt;/td>
&lt;td>&lt;code>class MyError(Exception):&lt;/code>&lt;/td>
&lt;td>직접 예외 설계&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">ZeroDivisionError&lt;/span> &lt;span style="color:#66d9ef">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(e) &lt;span style="color:#75715e"># division by zero&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MyError&lt;/span>(&lt;span style="color:#a6e22e">Exception&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __str__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;허용되지 않는 별명입니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-실무-연결-포인트">🛠️ 실무 연결 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>실무 상황&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>서버 관리 툴 작성&lt;/td>
&lt;td>클래스 기반 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API 기능 분리&lt;/td>
&lt;td>모듈화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서비스 확장성 확보&lt;/td>
&lt;td>패키지화 (폴더 구조화)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장애 발생 대비&lt;/td>
&lt;td>예외 처리로 안정성 강화&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-실수-주의-포인트">⚠️ 실수 주의 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>실수&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>클래스 없이 함수만 나열&lt;/td>
&lt;td>유지보수 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모듈 import 충돌&lt;/td>
&lt;td>같은 함수명 주의&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상대 경로 import 오류&lt;/td>
&lt;td>&lt;code>.&lt;/code> &lt;code>..&lt;/code> 정확히 이해 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>예외를 무시하고 진행&lt;/td>
&lt;td>안정성 저하, 반드시 처리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-마무리">🏁 마무리&lt;/h2>
&lt;blockquote>
&lt;p>클래스는 복잡한 문제를 나누는 힘이고,&lt;/p></description></item><item><title>[파이썬] 03장. 함수, 입출력</title><link>https://keonhoban.github.io/mlops-journey/posts/python/03/</link><pubDate>Mon, 28 Apr 2025 10:02:00 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/python/03/</guid><description>&lt;h2 id="-함수function">📌 함수(Function)&lt;/h2>
&lt;blockquote>
&lt;p>입력값을 받아서 어떤 작업을 수행한 뒤 결과값을 반환하는 코드 묶음&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>함수 정의&lt;/td>
&lt;td>&lt;code>def 함수명(매개변수):&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>매개변수&lt;/td>
&lt;td>입력값을 받는 변수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인수&lt;/td>
&lt;td>함수를 호출할 때 전달하는 값&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>리턴값&lt;/td>
&lt;td>&lt;code>return&lt;/code>으로 반환되는 값 (항상 1개)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본값 설정&lt;/td>
&lt;td>&lt;code>def func(x=0):&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>가변 인자&lt;/td>
&lt;td>&lt;code>*args&lt;/code> → 튜플로 받음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>키워드 인자&lt;/td>
&lt;td>&lt;code>**kwargs&lt;/code> → 딕셔너리로 받음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>함수 안 변수&lt;/td>
&lt;td>지역 변수 우선 적용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>람다 함수&lt;/td>
&lt;td>&lt;code>lambda 매개변수: 표현식&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-함수-흐름-구조">📊 함수 흐름 구조&lt;/h3>
&lt;pre tabindex="0">&lt;code>[ 입력값 ]
↓
[ 함수 실행 ]
↓
[ 결과 리턴 ]
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-함수-핵심-문법--코드-예시">🔥 함수 핵심 문법 + 코드 예시&lt;/h3>
&lt;hr>
&lt;h3 id="-함수-기본-구조">🧩 함수 기본 구조&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(a, b):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> a &lt;span style="color:#f92672">+&lt;/span> b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(add(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>)) &lt;span style="color:#75715e"># 7&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-여러-입력-받기-args">🧩 여러 입력 받기 (*args)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">add_many&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sum(args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(add_many(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>)) &lt;span style="color:#75715e"># 6&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-키워드-인자-받기-kwargs">🧩 키워드 인자 받기 (**kwargs)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">print_kwargs&lt;/span>(&lt;span style="color:#f92672">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(kwargs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print_kwargs(name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;QJ&amp;#34;&lt;/span>, age&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">27&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># {&amp;#39;name&amp;#39;: &amp;#39;QJ&amp;#39;, &amp;#39;age&amp;#39;: 27}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-리턴-여러-개-튜플-형태">🧩 리턴 여러 개 (튜플 형태)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">calc&lt;/span>(a, b):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> a&lt;span style="color:#f92672">+&lt;/span>b, a&lt;span style="color:#f92672">*&lt;/span>b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sum_, mul_ &lt;span style="color:#f92672">=&lt;/span> calc(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(sum_, mul_) &lt;span style="color:#75715e"># 7 12&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-기본값-매개변수">🧩 기본값 매개변수&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">greet&lt;/span>(name, age&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">30&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>name&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">님은 &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>age&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">살입니다.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>greet(&lt;span style="color:#e6db74">&amp;#34;QJ&amp;#34;&lt;/span>) &lt;span style="color:#75715e"># QJ님은 30살입니다.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>greet(&lt;span style="color:#e6db74">&amp;#34;Mew&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">27&lt;/span>) &lt;span style="color:#75715e"># Mew님은 27살입니다.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-함수-안에서-외부-변수-사용-추천-방식">🧩 함수 안에서 외부 변수 사용 (추천 방식)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">add_one&lt;/span>(a):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> add_one(a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(a) &lt;span style="color:#75715e"># 2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-lambda-표현">🧩 lambda 표현&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>add &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">lambda&lt;/span> a, b: a &lt;span style="color:#f92672">+&lt;/span> b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(add(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>)) &lt;span style="color:#75715e"># 7&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-사용자-입출력">📌 사용자 입출력&lt;/h2>
&lt;blockquote>
&lt;p>프로그램과 사용자 간 데이터 주고받기!&lt;/p></description></item><item><title>[파이썬] 02장. 제어문</title><link>https://keonhoban.github.io/mlops-journey/posts/python/02/</link><pubDate>Sun, 27 Apr 2025 09:10:54 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/python/02/</guid><description>&lt;h2 id="-제어문이란">📌 제어문이란?&lt;/h2>
&lt;blockquote>
&lt;p>프로그램의 흐름을 제어하는 문법&lt;/p>
&lt;p>(조건, 반복, 선택을 통해 프로그램 진행 방향을 결정한다.)&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>제어문&lt;/th>
&lt;th>핵심 역할&lt;/th>
&lt;th>사용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>if 문&lt;/strong>&lt;/td>
&lt;td>조건에 따라 실행 분기&lt;/td>
&lt;td>&lt;code>if money &amp;gt; 0:&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>while 문&lt;/strong>&lt;/td>
&lt;td>조건이 참일 동안 반복&lt;/td>
&lt;td>&lt;code>while count &amp;lt; 10:&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>for 문&lt;/strong>&lt;/td>
&lt;td>반복 가능한 객체 순회&lt;/td>
&lt;td>&lt;code>for i in range(5):&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>break&lt;/strong>&lt;/td>
&lt;td>반복문 강제 종료&lt;/td>
&lt;td>&lt;code>break&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>continue&lt;/strong>&lt;/td>
&lt;td>반복문 처음으로 이동&lt;/td>
&lt;td>&lt;code>continue&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>리스트 컴프리헨션&lt;/strong>&lt;/td>
&lt;td>반복+조건을 한 줄로 표현&lt;/td>
&lt;td>&lt;code>[x*2 for x in a if x&amp;gt;0]&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-제어문-흐름도-요약">📊 제어문 흐름도 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>[조건 검사]
↓
[Yes] → 실행
↓
[반복 조건 만족?]
↓
[반복]
↓
[종료]
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-제어문별-핵심-문법--코드-예시">🔥 제어문별 핵심 문법 + 코드 예시&lt;/h2>
&lt;hr>
&lt;h3 id="-if-문-조건문">🧩 if 문 (조건문)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>기본 if문&lt;/td>
&lt;td>&lt;code>if 조건:&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>else 사용&lt;/td>
&lt;td>&lt;code>if 조건: ... else: ...&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>elif 사용&lt;/td>
&lt;td>&lt;code>if 조건: ... elif 조건: ... else: ...&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pass 사용&lt;/td>
&lt;td>아무 것도 안 하고 넘김&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>money &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> money:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;택시를 타고 간다.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;걸어 간다.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>비교 연산자&lt;/strong>: &lt;code>&amp;lt;&lt;/code>, &lt;code>&amp;gt;&lt;/code>, &lt;code>==&lt;/code>, &lt;code>!=&lt;/code>, &lt;code>&amp;gt;=&lt;/code>, &lt;code>&amp;lt;=&lt;/code>&lt;/li>
&lt;li>&lt;strong>논리 연산자&lt;/strong>: &lt;code>and&lt;/code>, &lt;code>or&lt;/code>, &lt;code>not&lt;/code>&lt;/li>
&lt;li>&lt;strong>in, not in&lt;/strong>: 리스트, 튜플, 문자열에 포함 여부 검사&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#39;money&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;paper&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;cellphone&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;money&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;택시를 타고 간다.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>조건부 표현식 (한 줄 if)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>message &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;success&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> score &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#e6db74">&amp;#34;failure&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-while-문-반복">🧩 while 문 (반복)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>기본 사용&lt;/td>
&lt;td>&lt;code>while 조건:&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>break 사용&lt;/td>
&lt;td>반복 중단&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>continue 사용&lt;/td>
&lt;td>다음 반복으로 넘어감&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>treeHit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> treeHit &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> treeHit &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;나무를 &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>treeHit&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">번 찍었습니다.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>break 예시&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>coffee &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> money &lt;span style="color:#f92672">=&lt;/span> int(input())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> money &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">300&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> coffee &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> coffee &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>continue 예시&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> a &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> a &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>: &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(a)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-for-문-반복">🧩 for 문 (반복)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>리스트, 튜플 순회&lt;/td>
&lt;td>&lt;code>for i in list:&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>range와 함께 사용&lt;/td>
&lt;td>&lt;code>for i in range(5):&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>continue 사용&lt;/td>
&lt;td>조건에 따라 건너뛰기&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>test_list &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;one&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;two&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;three&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> test_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(i)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>range 함수와 함께&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">11&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(i)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>구구단 만들기&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(i&lt;span style="color:#f92672">*&lt;/span>j, end&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-리스트-컴프리헨션">🧩 리스트 컴프리헨션&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>기본형&lt;/td>
&lt;td>&lt;code>[표현식 for 변수 in 반복가능객체]&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>조건 포함&lt;/td>
&lt;td>&lt;code>[표현식 for 변수 in 반복가능객체 if 조건]&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result &lt;span style="color:#f92672">=&lt;/span> [num&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> num &lt;span style="color:#f92672">in&lt;/span> a]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(result) &lt;span style="color:#75715e"># [3, 6, 9, 12]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>여러 for문 중첩&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>result &lt;span style="color:#f92672">=&lt;/span> [x&lt;span style="color:#f92672">*&lt;/span>y &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>) &lt;span style="color:#66d9ef">for&lt;/span> y &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(result)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-제어문-실수-주의">⚠️ 제어문 실수 주의&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>실수&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>if 문에 &lt;code>:&lt;/code> 빠뜨림&lt;/td>
&lt;td>무조건 &lt;code>:&lt;/code> 붙이기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>들여쓰기 혼용 (탭/스페이스)&lt;/td>
&lt;td>통일: 공백 4칸 권장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>while 무한 루프&lt;/td>
&lt;td>탈출 조건 명확히 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>for + range 끝 값 주의&lt;/td>
&lt;td>&lt;code>range(1, 5)&lt;/code> → 1~4까지&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-실무-연결-요약">🛠️ 실무 연결 요약&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>제어문 활용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>서버 상태 주기적 체크&lt;/td>
&lt;td>&lt;code>while&lt;/code> 반복 + &lt;code>break&lt;/code> 조건 탈출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전처리&lt;/td>
&lt;td>&lt;code>for&lt;/code> 순회 + 조건 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>조건별 로깅&lt;/td>
&lt;td>&lt;code>if&lt;/code> + 다양한 조건 분기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 배포 자동화 스크립트&lt;/td>
&lt;td>&lt;code>for + range&lt;/code> 활용한 반복 작업&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-마무리">🏁 마무리&lt;/h2>
&lt;blockquote>
&lt;p>조건과 반복을 자유자재로 다루면,&lt;/p></description></item><item><title>[파이썬] 01장. 자료형, 변수</title><link>https://keonhoban.github.io/mlops-journey/posts/python/01/</link><pubDate>Sat, 26 Apr 2025 10:08:22 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/python/01/</guid><description>&lt;h2 id="-자료형이란">📌 자료형이란?&lt;/h2>
&lt;blockquote>
&lt;p>데이터를 저장하고 조작하는 방법을 결정하는 파이썬의 기본 단위&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>자료형&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>숫자형&lt;/strong>&lt;/td>
&lt;td>수 표현 (정수, 실수)&lt;/td>
&lt;td>&lt;code>1&lt;/code>, &lt;code>-3&lt;/code>, &lt;code>3.14&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>문자열&lt;/strong>&lt;/td>
&lt;td>문자 집합, 변경 불가&lt;/td>
&lt;td>&lt;code>&amp;quot;Hello&amp;quot;&lt;/code>, &lt;code>'Python'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>리스트&lt;/strong>&lt;/td>
&lt;td>여러 값을 순서대로 저장, 변경 가능&lt;/td>
&lt;td>&lt;code>[1, 2, 'a']&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>튜플&lt;/strong>&lt;/td>
&lt;td>여러 값을 순서대로 저장, 변경 불가&lt;/td>
&lt;td>&lt;code>(1, 2, 'a')&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>딕셔너리&lt;/strong>&lt;/td>
&lt;td>키-값 쌍으로 저장&lt;/td>
&lt;td>&lt;code>{'name': 'QJ'}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>집합&lt;/strong>&lt;/td>
&lt;td>중복 없는 데이터 집합&lt;/td>
&lt;td>&lt;code>{1, 2, 3}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>불형&lt;/strong>&lt;/td>
&lt;td>참(True)/거짓(False) 표현&lt;/td>
&lt;td>&lt;code>True&lt;/code>, &lt;code>False&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>변수&lt;/strong>&lt;/td>
&lt;td>데이터를 저장하는 이름표&lt;/td>
&lt;td>&lt;code>a = 3&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-자료형-관계-흐름도">📊 자료형 관계 흐름도&lt;/h2>
&lt;pre tabindex="0">&lt;code>[ 데이터 입력 ]
↓
[ 자료형 선택 ]
├─ 수치 → 숫자형
├─ 문자 → 문자열
├─ 순서 집합 → 리스트 / 튜플
├─ 키-값 매칭 → 딕셔너리
├─ 중복 제거 → 집합
└─ 조건 판단 → 불형
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-자료형별-핵심-문법--코드-예시">🔥 자료형별 핵심 문법 + 코드 예시&lt;/h2>
&lt;hr>
&lt;h3 id="-숫자형-int-float">🧩 숫자형 (int, float)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>덧셈&lt;/td>
&lt;td>&lt;code>3 + 4 → 7&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>뺄셈&lt;/td>
&lt;td>&lt;code>7 - 3 → 4&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>곱셈&lt;/td>
&lt;td>&lt;code>3 * 4 → 12&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>나눗셈&lt;/td>
&lt;td>&lt;code>7 / 4 → 1.75&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>몫&lt;/td>
&lt;td>&lt;code>7 // 4 → 1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>나머지&lt;/td>
&lt;td>&lt;code>7 % 4 → 3&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>제곱&lt;/td>
&lt;td>&lt;code>2 ** 3 → 8&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(a &lt;span style="color:#f92672">//&lt;/span> b) &lt;span style="color:#75715e"># 몫&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(a &lt;span style="color:#f92672">%&lt;/span> b) &lt;span style="color:#75715e"># 나머지&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-문자열-str">🧩 문자열 (str)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>인덱싱&lt;/td>
&lt;td>&lt;code>&amp;quot;Python&amp;quot;[0] → 'P'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>슬라이싱&lt;/td>
&lt;td>&lt;code>&amp;quot;Python&amp;quot;[0:3] → 'Pyt'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>더하기&lt;/td>
&lt;td>&lt;code>&amp;quot;Hello&amp;quot; + &amp;quot;World&amp;quot; → &amp;quot;HelloWorld&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>곱하기&lt;/td>
&lt;td>&lt;code>&amp;quot;=&amp;quot; * 10 → &amp;quot;==========&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>포매팅(f-string)&lt;/td>
&lt;td>&lt;code>f&amp;quot;{name}님 환영합니다&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>greet &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;World&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(greet) &lt;span style="color:#75715e"># Hello World&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>word &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Python&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(word[&lt;span style="color:#ae81ff">2&lt;/span>:&lt;span style="color:#ae81ff">5&lt;/span>]) &lt;span style="color:#75715e"># tho&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-리스트-list">🧩 리스트 (list)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>추가&lt;/td>
&lt;td>&lt;code>append()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>삽입&lt;/td>
&lt;td>&lt;code>insert()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>삭제&lt;/td>
&lt;td>&lt;code>remove()&lt;/code>, &lt;code>pop()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>정렬&lt;/td>
&lt;td>&lt;code>sort()&lt;/code>, &lt;code>reverse()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인덱싱/슬라이싱&lt;/td>
&lt;td>&lt;code>a[0]&lt;/code>, &lt;code>a[1:3]&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(a) &lt;span style="color:#75715e"># [1, 2, 3, 4]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-튜플-tuple">🧩 튜플 (tuple)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특징&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>변경 불가&lt;/td>
&lt;td>&lt;code>(1, 2, 3)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인덱싱/슬라이싱 가능&lt;/td>
&lt;td>&lt;code>t[0]&lt;/code>, &lt;code>t[1:]&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>t &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(t[&lt;span style="color:#ae81ff">1&lt;/span>]) &lt;span style="color:#75715e"># 2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-딕셔너리-dict">🧩 딕셔너리 (dict)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>추가&lt;/td>
&lt;td>&lt;code>d['age'] = 30&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>삭제&lt;/td>
&lt;td>&lt;code>del d['age']&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>조회&lt;/td>
&lt;td>&lt;code>d.get('name')&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>keys/values/items 조회&lt;/td>
&lt;td>&lt;code>d.keys()&lt;/code>, &lt;code>d.values()&lt;/code>, &lt;code>d.items()&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>d &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;name&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;QJ&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;age&amp;#39;&lt;/span>: &lt;span style="color:#ae81ff">30&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(d[&lt;span style="color:#e6db74">&amp;#39;name&amp;#39;&lt;/span>]) &lt;span style="color:#75715e"># QJ&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(d&lt;span style="color:#f92672">.&lt;/span>get(&lt;span style="color:#e6db74">&amp;#39;birth&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;0401&amp;#39;&lt;/span>)) &lt;span style="color:#75715e"># 디폴트 값 제공&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-집합-set">🧩 집합 (set)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>생성&lt;/td>
&lt;td>&lt;code>set([1,2,3])&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>교집합&lt;/td>
&lt;td>&lt;code>s1 &amp;amp; s2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>합집합&lt;/td>
&lt;td>`s1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>차집합&lt;/td>
&lt;td>&lt;code>s1 - s2&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>s1 &lt;span style="color:#f92672">=&lt;/span> set([&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2 &lt;span style="color:#f92672">=&lt;/span> set([&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(s1 &lt;span style="color:#f92672">&amp;amp;&lt;/span> s2) &lt;span style="color:#75715e"># {2, 3}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-불형-bool">🧩 불형 (bool)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>값&lt;/th>
&lt;th>결과&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>&amp;quot;&amp;quot;&lt;/code>, &lt;code>[]&lt;/code>, &lt;code>{}&lt;/code>&lt;/td>
&lt;td>False&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;quot;text&amp;quot;&lt;/code>, &lt;code>[1]&lt;/code>, &lt;code>{1:2}&lt;/code>&lt;/td>
&lt;td>True&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print(bool(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>)) &lt;span style="color:#75715e"># False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(bool([&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>])) &lt;span style="color:#75715e"># True&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-변수">🧩 변수&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특징&lt;/th>
&lt;th>문법 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>값 참조&lt;/td>
&lt;td>&lt;code>a = [1,2,3]&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>복사 (다른 객체 만들기)&lt;/td>
&lt;td>&lt;code>b = a.copy()&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#f92672">=&lt;/span> a&lt;span style="color:#f92672">.&lt;/span>copy()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(a &lt;span style="color:#f92672">is&lt;/span> b) &lt;span style="color:#75715e"># False (다른 객체)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-실수-주의-포인트">⚠️ 실수 주의 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>실수&lt;/th>
&lt;th>올바른 이해&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>a = b&lt;/code> 복사하면 값 공유됨&lt;/td>
&lt;td>&lt;code>.copy()&lt;/code> 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>튜플은 수정 불가&lt;/td>
&lt;td>수정하려면 새 튜플 생성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>딕셔너리 Key 중복은 마지막 값만 남음&lt;/td>
&lt;td>Key 고유성 유지 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>집합은 인덱싱 불가&lt;/td>
&lt;td>변환 후 인덱싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>빈 값은 False&lt;/td>
&lt;td>&lt;code>[]&lt;/code>, &lt;code>{}&lt;/code>, &lt;code>&amp;quot;&amp;quot;&lt;/code> 모두 False 처리됨&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-실무-연결-요약">🛠️ 실무 연결 요약&lt;/h2>
&lt;ul>
&lt;li>API 데이터 가공 → &lt;code>dict&lt;/code>&lt;/li>
&lt;li>파라미터 저장 → &lt;code>dict&lt;/code>&lt;/li>
&lt;li>다중 결과 저장 → &lt;code>list&lt;/code>&lt;/li>
&lt;li>조건 분기 처리 → &lt;code>bool&lt;/code>&lt;/li>
&lt;li>중복 제거 리스트 → &lt;code>set&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="-마무리">🏁 마무리&lt;/h2>
&lt;blockquote>
&lt;p>자료형을 완전히 이해하면,&lt;/p></description></item><item><title>[셸 스크립트] 04. Monitoring</title><link>https://keonhoban.github.io/mlops-journey/projects/shell_script/04/</link><pubDate>Fri, 25 Apr 2025 11:08:02 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/shell_script/04/</guid><description>&lt;h1 id="-디스크-사용률-초과-시-자동-로그-정리">✅ 디스크 사용률 초과 시 자동 로그 정리&lt;/h1>
&lt;blockquote>
&lt;p>운영 중 디스크 용량 초과로 장애가 발생하기 전에,
서버가 스스로 로그를 정리하도록 만드는 자동화 스크립트입니다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="1--목표">1. 🎯 목표&lt;/h2>
&lt;ul>
&lt;li>✅ 디스크 사용률이 일정 기준을 초과하면,&lt;/li>
&lt;li>✅ 지정된 경로에서 &lt;strong>오래된 로그 파일을 자동으로 삭제&lt;/strong>&lt;/li>
&lt;li>✅ 삭제된 파일은 로그로 기록&lt;/li>
&lt;/ul>
&lt;p>이 스크립트 하나로 &lt;strong>디스크 감시 + 자동 삭제 + 운영 기록 보관&lt;/strong>까지 가능합니다.&lt;/p>
&lt;hr>
&lt;h2 id="2--전체-구조-흐름">2. 🧠 전체 구조 흐름&lt;/h2>
&lt;pre tabindex="0">&lt;code>df → 각 디스크 사용률 확인
↓
사용률이 THRESHOLD 이상이면
↓
지정 경로에서 mtime 기반 오래된 로그 탐색
↓
삭제 + 로그 기록
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>예시 실행 흐름:&lt;/p></description></item><item><title>[셸 스크립트] 03. Deployment</title><link>https://keonhoban.github.io/mlops-journey/projects/shell_script/03/</link><pubDate>Fri, 25 Apr 2025 11:07:57 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/shell_script/03/</guid><description>&lt;h1 id="-모델-패키징-및-배포">✅ 모델 패키징 및 배포&lt;/h1>
&lt;h2 id="1--목표">1. 🎯 목표&lt;/h2>
&lt;blockquote>
&lt;p>머신러닝 모델을 운영 환경에 안전하게 배포하기 위한&lt;/p>
&lt;p>&lt;strong>모델 파일 점검 → 압축 → 복원 → 원격 배포&lt;/strong> 과정을&lt;/p>
&lt;p>&lt;strong>하나의 통합 스크립트&lt;/strong>로 자동화합니다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="2--흐름-요약">2. 🧠 흐름 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>[모델 디렉토리 점검]
↓
[모델 압축 (archive)]
↓
[필요시 복원 (restore)]
↓
[배포 서버에 SCP 전송 (deploy)]
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="3--전체-코드-주석-포함">3. 🔧 전체 코드 (주석 포함)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MODE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>1&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;check&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># check, archive, restore, deploy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TARGET_DIR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>2&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/opt/ml/models&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ARCHIVE_FILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>3&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;models.tar.gz&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>REQUIRED_FILES&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;model.py&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;requirements.txt&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;config.yaml&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 간단한 로그 함수&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;[&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date &lt;span style="color:#e6db74">&amp;#39;+%F %T&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">] &lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 1. 필수 파일 존재 여부 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>check&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">{&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Missing dir: &lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; exit 1; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> file in &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>REQUIRED_FILES[@]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> -e &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">/&lt;/span>$file&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">{&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Missing file: &lt;/span>$file&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; exit 1; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log &lt;span style="color:#e6db74">&amp;#34;File check complete&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 2. 모델 디렉토리 압축&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>archive&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tar -czf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -C &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span> .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log &lt;span style="color:#e6db74">&amp;#34;Archive created: &lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 3. 압축된 모델 복원&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>restore&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> -e &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">{&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Missing archive: &lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; exit 1; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tar -xzf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -C &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log &lt;span style="color:#e6db74">&amp;#34;Restore done to &lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 4. 모델 원격 서버로 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deploy&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USER&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>4&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ubuntu&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HOST&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>5&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;127.0.0.1&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DEST&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>6&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/opt/ml/models&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scp &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$USER&lt;span style="color:#e6db74">@&lt;/span>$HOST&lt;span style="color:#e6db74">:&lt;/span>$DEST&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Deployed to &lt;/span>$HOST&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">{&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Deployment failed&amp;#34;&lt;/span>; exit 1; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실행 분기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$MODE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> check&lt;span style="color:#f92672">)&lt;/span> check ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> archive&lt;span style="color:#f92672">)&lt;/span> archive ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restore&lt;span style="color:#f92672">)&lt;/span> restore ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deploy&lt;span style="color:#f92672">)&lt;/span> deploy &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$@&lt;span style="color:#e6db74">&amp;#34;&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Usage: &lt;/span>$0&lt;span style="color:#e6db74"> [check|archive|restore|deploy] [target_dir] [archive_file] [user] [host] [remote_path]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="4--주요-기능-설명">4. 📌 주요 기능 설명&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>check&lt;/code>&lt;/td>
&lt;td>모델 디렉토리에 필수 파일 존재 여부 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>archive&lt;/code>&lt;/td>
&lt;td>디렉토리 전체 압축 → &lt;code>.tar.gz&lt;/code> 생성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>restore&lt;/code>&lt;/td>
&lt;td>압축 해제 후 원상 복원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>deploy&lt;/code>&lt;/td>
&lt;td>&lt;code>scp&lt;/code>로 원격 서버 전송, 사용자/호스트 지정 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>log()&lt;/code>&lt;/td>
&lt;td>모든 결과 시간 기록 포함, 운영 추적 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="5--실무-활용--확장-포인트">5. 🛠️ 실무 활용 &amp;amp; 확장 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>확장 방향&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>배포 자동화&lt;/td>
&lt;td>&lt;code>CI/CD&lt;/code> 파이프라인에서 이 스크립트 호출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>환경 설정 외부화&lt;/td>
&lt;td>&lt;code>.env&lt;/code> 파일로 사용자/호스트 설정 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>배포 확인 로직 추가&lt;/td>
&lt;td>&lt;code>ssh &amp;quot;$HOST&amp;quot; &amp;quot;ls $DEST&amp;quot;&lt;/code>로 전송 검증 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 보안 강화&lt;/td>
&lt;td>&lt;code>scp&lt;/code> → &lt;code>rsync&lt;/code>, &lt;code>ssh key&lt;/code> 연동, &lt;code>Ansible&lt;/code> 등으로 확장&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="6--mlops-실전-연결">6. 🔧 MLOps 실전 연결&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>MLOps 흐름&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>모델 체크포인트 보존&lt;/td>
&lt;td>&lt;code>archive&lt;/code>를 통해 학습 모델 압축 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 서빙 환경 이관&lt;/td>
&lt;td>&lt;code>deploy&lt;/code>를 통해 서버 간 모델 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 리포지터리 백업&lt;/td>
&lt;td>&lt;code>restore&lt;/code>로 필요시 복원 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GitHub Actions + SCP 배포&lt;/td>
&lt;td>배포 자동화 스크립트에 직접 연동 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="7--정리">7. ✅ 정리&lt;/h2>
&lt;blockquote>
&lt;p>단순히 scp로 모델을 보내는 스크립트가 아니라,&lt;/p></description></item><item><title>[셸 스크립트] 02. Data Processing</title><link>https://keonhoban.github.io/mlops-journey/projects/shell_script/02/</link><pubDate>Thu, 24 Apr 2025 23:20:08 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/shell_script/02/</guid><description>&lt;h1 id="-오래된-로그-정리-및-보관">✅ 오래된 로그 정리 및 보관&lt;/h1>
&lt;h2 id="1--목표">1. 🎯 목표&lt;/h2>
&lt;blockquote>
&lt;p>지정한 경로의 오래된 로그 파일을 삭제하거나, 압축 보관하는&lt;/p>
&lt;p>&lt;strong>모드 기반 자동화 스크립트&lt;/strong>입니다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="2--흐름-요약">2. 🧠 흐름 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>입력: [모드] [경로] [로그 위치] [기준 날짜]
↓
[clean] → 오래된 로그 삭제 + 로그 기록
[archive] → 오래된 로그 압축 백업
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="3--전체-코드">3. 🔧 전체 코드&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 인자 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MODE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>1&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clean&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TARGET_PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>2&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/var/log&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOG_DIR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>3&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/backup/logs&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DAYS_OLD&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>4&lt;span style="color:#66d9ef">:-&lt;/span>30&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DATE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date &lt;span style="color:#e6db74">&amp;#39;+%F&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$MODE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;clean&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> find &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -type f -mtime +$DAYS_OLD -exec ls -lh &lt;span style="color:#f92672">{}&lt;/span> &lt;span style="color:#ae81ff">\;&lt;/span> &amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_DIR&lt;span style="color:#e6db74">/cleaned_&lt;/span>$DATE&lt;span style="color:#e6db74">.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> find &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -type f -mtime +$DAYS_OLD -delete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[CLEAN] Done: &lt;/span>$DATE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">elif&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$MODE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;archive&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ARCHIVE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_DIR&lt;span style="color:#e6db74">/logs_&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>DAYS_OLD&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">days_&lt;/span>$DATE&lt;span style="color:#e6db74">.tar.gz&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> find &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -type f -name &lt;span style="color:#e6db74">&amp;#34;*.log&amp;#34;&lt;/span> -mtime +$DAYS_OLD -print | tar czf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -T - &lt;span style="color:#f92672">||&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;No logs to archive&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[ARCHIVE] Done: &lt;/span>$ARCHIVE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Usage: &lt;/span>$0&lt;span style="color:#e6db74"> [clean|archive] [path] [log_dir] [days]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="4--주요-기능-설명">4. 💡 주요 기능 설명&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>MODE&lt;/code> 인자&lt;/td>
&lt;td>clean / archive 모드 분기 → 멀티 용도 스크립트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tar -T -&lt;/code>&lt;/td>
&lt;td>&lt;code>find&lt;/code> 결과를 안전하게 바로 압축&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ls -lh&lt;/code> → 로그 보관&lt;/td>
&lt;td>삭제 전 파일 목록을 보관 → 감사 로그&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Usage&lt;/code> 출력&lt;/td>
&lt;td>잘못된 인자 대응 → 실전 운영 스크립트 기준 충족&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="5--실무-활용--확장-포인트">5. 🛠️ 실무 활용 &amp;amp; 확장 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>확장&lt;/th>
&lt;th>방법&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>crontab 자동화&lt;/td>
&lt;td>&lt;code>0 1 * * * /path/cleaner.sh clean /var/log /backup/logs 30&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장자 다양화&lt;/td>
&lt;td>&lt;code>-name &amp;quot;*.log&amp;quot; -o -name &amp;quot;*.out&amp;quot;&lt;/code> 등으로 확장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>압축 후 업로드&lt;/td>
&lt;td>&lt;code>aws s3 cp &amp;quot;$ARCHIVE&amp;quot; s3://log-backup-bucket/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>logrotate와 연동&lt;/td>
&lt;td>&lt;code>/etc/logrotate.d&lt;/code> → 일정 주기 log 정리 후 이 스크립트 사용&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="6--mlops-실무-연결">6. 🔧 MLOps 실무 연결&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>흐름&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ML 학습 로그 정리&lt;/td>
&lt;td>&lt;code>/opt/ml/logs&lt;/code> 폴더 주기적 clean&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 기록 정리&lt;/td>
&lt;td>&lt;code>mlruns/&lt;/code> 내 오래된 run data 보관&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Kubeflow pipeline 로그 정리&lt;/td>
&lt;td>&lt;code>/var/log/kubeflow/*&lt;/code> 압축 보관&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="7--정리">7. ✅ 정리&lt;/h2>
&lt;blockquote>
&lt;p>단순한 로그 정리가 아니라,&lt;/p></description></item><item><title>[셸 스크립트] 01. Backup</title><link>https://keonhoban.github.io/mlops-journey/projects/shell_script/01/</link><pubDate>Thu, 24 Apr 2025 23:19:56 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/shell_script/01/</guid><description>&lt;h1 id="-하루-한-번-자동-백업">✅ 하루 한 번, 자동 백업&lt;/h1>
&lt;h2 id="1--목표">1. 🎯 목표&lt;/h2>
&lt;blockquote>
&lt;p>서버에서 특정 디렉토리를 매일 자동으로 백업하고,&lt;/p>
&lt;p>로그까지 남기는 &lt;strong>안정적인 자동화 스크립트&lt;/strong>를 작성합니다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="2--전체-흐름-요약">2. 🧠 전체 흐름 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>[백업할 경로] → [압축 tar.gz 생성] → [로그 기록] → [저장 경로 이동]
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="3--전체-스크립트-주석-포함">3. 🔧 전체 스크립트 (주석 포함)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 백업할 경로와 저장 경로 (인자 or 기본값)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SRC_PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>1&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/home/ubuntu&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DST_PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>2&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/backup/ubuntu_backup&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 오늘 날짜 기준 파일명 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ARCHIVE_NAME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date &lt;span style="color:#e6db74">&amp;#39;+%F&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">.tar.gz&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOG_FILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DST_PATH&lt;span style="color:#e6db74">/backup.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실패 시 로그에 남기기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trap &lt;span style="color:#e6db74">&amp;#39;echo &amp;#34;[ERROR] Backup failed!&amp;#34; &amp;gt;&amp;gt; $LOG_FILE&amp;#39;&lt;/span> ERR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 백업 경로 미존재 시 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DST_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실제 백업 수행&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$SRC_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[INFO] Backup started at &lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &amp;gt;&amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tar -czf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DST_PATH&lt;span style="color:#e6db74">/&lt;/span>$ARCHIVE_NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -C &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$SRC_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> . &lt;span style="color:#f92672">||&lt;/span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[INFO] Backup success: &lt;/span>$ARCHIVE_NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &amp;gt;&amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[ERROR] Source path not found: &lt;/span>$SRC_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &amp;gt;&amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="4--핵심-설계-포인트">4. 💡 핵심 설계 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>설계 이유&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>set -euo pipefail&lt;/code>&lt;/td>
&lt;td>예외 발생 즉시 종료 + 예측 불가능한 오류 방지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>${1:-}&lt;/code>&lt;/td>
&lt;td>인자 없을 시 기본값으로 동작 → 재사용성 강화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>trap '...' ERR&lt;/code>&lt;/td>
&lt;td>실패 시 로그 자동 기록 → 디버깅 편의&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tar -czf&lt;/code>&lt;/td>
&lt;td>표준 압축 포맷으로 백업&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>mkdir -p&lt;/code>&lt;/td>
&lt;td>실행 시 폴더 미존재 문제 예방&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="5--실무-적용--확장-아이디어">5. 🛠️ 실무 적용 &amp;amp; 확장 아이디어&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>확장&lt;/th>
&lt;th>방법&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>매일 자동 실행&lt;/td>
&lt;td>&lt;code>crontab -e&lt;/code> → &lt;code>0 2 * * * /path/to/script.sh&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>백업 후 업로드&lt;/td>
&lt;td>&lt;code>aws s3 cp $ARCHIVE_NAME s3://bucket/path/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>환경 설정 분리&lt;/td>
&lt;td>&lt;code>.env&lt;/code> 파일에서 SRC/DST 설정 불러오기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>백업 알림&lt;/td>
&lt;td>&lt;code>mail&lt;/code> or 슬랙 알림 연동&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="6--mlops-실전-연결-포인트">6. 🔧 MLOps 실전 연결 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>흐름&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>학습 결과 자동 백업&lt;/td>
&lt;td>모델 checkpoint 자동 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실험 로그 보존&lt;/td>
&lt;td>&lt;code>~/mlruns&lt;/code> 디렉토리 백업&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>환경 복원 대비&lt;/td>
&lt;td>&lt;code>Dockerfile&lt;/code>, &lt;code>.env&lt;/code> 백업&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="7--정리">7. ✅ 정리&lt;/h2>
&lt;blockquote>
&lt;p>작은 자동화지만, 이 스크립트 하나로&lt;/p></description></item><item><title>[리눅스] 19장. 소프트웨어 패키지 관리</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/19/</link><pubDate>Wed, 23 Apr 2025 15:46:21 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/19/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>리눅스에서 소프트웨어 설치/삭제는&lt;/p>
&lt;p>&lt;strong>패키지 관리자(apt, yum)&lt;/strong> 를 통해 수행되며,&lt;/p>
&lt;p>Docker 환경에서는 &lt;strong>정리/최적화가 필수&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>요약 설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>패키지&lt;/strong>&lt;/td>
&lt;td>실행 파일 + 설정 + 설명서 포함된 SW 묶음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>리포지터리&lt;/strong>&lt;/td>
&lt;td>패키지를 저장해둔 서버 공간 (공식/서드파티/내부)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>포맷&lt;/strong>&lt;/td>
&lt;td>&lt;code>.deb&lt;/code> (Debian/Ubuntu), &lt;code>.rpm&lt;/code> (RHEL/CentOS)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>패키지 관리자&lt;/strong>&lt;/td>
&lt;td>&lt;code>apt&lt;/code>(Debian), &lt;code>yum/dnf&lt;/code>(RHEL)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>삭제 옵션&lt;/strong>&lt;/td>
&lt;td>&lt;code>apt remove&lt;/code>(설정 유지), &lt;code>apt purge&lt;/code>(완전 삭제)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>자동 의존성&lt;/strong>&lt;/td>
&lt;td>대부분 자동 해결 (&lt;code>apt&lt;/code>, &lt;code>yum&lt;/code> 모두 지원)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-설치-흐름-도식-우분투-기준">🖼️ 설치 흐름 도식 (우분투 기준)&lt;/h3>
&lt;pre tabindex="0">&lt;code>[패키지 설치 흐름]
apt update # 목록 갱신
apt install nginx # 설치 (의존성 포함)
apt remove nginx # 제거
apt purge nginx # 완전 삭제
apt autoremove # 불필요한 의존성 정리
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-연결">🔍 실무 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>명령어 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>모델 서버 세팅&lt;/td>
&lt;td>&lt;code>apt install nginx curl jq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능 모니터링 도구&lt;/td>
&lt;td>&lt;code>yum install htop&lt;/code> or &lt;code>apt install glances&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>의존성 확인&lt;/td>
&lt;td>&lt;code>apt-cache depends curl&lt;/code> / &lt;code>yum deplist curl&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서드파티 추가&lt;/td>
&lt;td>&lt;code>add-apt-repository ppa:deadsnakes/ppa&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>패키지 삭제&lt;/td>
&lt;td>&lt;code>apt purge&lt;/code>, &lt;code>yum remove&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-dockerfile-최적화-예시">📦 Dockerfile 최적화 예시&lt;/h3>
&lt;h3 id="-나쁜-예시">❌ 나쁜 예시&lt;/h3>
&lt;pre tabindex="0">&lt;code>RUN apt update
RUN apt install -y python3
RUN apt install -y pip
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>레이어 증가 → 캐시 문제 발생&lt;/li>
&lt;li>용량 증가&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-좋은-예시">✅ 좋은 예시&lt;/h3>
&lt;pre tabindex="0">&lt;code>RUN apt update &amp;amp;&amp;amp; \
apt install -y python3 pip &amp;amp;&amp;amp; \
apt-get clean &amp;amp;&amp;amp; \
rm -rf /var/lib/apt/lists/*
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>1 레이어&lt;/li>
&lt;li>용량 최소화&lt;/li>
&lt;li>캐시 정리 완료&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>&lt;code>apt-get update&lt;/code>는 항상 &lt;code>install&lt;/code> 직전에 한 번만&lt;/li>
&lt;li>설치 후 &lt;code>clean + rm&lt;/code>으로 캐시 정리 → Docker 이미지 최적화&lt;/li>
&lt;li>수동 설치한 바이너리는 &lt;code>apt remove&lt;/code>로 제거 불가&lt;/li>
&lt;li>리포지토리 속도 느릴 경우 → &lt;code>/etc/apt/sources.list&lt;/code> 미러 확인&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-실전-연결">🛠️ MLOps 실전 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>작업&lt;/th>
&lt;th>활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>모델 배포&lt;/td>
&lt;td>&lt;code>apt install nginx curl jq unzip&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>자동화 스크립트&lt;/td>
&lt;td>&lt;code>apt install -y&lt;/code> → 사용자 입력 없이 설치 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Docker 이미지&lt;/td>
&lt;td>&lt;code>RUN apt update &amp;amp;&amp;amp; apt install&lt;/code> 한 줄로 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CI/CD 환경 설정&lt;/td>
&lt;td>공통 패키지 설치 → 테스트 환경 표준화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 모니터링&lt;/td>
&lt;td>&lt;code>htop&lt;/code>, &lt;code>glances&lt;/code>, &lt;code>nmon&lt;/code> 등 설치하여 운영 가시성 확보&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-자주-헷갈리는-포인트">❗ 자주 헷갈리는 포인트&lt;/h3>
&lt;ul>
&lt;li>Dockerfile 내에서는 반드시 &lt;code>update + install&lt;/code>을 &lt;strong>한 줄&lt;/strong>로 작성&lt;/li>
&lt;li>&lt;code>apt purge&lt;/code>만이 설정 파일까지 &lt;strong>완전 삭제&lt;/strong>&lt;/li>
&lt;li>&lt;code>.tar.gz&lt;/code>, &lt;code>wget&lt;/code> 등으로 설치한 수동 패키지는 패키지 관리 도구로 &lt;strong>삭제 불가&lt;/strong>&lt;/li>
&lt;li>&lt;code>yum&lt;/code>은 &lt;code>epel-release&lt;/code> 추가 후 다양한 패키지 설치 가능&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>패키지 관리자는 인프라 자동화의 핵심&lt;/p></description></item><item><title>[리눅스] 18장. 버전 관리 시스템</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/18/</link><pubDate>Wed, 23 Apr 2025 15:46:19 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/18/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>코드 / 데이터 / 모델 / 실험을 각각 버전 관리해야&lt;/p>
&lt;p>&lt;strong>협업, 추적, 재현 가능성&lt;/strong>을 확보할 수 있다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>도구&lt;/th>
&lt;th>역할&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Git&lt;/strong>&lt;/td>
&lt;td>코드, 설정 파일 버전 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>DVC&lt;/strong>&lt;/td>
&lt;td>대용량 데이터/모델 파일 추적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Git-LFS&lt;/strong>&lt;/td>
&lt;td>Git이 추적 못하는 대용량 파일 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>MLflow&lt;/strong>&lt;/td>
&lt;td>실험 기록, 모델 저장소, 배포 관리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-핵심-흐름-구조">🖼️ 핵심 흐름 구조&lt;/h3>
&lt;pre tabindex="0">&lt;code>[Git + DVC + MLflow 실전 흐름]
코드 변경 → Git commit
↓
데이터/모델 → DVC add → .dvc 파일만 Git에 commit
↓
실험 기록 → MLflow log, Git tag
↓
협업 → Git push + dvc push
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-시나리오-예시">🔍 실전 시나리오 예시&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>작업&lt;/th>
&lt;th>명령어 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>브랜치 생성&lt;/td>
&lt;td>&lt;code>git checkout -b exp-v2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 추적&lt;/td>
&lt;td>&lt;code>dvc add models/model.pkl&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커밋 → 실험 기록&lt;/td>
&lt;td>&lt;code>git commit&lt;/code> → &lt;code>mlflow run . -P param=val&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>공유&lt;/td>
&lt;td>&lt;code>git push&lt;/code>, &lt;code>dvc push&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>롤백&lt;/td>
&lt;td>&lt;code>git revert&lt;/code>, &lt;code>dvc checkout&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>&lt;code>.dvc&lt;/code>, 설정 파일만 Git에 commit → &lt;strong>데이터/모델은 DVC 전용&lt;/strong>&lt;/li>
&lt;li>&lt;code>reset&lt;/code>은 강제 되돌림, &lt;code>revert&lt;/code>는 되돌리는 &lt;strong>기록을 남김&lt;/strong>&lt;/li>
&lt;li>&lt;code>git diff --cached&lt;/code> → &lt;strong>commit 직전 상태 확인&lt;/strong>&lt;/li>
&lt;li>실험마다 브랜치 만들면, 추적과 복원이 쉬움&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>코드 변경 추적&lt;/strong>&lt;/td>
&lt;td>&lt;code>git diff&lt;/code>, &lt;code>git log&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터 버전 관리&lt;/strong>&lt;/td>
&lt;td>&lt;code>dvc add&lt;/code>, &lt;code>.dvc&lt;/code>로 추적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실험 기록 연동&lt;/strong>&lt;/td>
&lt;td>MLflow run + Git tag로 버전 기록&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 공유&lt;/strong>&lt;/td>
&lt;td>&lt;code>dvc push&lt;/code>, S3 remote로 연동&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>협업 정리&lt;/strong>&lt;/td>
&lt;td>Git 브랜치 = 실험 단위 → 실험 병렬 관리 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-흐름-예제">🧪 실전 흐름 예제&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실험 브랜치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout -b exp-lr-0.01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 모델 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python train.py --lr&lt;span style="color:#f92672">=&lt;/span>0.01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dvc add models/model_lr0.01.pkl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Git 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add models/model_lr0.01.pkl.dvc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#e6db74">&amp;#34;lr=0.01 실험 모델&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># MLflow 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mlflow run . -P lr&lt;span style="color:#f92672">=&lt;/span>0.01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 공유&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> dvc push
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-자주-헷갈리는-포인트">❗ 자주 헷갈리는 포인트&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>오해&lt;/th>
&lt;th>진실&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Git만으로 모든 파일 관리 가능&lt;/td>
&lt;td>❌ 모델/데이터는 DVC 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>reset&lt;/code>은 안전&lt;/td>
&lt;td>❌ 공유 중이라면 &lt;code>revert&lt;/code> 사용 권장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>revert&lt;/code>는 커밋 삭제&lt;/td>
&lt;td>❌ 되돌리는 새 커밋을 생성함&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>Git은 코드/설정의 중심,&lt;/p></description></item><item><title>[리눅스] 17장. 아카이브와 압축</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/17/</link><pubDate>Tue, 22 Apr 2025 18:37:50 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/17/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>아카이브 = 묶기&lt;/p>
&lt;p>&lt;strong>압축 = 용량 줄이기&lt;/strong>&lt;/p>
&lt;p>리눅스에서는 보통 &lt;code>tar + gzip&lt;/code> 같이 &lt;strong>조합해서 사용&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>tar&lt;/strong>&lt;/td>
&lt;td>여러 파일/디렉터리 &lt;strong>하나로 묶는 도구&lt;/strong> (속성 보존)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>gzip/bzip2/xz/zstd&lt;/strong>&lt;/td>
&lt;td>용량 줄이는 &lt;strong>압축 도구들&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>zip&lt;/strong>&lt;/td>
&lt;td>아카이브 + 압축 + 암호화까지 한 번에 (Windows 친화적)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>tar.gz&lt;/strong>&lt;/td>
&lt;td>가장 일반적인 &lt;strong>리눅스용 백업/배포 형식&lt;/strong>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-흐름도-시각화">🖼️ 흐름도 시각화&lt;/h3>
&lt;pre tabindex="0">&lt;code>[아카이브 &amp;amp; 압축 흐름]
📁 파일들
↓
tar → archive.tar
↓
gzip / bzip2 / zstd → archive.tar.gz, .bz2, .zst
or
zip → archive.zip
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-연결">🔍 실무 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>목적&lt;/th>
&lt;th>명령어&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>모델 디렉터리 백업&lt;/td>
&lt;td>&lt;code>tar czf model.tar.gz /opt/ml/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>로그 압축&lt;/td>
&lt;td>&lt;code>gzip /var/log/mlflow.log&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>고압축 백업&lt;/td>
&lt;td>&lt;code>tar -I zstd -cf model.tar.zst model/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>압축 후 무결성 확인&lt;/td>
&lt;td>&lt;code>sha256sum model.tar.zst &amp;gt; model.tar.zst.sha256&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>암호화 필요 시&lt;/td>
&lt;td>&lt;code>gpg -c model.tar.zst&lt;/code> → &lt;code>.gpg&lt;/code> 생성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ZIP 패키징 (호환성↑)&lt;/td>
&lt;td>&lt;code>zip -r model.zip model/ config/&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-압축-전략-요약">💡 실전 압축 전략 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>추천 방식&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>속도 &amp;amp; 압축률 밸런스&lt;/strong>&lt;/td>
&lt;td>&lt;code>tar + zstd&lt;/code> (실무 최적)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>이식성 &amp;amp; 단일 파일 전송&lt;/strong>&lt;/td>
&lt;td>&lt;code>zip&lt;/code>, &lt;code>tar.gz&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>보안 전송&lt;/strong>&lt;/td>
&lt;td>&lt;code>tar + gpg&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>단일 파일 압축&lt;/strong>&lt;/td>
&lt;td>&lt;code>gzip&lt;/code>, &lt;code>bzip2&lt;/code>, &lt;code>xz&lt;/code> (속도·압축률 선택)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-체크리스트">✅ 실전 체크리스트&lt;/h3>
&lt;ul>
&lt;li>&lt;code>tar czf&lt;/code> = &lt;strong>묶기(c) + 압축(z) + 파일(f)&lt;/strong>&lt;/li>
&lt;li>&lt;code>gzip&lt;/code>, &lt;code>bzip2&lt;/code>는 &lt;strong>단일 파일 전용&lt;/strong> → &lt;code>tar&lt;/code>과 함께 써야 디렉터리 가능&lt;/li>
&lt;li>&lt;code>zstd&lt;/code>는 &lt;strong>속도·압축률 모두 우수&lt;/strong> → 최근 실무에서 각광&lt;/li>
&lt;li>&lt;code>sha256sum&lt;/code>, &lt;code>gpg&lt;/code>는 &lt;strong>무결성 + 보안 확보&lt;/strong>용&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-헷갈리기-쉬운-포인트">⚠️ 헷갈리기 쉬운 포인트&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>오해&lt;/th>
&lt;th>실제 의미&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>gzip&lt;/code>만으로 디렉터리 압축 가능&lt;/td>
&lt;td>❌ &lt;code>tar&lt;/code>로 묶어야 압축 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>zip&lt;/code>이 무조건 좋다&lt;/td>
&lt;td>❌ Linux에서는 &lt;code>tar.gz&lt;/code>가 더 적합함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>압축이 항상 빠르다&lt;/td>
&lt;td>❌ CPU 리소스 많이 씀, 전송 속도와 트레이드오프 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>모델 백업 &amp;amp; 배포&lt;/strong>&lt;/td>
&lt;td>&lt;code>tar czf model.tar.gz&lt;/code> → S3 업로드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>로그 정리&lt;/strong>&lt;/td>
&lt;td>&lt;code>gzip&lt;/code>, &lt;code>cron&lt;/code>으로 주기적 압축&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실험 결과 패키징&lt;/strong>&lt;/td>
&lt;td>&lt;code>zip -r results.zip result.csv params.yaml&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>보안 데이터 암호화&lt;/strong>&lt;/td>
&lt;td>&lt;code>tar&lt;/code> + &lt;code>gpg&lt;/code> 조합&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>버전 관리 연동&lt;/strong>&lt;/td>
&lt;td>&lt;code>tar czf model_v1.2.tar.gz&lt;/code> + Git tag로 연결&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>tar는 묶고, gzip/zstd는 줄인다.&lt;/p></description></item><item><title>[리눅스] 16장. 셸 스크립트 활용</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/16/</link><pubDate>Tue, 22 Apr 2025 18:37:48 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/16/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>반복되는 작업을 자동화하고, 예외 상황에서도 안정적이고 빠르게 처리할 수 있는 경량화된 자동화 도구&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>주요 기능&lt;/strong>&lt;/td>
&lt;td>파일 처리, 로그 분석, 인자 제어, 오류 감지 및 정리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 개선 팁&lt;/strong>&lt;/td>
&lt;td>&lt;code>egrep&lt;/code>, &lt;code>awk&lt;/code>, &lt;code>xargs -0&lt;/code>, &lt;code>trap&lt;/code> 등 실전 활용 명령어 중심&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>스크립트 안정화 요소&lt;/strong>&lt;/td>
&lt;td>&lt;code>usage 함수&lt;/code>, &lt;code>local&lt;/code>, &lt;code>IFS&lt;/code>, &lt;code>set -euo pipefail&lt;/code>, &lt;code>trap&lt;/code> 활용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>공백 파일 안전 처리&lt;/strong>&lt;/td>
&lt;td>&lt;code>IFS=$'\n'&lt;/code>, `find -print0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-도구-비교-요약">🧪 도구 비교 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>작업&lt;/th>
&lt;th>추천 도구&lt;/th>
&lt;th>이유&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>여러 단어 포함된 줄 필터링&lt;/td>
&lt;td>&lt;code>egrep&lt;/code>&lt;/td>
&lt;td>가장 빠름. 단순 검색 최적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>조건 + 계산 or 포맷&lt;/td>
&lt;td>&lt;code>awk&lt;/code>&lt;/td>
&lt;td>필터링 + 후처리까지 한 번에&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>안전한 파일 루프&lt;/td>
&lt;td>&lt;code>find -print0&lt;/code> + &lt;code>xargs -0&lt;/code>&lt;/td>
&lt;td>공백 포함 파일 안전 처리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-스크립트-구조-흐름">🖼️ 스크립트 구조 흐름&lt;/h3>
&lt;pre tabindex="0">&lt;code>[기본 구조]
1. 인자 검사: usage 안내
2. 핵심 함수: 변수는 local
3. 파일 처리: find + xargs + grep/awk
4. 에러 출력: 1&amp;gt;&amp;amp;2
5. 종료 처리: trap &amp;#39;cleanup&amp;#39; EXIT
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>local&lt;/code>&lt;/td>
&lt;td>함수 내 변수 범위 제한&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>trap&lt;/code>&lt;/td>
&lt;td>종료 시 임시 파일/자원 정리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>IFS=$'\n'&lt;/code>&lt;/td>
&lt;td>줄바꿈만 기준 → 공백 포함 파일 처리 안전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rm -rf &amp;quot;${DIR:?}/*&amp;quot;&lt;/code>&lt;/td>
&lt;td>&lt;code>:?&lt;/code>로 빈 변수 삭제 방지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>read -r -d ''&lt;/code>&lt;/td>
&lt;td>null 문자 기준 루프 (safe loop)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실무-예시-요약">🔧 실무 예시 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>스크립트&lt;/th>
&lt;th>역할&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>diary.sh&lt;/code>&lt;/td>
&lt;td>날짜별 일기 자동 생성 + 열기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tree.sh&lt;/code>&lt;/td>
&lt;td>디렉터리 트리 구조 출력&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>findgrep.sh&lt;/code>&lt;/td>
&lt;td>키워드 검색 + 에러 출력 분리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>deploy.sh&lt;/code>&lt;/td>
&lt;td>인자 기반 배포 스크립트 (with usage, trap)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-mlops-실전-연결">🛠️ MLOps 실전 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>스크립트 활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>학습 자동화&lt;/strong>&lt;/td>
&lt;td>&lt;code>train.sh --epochs 100&lt;/code> 구조로 CLI 설계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>로그 분석&lt;/strong>&lt;/td>
&lt;td>&lt;code>awk '/error/{print NR&amp;quot;: &amp;quot;$0}' log.txt&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>서버 초기화&lt;/strong>&lt;/td>
&lt;td>&lt;code>trap&lt;/code> 활용하여 &lt;code>/opt/ml&lt;/code> 정리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CSV 필터링&lt;/strong>&lt;/td>
&lt;td>&lt;code>while IFS=, read&lt;/code> → 메타데이터 추출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 파이프라인&lt;/strong>&lt;/td>
&lt;td>&lt;code>deploy.sh -e staging -v v1.2&lt;/code> 식으로 확장&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-오해-방지">⚠️ 오해 방지&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>주의 사항&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>$(ls)&lt;/code>&lt;/td>
&lt;td>공백/개행 포함 시 오류 위험&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>grep&lt;/code> 반복&lt;/td>
&lt;td>프로세스 다수 → 느림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>trap&lt;/code> 생략&lt;/td>
&lt;td>Ctrl+C 종료 시 자원 누수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>getopts&lt;/code>&lt;/td>
&lt;td>긴 옵션 (&lt;code>--long-option&lt;/code>) 직접 파싱 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>셸 스크립트는 작지만 강력한 자동화 도구다.&lt;/p></description></item><item><title>[리눅스] 15장. 셸 스크립트 기초</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/15/</link><pubDate>Mon, 21 Apr 2025 20:23:58 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/15/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>셸 스크립트는 명령어 자동화 도구이자,&lt;/p>
&lt;p>실전에서는 &amp;ldquo;작고 빠른 자동화 엔진&amp;rdquo; 역할&lt;/p>&lt;/blockquote>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>핵심 요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>스크립트 구조&lt;/strong>&lt;/td>
&lt;td>명령어 나열 + 흐름 제어 (&lt;code>if&lt;/code>, &lt;code>for&lt;/code>, &lt;code>case&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>변수&lt;/strong>&lt;/td>
&lt;td>&lt;code>name=값&lt;/code>, &lt;code>&amp;quot;${var}&amp;quot;&lt;/code>, &lt;code>${var:-기본값}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>인자 처리&lt;/strong>&lt;/td>
&lt;td>&lt;code>$1&lt;/code>, &lt;code>$#&lt;/code>, &lt;code>&amp;quot;$@&amp;quot;&lt;/code>, &lt;code>getopts&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>조건문&lt;/strong>&lt;/td>
&lt;td>&lt;code>[[ 조건 ]]&lt;/code> 권장 (&lt;code>==&lt;/code>, &lt;code>&amp;amp;&amp;amp;&lt;/code>, &lt;code>=~&lt;/code>, &lt;code>-n&lt;/code>, &lt;code>-z&lt;/code> 등 지원)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>고급 문법&lt;/strong>&lt;/td>
&lt;td>&lt;code>trap&lt;/code>, &lt;code>IFS&lt;/code>, &lt;code>while read&lt;/code>, 산술 for문 등&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실행-흐름-도식화">🖼️ 실행 흐름 도식화&lt;/h3>
&lt;pre tabindex="0">&lt;code>[스크립트 기본 실행 구조]
입력 인자 → 변수 저장 → 조건문/반복문 실행 → 출력 or 파일 처리 → 종료 시 cleanup(trap)
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-흐름-예시">🔍 실전 흐름 예시&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>스크립트 흐름 요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>인자 부족 시 종료&lt;/strong>&lt;/td>
&lt;td>&lt;code>[ &amp;quot;$#&amp;quot; -lt 1 ] → echo 사용법 → exit 1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>로그 자동 백업&lt;/strong>&lt;/td>
&lt;td>&lt;code>cp log.txt log_$(date +%F_%H%M).bak&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CLI 옵션 처리&lt;/strong>&lt;/td>
&lt;td>&lt;code>getopts&lt;/code>로 &lt;code>-e&lt;/code>, &lt;code>-l&lt;/code> 등 파라미터 받기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>비정상 종료 처리&lt;/strong>&lt;/td>
&lt;td>&lt;code>trap &amp;quot;정리작업&amp;quot; EXIT&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CSV 반복 처리&lt;/strong>&lt;/td>
&lt;td>&lt;code>while IFS=',' read ... done &amp;lt; file.csv&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-체크리스트">✅ 실전 체크리스트&lt;/h3>
&lt;ul>
&lt;li>&lt;code>#!/usr/bin/env bash&lt;/code> 사용 여부 ✅&lt;/li>
&lt;li>인자 유효성 검사 (&lt;code>$#&lt;/code>, &lt;code>$1&lt;/code>) ✅&lt;/li>
&lt;li>&lt;code>[[ ]]&lt;/code>로 조건문 통일 ✅&lt;/li>
&lt;li>쿼팅 필수: &lt;code>&amp;quot;${var}&amp;quot;&lt;/code>, &lt;code>&amp;quot;$@&amp;quot;&lt;/code> ✅&lt;/li>
&lt;li>&lt;code>trap&lt;/code>, &lt;code>getopts&lt;/code>, &lt;code>IFS&lt;/code> 사용 경험 ✅&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-실수-방지-포인트">⚠️ 실수 방지 포인트&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>주의 설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>&amp;quot;${@}&amp;quot;&lt;/code> vs &lt;code>&amp;quot;${*}&amp;quot;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;quot;${@}&amp;quot;&lt;/code>는 각 인자 개별 처리 (정확한 전달)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>[[ ... ]]&lt;/code> 추천 이유&lt;/td>
&lt;td>&lt;code>=~&lt;/code>, &lt;code>&amp;amp;&amp;amp;&lt;/code>, `&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>trap&lt;/code> 미사용 시 문제&lt;/td>
&lt;td>임시 파일/세션 정리 누락 가능성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>getopts&lt;/code> 한계&lt;/td>
&lt;td>&lt;code>--long-option&lt;/code> 지원 안 됨 → 직접 파싱 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-mlops-실전-연결">🛠️ MLOps 실전 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>시나리오&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>학습 파라미터 전달&lt;/strong>&lt;/td>
&lt;td>&lt;code>./train.sh -e 50 -l 0.001&lt;/code> → &lt;code>getopts&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>로그 백업&lt;/strong>&lt;/td>
&lt;td>&lt;code>mv log.txt log_$(date +%F_%H%M).txt&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>임시 파일 정리&lt;/strong>&lt;/td>
&lt;td>&lt;code>trap &amp;quot;rm -f /tmp/*.log&amp;quot; EXIT&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>대량 CSV 처리&lt;/strong>&lt;/td>
&lt;td>&lt;code>for file in data/*.csv; do ... done&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>오류 요약 출력&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep ERROR train.log &amp;gt; error.log&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>셸 스크립트는 실무의 반복작업을 자동화하고,&lt;/p></description></item><item><title>[리눅스] 14장. 셸 스크립트 작성</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/14/</link><pubDate>Mon, 21 Apr 2025 20:23:56 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/14/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>셸 스크립트는 반복되는 명령어를 자동화하는&lt;/p>
&lt;p>가장 기본이자 강력한 도구&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>셸 스크립트&lt;/strong>&lt;/td>
&lt;td>명령어를 파일로 저장해 실행 (&lt;code>.sh&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실행 방법&lt;/strong>&lt;/td>
&lt;td>&lt;code>chmod +x&lt;/code> 후 &lt;code>./script.sh&lt;/code> 또는 &lt;code>bash script.sh&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>source 실행&lt;/strong>&lt;/td>
&lt;td>현재 셸에서 실행 → 환경 변수 유지됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PATH 등록&lt;/strong>&lt;/td>
&lt;td>&lt;code>~/bin&lt;/code> 등 등록 시 어느 위치에서든 실행 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SSH 키 인증&lt;/strong>&lt;/td>
&lt;td>비밀번호 없이 자동 접속 → 스크립트 자동화 필수 구성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실행-흐름-요약-도식화">🖼️ 실행 흐름 요약 (도식화)&lt;/h3>
&lt;pre tabindex="0">&lt;code>[스크립트 작성]
↓
[실행 권한 부여: chmod +x]
↓
[실행 방식]
├─ ./script.sh → 서브 셸 (권장)
├─ bash script.sh → 명시적 실행
└─ source script.sh → 현재 셸 (환경 반영)
[확장]
├─ ~/bin 등록 → PATH로 어디서든 실행
└─ SSH 키 → 서버 자동 접속 스크립트화
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-시나리오-연결">🔍 실전 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>활용 예&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>디렉터리 정리 자동화&lt;/strong>&lt;/td>
&lt;td>로그/임시 파일 삭제 스크립트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>환경 설정 일괄 적용&lt;/strong>&lt;/td>
&lt;td>&lt;code>source ~/env.sh&lt;/code> → 변수 한 번에 적용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>다중 서버 접속&lt;/strong>&lt;/td>
&lt;td>SSH 키 기반 루프 스크립트로 순차 로그인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PATH 설정&lt;/strong>&lt;/td>
&lt;td>자주 쓰는 스크립트를 &lt;code>~/bin&lt;/code>에 넣고 등록&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>&lt;code>#!/usr/bin/env bash&lt;/code> → OS 이식성 확보&lt;/li>
&lt;li>&lt;code>chmod +x&lt;/code> 필수 → &lt;code>./&lt;/code> 실행 시&lt;/li>
&lt;li>&lt;code>source&lt;/code>는 현재 셸 변경 가능 → &lt;strong>주의 필요&lt;/strong>&lt;/li>
&lt;li>PATH 등록 후에는 셸 재시작 또는 &lt;code>source ~/.bashrc&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>실험 디렉터리 초기화&lt;/strong>&lt;/td>
&lt;td>&lt;code>clean_experiment.sh&lt;/code>로 자동 정리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>학습 환경 구성&lt;/strong>&lt;/td>
&lt;td>&lt;code>source mlops_env.sh&lt;/code> → 환경 변수 자동 적용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 서버 자동 배포&lt;/strong>&lt;/td>
&lt;td>&lt;code>deploy.sh&lt;/code> + SSH 키로 무중단 배포&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>서버 상태 수집&lt;/strong>&lt;/td>
&lt;td>&lt;code>check_resources.sh&lt;/code>로 메모리/디스크 확인 자동화&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-자주-헷갈리는-포인트">❗ 자주 헷갈리는 포인트&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>오해&lt;/th>
&lt;th>실제 의미&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>#!/bin/bash&lt;/code>만 써야 한다&lt;/td>
&lt;td>&lt;code>#!/usr/bin/env bash&lt;/code>가 더 유연하고 이식성 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>source&lt;/code>는 항상 편리하다&lt;/td>
&lt;td>&lt;strong>현재 셸에 직접 영향&lt;/strong>, 실수 시 복구 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>chmod +x&lt;/code> 없이 실행 가능&lt;/td>
&lt;td>&lt;code>bash script.sh&lt;/code>는 가능하나 &lt;code>./&lt;/code>은 불가&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PATH 등록 = 즉시 실행&lt;/td>
&lt;td>셸 재시작 or &lt;code>source ~/.bashrc&lt;/code> 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>셸 스크립트는 MLOps 자동화의 첫 도구이며,&lt;/p></description></item><item><title>[리눅스] 13장. 고급 텍스트 처리</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/13/</link><pubDate>Fri, 18 Apr 2025 16:36:39 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/13/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>sed와 awk는 리눅스 텍스트 처리의 양대 도구&lt;/p>
&lt;p>로그 분석, 전처리 자동화, 필드 연산 등에서 강력하게 활용된다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>핵심 설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>sed&lt;/strong>&lt;/td>
&lt;td>&lt;strong>한 줄씩 읽어 수정&lt;/strong>: 치환, 삭제, 추출에 최적화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>awk&lt;/strong>&lt;/td>
&lt;td>&lt;strong>패턴 필터링 + 필드 출력&lt;/strong>: 조건 처리, 연산, 요약까지 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-구조도--예시">🖼️ 구조도 &amp;amp; 예시&lt;/h3>
&lt;pre tabindex="0">&lt;code>[sed 기본 구조]
sed &amp;#39;s/old/new/g&amp;#39; file.txt # 문자열 치환
sed &amp;#39;1d&amp;#39; file.txt # 첫 줄 삭제
[awk 기본 구조]
awk &amp;#39;{print $1, $3}&amp;#39; file.txt # 첫 번째 + 세 번째 필드 출력
awk &amp;#39;$3 &amp;gt; 90 {print $1}&amp;#39; # 조건 기반 필터링
awk -F &amp;#39;,&amp;#39; &amp;#39;{print $NF}&amp;#39; file.csv # CSV에서 마지막 필드
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-시나리오-연결">🔍 실전 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>명령어&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>에러 로그 치환&lt;/strong>&lt;/td>
&lt;td>&lt;code>sed 's/error/ERROR/g' log.txt&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CSV 헤더 제거&lt;/strong>&lt;/td>
&lt;td>&lt;code>sed '1d' data.csv&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>정확도 추출&lt;/strong>&lt;/td>
&lt;td>&lt;code>awk -F ',' '{print $3}' scores.csv&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 필터링&lt;/strong>&lt;/td>
&lt;td>&lt;code>awk -F ',' '$3 &amp;gt;= 0.9 {print $1}'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>마지막 필드 출력&lt;/strong>&lt;/td>
&lt;td>&lt;code>awk '{print $NF}' mlflow.log&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>sed&lt;/code>는 &lt;strong>간단한 치환/삭제&lt;/strong>에 강력&lt;/p></description></item><item><title>[리눅스] 12장. 정규 표현식</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/12/</link><pubDate>Thu, 17 Apr 2025 22:28:31 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/12/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>grep은 텍스트 패턴 필터링 도구,&lt;/p>
&lt;p>정규 표현식은 &lt;strong>특정 규칙의 문자열을 탐색·추출&lt;/strong>하는 언어&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>요약 설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>grep&lt;/strong>&lt;/td>
&lt;td>텍스트 내 &lt;strong>패턴 검색&lt;/strong> 도구, 정규식 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>기본 정규식&lt;/strong>&lt;/td>
&lt;td>&lt;code>^&lt;/code>, &lt;code>$&lt;/code>, &lt;code>.&lt;/code>, &lt;code>[ ]&lt;/code>, &lt;code>[^ ]&lt;/code>, &lt;code>*&lt;/code> 등&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>확장 정규식 (-E)&lt;/strong>&lt;/td>
&lt;td>&lt;code>+&lt;/code>, &lt;code>{m,n}&lt;/code>, &lt;code>()&lt;/code> 등 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주요 패턴 예시&lt;/strong>&lt;/td>
&lt;td>&lt;code>'error$'&lt;/code>, &lt;code>^[A-Z]&lt;/code>, &lt;code>ID[0-9]{2,4}&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-정규식--grep-흐름도">🖼️ 정규식 &amp;amp; grep 흐름도&lt;/h3>
&lt;pre tabindex="0">&lt;code>[정규 표현식 작동 예]
^Err → &amp;#39;Err&amp;#39;로 시작하는 줄
error$ → &amp;#39;error&amp;#39;로 끝나는 줄
[a-z]+ → 소문자 1회 이상
[^0-9] → 숫자가 아닌 문자
x{2,4} → &amp;#39;x&amp;#39;가 2~4회 반복
[grep 핵심 옵션]
-i → 대소문자 무시
-n → 줄 번호 표시
-v → 부정 조건
-E → 확장 정규식 사용
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-연결">🔍 실무 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>명령어 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>오류 로그만 보기&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep '^ERROR' mlflow.log&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>훈련 완료 라인 추출&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep 'Training.*Done' log.txt&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>반복된 실패 감지&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep -E '(Fail){2,}' result.log&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>ID 패턴 추출&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep -E 'ID[0-9]{3,4}' data.txt&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>는 &amp;ldquo;0회 이상&amp;rdquo; → &lt;code>be*er&lt;/code>: &lt;code>br&lt;/code>, &lt;code>beer&lt;/code>, &lt;code>beeeer&lt;/code> 전부 매치됨&lt;/li>
&lt;li>&lt;code>+&lt;/code>, &lt;code>{}&lt;/code> 등은 &lt;code>grep -E&lt;/code> 필수&lt;/li>
&lt;li>&lt;code>.&lt;/code>는 줄바꿈 제외 → 여러 줄 매치는 &lt;code>grep -P&lt;/code> 또는 &lt;code>awk&lt;/code> 활용&lt;/li>
&lt;li>&lt;code>grep&lt;/code> 결과는 &lt;code>less&lt;/code>, &lt;code>cut&lt;/code>, &lt;code>awk&lt;/code> 등과 파이프 연결 가능&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>오류 탐지 자동화&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep -E 'ERROR$' train.log&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>학습 로그 필터링&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep '^Epoch [0-9]+' log.txt&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 버전 감지&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep -E 'model_v[0-9]+'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>설정 파라미터 추출&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep -n '^port' mlflow.conf&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-자주-헷갈리는-포인트">❗ 자주 헷갈리는 포인트&lt;/h3>
&lt;ul>
&lt;li>&lt;code>grep&lt;/code> 기본은 &lt;strong>정규식 일부만 지원&lt;/strong> → &lt;code>E&lt;/code>로 확장 필요&lt;/li>
&lt;li>는 반드시 &lt;strong>이전 문자 기준&lt;/strong> (예: &lt;code>e*&lt;/code>는 &lt;code>e&lt;/code> 반복)&lt;/li>
&lt;li>&lt;code>.&lt;/code>는 &lt;strong>모든 문자&lt;/strong>, 줄바꿈은 제외됨 (&lt;code>grep&lt;/code> 한계점 주의)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>정규표현식은 텍스트 속 숨은 규칙을 찾는 언어이며,&lt;/p></description></item><item><title>[리눅스] 11장. 텍스트 처리 명령어</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/11/</link><pubDate>Wed, 16 Apr 2025 16:25:29 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/11/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>텍스트 처리 명령어는 로그 분석, 전처리, 구성 비교 등&lt;/p>
&lt;p>&lt;strong>실무 자동화&lt;/strong>의 기본 도구&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>기능&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>wc&lt;/code>&lt;/td>
&lt;td>행/단어/바이트 수 출력 (&lt;code>-l&lt;/code>, &lt;code>-w&lt;/code>, &lt;code>-c&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>sort&lt;/code>&lt;/td>
&lt;td>행 정렬 (&lt;code>-n&lt;/code>: 숫자, &lt;code>-r&lt;/code>: 역순)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>uniq&lt;/code>&lt;/td>
&lt;td>중복 제거 (&lt;code>-c&lt;/code>: 개수 출력) → &lt;code>sort&lt;/code>와 함께 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>cut&lt;/code>&lt;/td>
&lt;td>열 추출 (&lt;code>-d&lt;/code> 구분자, &lt;code>-f&lt;/code> 필드)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tr&lt;/code>&lt;/td>
&lt;td>문자 치환 (&lt;code>a-z → A-Z&lt;/code> 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tail&lt;/code>&lt;/td>
&lt;td>끝부분 N줄 출력, &lt;code>-f&lt;/code>: 실시간 모니터링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>diff&lt;/code>&lt;/td>
&lt;td>파일 간 차이 비교 (설정 변경 감지)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-핵심-도식화">🖼️ 핵심 도식화&lt;/h3>
&lt;pre tabindex="0">&lt;code>[CSV 전처리 흐름 예시]
raw.csv
↓ cut -d &amp;#39;,&amp;#39; -f1,3
↓ sort | uniq -c
↓ &amp;gt; cleaned.csv
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[실시간 로그 처리]
tail -f train.log
| grep &amp;#34;loss&amp;#34;
| tr &amp;#39;a-z&amp;#39; &amp;#39;A-Z&amp;#39;
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-시나리오-연결">🔍 실전 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>목적&lt;/th>
&lt;th>명령어 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>데이터 크기 확인&lt;/strong>&lt;/td>
&lt;td>&lt;code>wc -l train.csv&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>중복 로그 카운트&lt;/strong>&lt;/td>
&lt;td>&lt;code>sort log.txt&lt;/code> | &lt;code>uniq -c&lt;/code> | &lt;code>sort -nr&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CSV 열 추출&lt;/strong>&lt;/td>
&lt;td>&lt;code>cut -d ',' -f2,5 data.csv&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실시간 학습 모니터링&lt;/strong>&lt;/td>
&lt;td>&lt;code>tail -f train.log&lt;/code> + &lt;code>grep&lt;/code>, &lt;code>tr&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>설정 변경 추적&lt;/strong>&lt;/td>
&lt;td>&lt;code>diff config1.yaml config2.yaml&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>&lt;code>uniq&lt;/code>은 &lt;strong>반드시 정렬 후 사용&lt;/strong>&lt;/li>
&lt;li>&lt;code>cut&lt;/code>은 구분자/필드 번호 정확히 지정&lt;/li>
&lt;li>&lt;code>tail -f&lt;/code>는 로그 확인 필수 도구&lt;/li>
&lt;li>&lt;code>tr&lt;/code>은 단순 문자 변환만 가능 → 복잡한 처리에는 &lt;code>awk&lt;/code>, &lt;code>sed&lt;/code> 사용&lt;/li>
&lt;li>&lt;code>diff&lt;/code>는 Git 외에도 &lt;strong>환경 설정 변경 추적&lt;/strong>에 유용&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>로그 용량 점검&lt;/strong>&lt;/td>
&lt;td>&lt;code>wc -l mlflow.log&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 결과 전처리&lt;/strong>&lt;/td>
&lt;td>&lt;code>cut&lt;/code>, &lt;code>sort&lt;/code>, &lt;code>uniq&lt;/code> 조합으로 결과 통계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CSV 파이프라인 구축&lt;/strong>&lt;/td>
&lt;td>&lt;code>cut&lt;/code>으로 feature 선택, 셸 스크립트와 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>학습 상태 추적&lt;/strong>&lt;/td>
&lt;td>&lt;code>tail -f train.log&lt;/code>로 실시간 loss 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>설정 변경 감지&lt;/strong>&lt;/td>
&lt;td>&lt;code>diff mlflow.conf mlflow-prod.conf&lt;/code> → 배포 전 확인&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-오해-방지-포인트">❗ 오해 방지 포인트&lt;/h3>
&lt;ul>
&lt;li>&lt;code>uniq&lt;/code>은 &lt;strong>연속된 중복만 제거&lt;/strong> → &lt;code>sort&lt;/code> 선행 필요&lt;/li>
&lt;li>&lt;code>tr&lt;/code>은 &lt;strong>문자 단위 치환&lt;/strong> → 문자열/열 단위는 불가&lt;/li>
&lt;li>&lt;code>tail -f&lt;/code>는 오래 켜두면 &lt;strong>리소스 소모&lt;/strong> 주의&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>텍스트 처리 명령어는 전처리, 분석, 디버깅, 자동화의 기반&lt;/p></description></item><item><title>[리눅스] 10장. 표준 입출력, 리다이렉션, 파이프라인</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/10/</link><pubDate>Tue, 15 Apr 2025 18:45:00 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/10/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>셸에서 실행 결과는 표준 출력/에러로 나뉘며,&lt;/p>
&lt;p>&lt;strong>리다이렉션과 파이프라인&lt;/strong>은 이 흐름을 &lt;strong>제어하고 연결&lt;/strong>하는 도구다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>핵심 설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>stdin (0)&lt;/strong>&lt;/td>
&lt;td>입력: 키보드, 파일 (&lt;code>&amp;lt; file&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>stdout (1)&lt;/strong>&lt;/td>
&lt;td>정상 출력 결과 (&lt;code>&amp;gt; result.log&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>stderr (2)&lt;/strong>&lt;/td>
&lt;td>에러 메시지 (&lt;code>2&amp;gt; error.log&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>리다이렉션&lt;/strong>&lt;/td>
&lt;td>입력/출력 흐름 변경 (&lt;code>&amp;gt;&lt;/code>, &lt;code>&amp;lt;&lt;/code>, &lt;code>2&amp;gt;&lt;/code>, &lt;code>&amp;gt;&amp;gt;&lt;/code>, &lt;code>/dev/null&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>파이프라인&lt;/strong>&lt;/td>
&lt;td>명령어 출력을 다음 명령어 입력으로 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>필터 명령어&lt;/strong>&lt;/td>
&lt;td>데이터를 변형하거나 추려냄 (&lt;code>grep&lt;/code>, &lt;code>sort&lt;/code>, &lt;code>uniq&lt;/code>, &lt;code>wc&lt;/code>)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-흐름도-요약">🖼️ 흐름도 요약&lt;/h3>
&lt;pre tabindex="0">&lt;code>[입출력 흐름]
stdin ← 키보드, 파일 (&amp;lt;)
stdout → 화면, 파일 (&amp;gt;)
stderr → 화면, 파일 (2&amp;gt;)
모두 함께 저장: &amp;gt; all.log 2&amp;gt;&amp;amp;1
출력 제거: &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[파이프라인 흐름 예시]
cat data.csv |
grep &amp;#39;error&amp;#39; |
sort |
uniq -c |
sort -nr
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-시나리오-연결">🔍 실전 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>명령어&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>전체 로그 저장&lt;/strong>&lt;/td>
&lt;td>&lt;code>python train.py &amp;gt; log.txt 2&amp;gt;&amp;amp;1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>에러만 저장&lt;/strong>&lt;/td>
&lt;td>&lt;code>python train.py 2&amp;gt; err.txt&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>출력 제거&lt;/strong>&lt;/td>
&lt;td>&lt;code>&amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>파이프라인 필터링&lt;/strong>&lt;/td>
&lt;td>&lt;code>cat access.log&lt;/code> | &lt;code>grep 500&lt;/code> | &lt;code>sort&lt;/code> | &lt;code>uniq&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>백그라운드 실행&lt;/strong>&lt;/td>
&lt;td>&lt;code>python train.py &amp;gt; out.log 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실무-팁-모음">💡 실무 팁 모음&lt;/h3>
&lt;ul>
&lt;li>&lt;code>&amp;gt;&lt;/code>: 덮어쓰기 / &lt;code>&amp;gt;&amp;gt;&lt;/code>: 이어쓰기&lt;/li>
&lt;li>&lt;code>2&amp;gt;&amp;amp;1&lt;/code>: 에러를 표준 출력으로 합침&lt;/li>
&lt;li>&lt;code>/dev/null&lt;/code>: 출력 버림 (리소스 집중)&lt;/li>
&lt;li>파이프라인은 &lt;strong>데이터 흐름 자동화의 시작점&lt;/strong>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>학습 로그 저장&lt;/strong>&lt;/td>
&lt;td>&lt;code>&amp;gt; train.log 2&amp;gt;&amp;amp;1&lt;/code> → 디버깅/추적에 필수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>자원 최적화&lt;/strong>&lt;/td>
&lt;td>&lt;code>&amp;gt; /dev/null&lt;/code> → 불필요한 출력 제거&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>에러 분리 저장&lt;/strong>&lt;/td>
&lt;td>&lt;code>2&amp;gt; err.log&lt;/code> → 실험 실패 원인 빠르게 파악&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터 필터링 자동화&lt;/strong>&lt;/td>
&lt;td>&lt;code>grep&lt;/code>, &lt;code>sort&lt;/code>, &lt;code>uniq&lt;/code> 등 필터 명령어로 간단한 전처리 자동화 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배치 스크립트 자동 실행&lt;/strong>&lt;/td>
&lt;td>&lt;code>&amp;gt; log.txt 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code> → 자동화 안정성 확보&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-헷갈리기-쉬운-포인트">❗ 헷갈리기 쉬운 포인트&lt;/h3>
&lt;ul>
&lt;li>&lt;code>&amp;gt; file 2&amp;gt;&amp;amp;1&lt;/code>: &lt;strong>stdout + stderr 모두 저장&lt;/strong>&lt;/li>
&lt;li>&lt;code>2&amp;gt; file&lt;/code>: &lt;strong>에러만 저장&lt;/strong>&lt;/li>
&lt;li>&lt;code>cat file | grep&lt;/code> → 가능하지만, &lt;code>grep file&lt;/code>이 더 효율적&lt;/li>
&lt;li>&lt;code>&amp;gt;&lt;/code>는 덮어쓰기 → 중요 파일이면 &lt;code>set -o noclobber&lt;/code> 고려&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>입출력 흐름을 다룬다는 건, 곧 데이터와 로그를 통제한다는 뜻&lt;/p></description></item><item><title>[리눅스] 9장. 프로세스와 잡 (Process &amp; Job)</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/09/</link><pubDate>Tue, 15 Apr 2025 18:44:56 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/09/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>실행 중인 프로그램은 모두 **프로세스(Process)**이며,&lt;/p>
&lt;p>셸은 이를 **잡(Job)**이라는 단위로 제어한다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>프로세스&lt;/strong>&lt;/td>
&lt;td>실행 중인 프로그램. 고유 PID 가짐&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>잡&lt;/strong>&lt;/td>
&lt;td>셸이 관리하는 작업 단위. 포그라운드/백그라운드 전환 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>시그널&lt;/strong>&lt;/td>
&lt;td>프로세스를 제어하는 메시지 (&lt;code>kill&lt;/code>, &lt;code>Ctrl+C&lt;/code>, &lt;code>Ctrl+Z&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실행 제어&lt;/strong>&lt;/td>
&lt;td>&lt;code>&amp;amp;&lt;/code>, &lt;code>fg&lt;/code>, &lt;code>bg&lt;/code>, &lt;code>jobs&lt;/code>, &lt;code>Ctrl+Z&lt;/code> 등으로 상태 조작&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>종료 방식&lt;/strong>&lt;/td>
&lt;td>&lt;code>kill -15&lt;/code>: 정상 종료 / &lt;code>kill -9&lt;/code>: 강제 종료 (주의)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실행-흐름-도식">🖼️ 실행 흐름 도식&lt;/h3>
&lt;pre tabindex="0">&lt;code>[ 실행 흐름 ]
명령 실행
↓
프로세스 생성 (PID 부여)
↓
├─ 포그라운드 실행: 즉시 동작
├─ 백그라운드 실행: &amp;amp; / jobs로 확인
└─ 중단 후 전환: Ctrl+Z → fg / bg
[ 주요 시그널 ]
Ctrl+C → SIGINT (2): 중단
Ctrl+Z → SIGTSTP (20): 일시 정지
kill -15 → SIGTERM: 정상 종료
kill -9 → SIGKILL: 강제 종료
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-시나리오-연결">🔍 실전 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>실전 활용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>학습 로그 저장 + 백그라운드 실행&lt;/strong>&lt;/td>
&lt;td>&lt;code>python train.py &amp;gt; log.txt 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실행 중 프로세스 확인&lt;/strong>&lt;/td>
&lt;td>&lt;code>ps aux&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프로세스 종료&lt;/strong>&lt;/td>
&lt;td>&lt;code>kill -15 &amp;lt;PID&amp;gt;&lt;/code> → 응답 없을 시 &lt;code>kill -9 &amp;lt;PID&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>중단 후 재개&lt;/strong>&lt;/td>
&lt;td>&lt;code>Ctrl+Z&lt;/code> → &lt;code>bg&lt;/code>, &lt;code>fg&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>세션 유지&lt;/strong>&lt;/td>
&lt;td>&lt;code>tmux&lt;/code>, &lt;code>nohup&lt;/code> 등으로 종료 방지&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실무-팁-요약">💡 실무 팁 요약&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>PID 확인 루틴&lt;/strong>: &lt;code>ps aux | grep&lt;/code>, &lt;code>jobs -l&lt;/code>&lt;/li>
&lt;li>&lt;strong>정상 종료 우선&lt;/strong>: &lt;code>kill -15&lt;/code> → &lt;code>kill -9&lt;/code>은 최후 수단&lt;/li>
&lt;li>&lt;strong>로그 리디렉션 습관화&lt;/strong>: &lt;code>&amp;gt; log 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code>&lt;/li>
&lt;li>&lt;strong>세션 보존&lt;/strong>: &lt;code>tmux&lt;/code>, &lt;code>nohup&lt;/code> 필수&lt;/li>
&lt;li>&lt;strong>trap 명령어&lt;/strong>: 스크립트 종료 전 cleanup 처리에 활용&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>학습 세션 유지&lt;/strong>&lt;/td>
&lt;td>&lt;code>tmux new -s train1&lt;/code> → SSH 끊겨도 지속&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>병렬 학습/실험 실행&lt;/strong>&lt;/td>
&lt;td>&lt;code>&amp;amp;&lt;/code>, &lt;code>tmux&lt;/code>, &lt;code>screen&lt;/code>으로 동시 실행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>디버깅&lt;/strong>&lt;/td>
&lt;td>&lt;code>ps aux&lt;/code>, &lt;code>kill&lt;/code>, &lt;code>tail -f&lt;/code>로 상태 추적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 로그 확보&lt;/strong>&lt;/td>
&lt;td>학습 시 출력 리디렉션으로 결과 보존&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>서버 유지 자동화&lt;/strong>&lt;/td>
&lt;td>&lt;code>nohup&lt;/code>, &lt;code>trap&lt;/code>, 스크립트로 백그라운드 제어&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-자주-헷갈리는-포인트">❗ 자주 헷갈리는 포인트&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>kill&lt;/code> = “죽이는 명령” 아님 → &lt;strong>시그널 전달&lt;/strong> 도구&lt;/p></description></item><item><title>[리눅스] 8장. 퍼미션 &amp; 슈퍼유저</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/08/</link><pubDate>Mon, 14 Apr 2025 21:18:35 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/08/</guid><description>&lt;h3 id="-개념-핵심-요약">📌 개념 핵심 요약&lt;/h3>
&lt;blockquote>
&lt;p>리눅스는 파일과 디렉터리에 명확한 권한(rwx) 구조가 있으며,&lt;/p>
&lt;p>&lt;strong>권한 상승(sudo)&lt;/strong> 과 &lt;strong>세션 유지(tmux)&lt;/strong> 는 실무의 기본 도구&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>핵심 요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>rwx&lt;/strong>&lt;/td>
&lt;td>&lt;code>r&lt;/code>: 읽기, &lt;code>w&lt;/code>: 쓰기, &lt;code>x&lt;/code>: 실행/디렉터리 접근&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>chmod&lt;/strong>&lt;/td>
&lt;td>권한 설정 도구 (&lt;code>755&lt;/code>, &lt;code>644&lt;/code>, &lt;code>2775&lt;/code> 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>삭제 권한&lt;/strong>&lt;/td>
&lt;td>&lt;strong>디렉터리의 쓰기 권한&lt;/strong>이 있어야 파일 삭제 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>su vs sudo&lt;/strong>&lt;/td>
&lt;td>&lt;code>su&lt;/code>: 전체 전환 / &lt;code>sudo&lt;/code>: 명령어 단위&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>tmux&lt;/strong>&lt;/td>
&lt;td>SSH 끊겨도 세션 유지, 실험·학습 환경에 필수&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-흐름-정리">🖼️ 흐름 정리&lt;/h3>
&lt;pre tabindex="0">&lt;code>[권한 표현]
r (4) + w (2) + x (1) → 합산해 사용
예: 755 = rwxr-xr-x
[chmod 예시]
chmod 644 → 일반 파일
chmod 755 → 실행 스크립트
chmod 2775 → SetGID + 그룹 협업
[tmux 기본 흐름]
tmux new -s mlflow
→ 세션 작업
→ tmux detach
→ tmux attach -t mlflow
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-연결">🔍 실무 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>공유 디렉터리 설정&lt;/strong>&lt;/td>
&lt;td>&lt;code>chmod 2775&lt;/code> + 그룹 지정 → 협업 환경 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>서비스 제어&lt;/strong>&lt;/td>
&lt;td>&lt;code>sudo systemctl restart mlflow&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실험 유지&lt;/strong>&lt;/td>
&lt;td>&lt;code>tmux new -s train1&lt;/code> → SSH 끊겨도 학습 계속&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>로그 모니터링&lt;/strong>&lt;/td>
&lt;td>&lt;code>tmux&lt;/code> + &lt;code>tail -f&lt;/code> 병렬 실행으로 디버깅&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>파일 삭제는 디렉터리 권한으로 결정&lt;/strong>됨&lt;/li>
&lt;li>&lt;code>sudo visudo&lt;/code>로만 sudo 설정 → 문법 오류 방지&lt;/li>
&lt;li>&lt;code>chmod 2775&lt;/code>는 &lt;strong>그룹 내 쓰기 + 소유권 유지&lt;/strong>에 유용&lt;/li>
&lt;li>&lt;code>tmux&lt;/code> 세션에는 &lt;strong>명시적 이름(-s)&lt;/strong> 필수&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>모델 디렉터리 협업&lt;/strong>&lt;/td>
&lt;td>&lt;code>/opt/ml/&lt;/code>에 &lt;code>chmod 2775&lt;/code> → 팀원과 공유 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>서비스 재시작 자동화&lt;/strong>&lt;/td>
&lt;td>&lt;code>sudo systemctl restart mlflow&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>학습 환경 유지&lt;/strong>&lt;/td>
&lt;td>&lt;code>tmux new -s lr0.01&lt;/code> → SSH 끊겨도 학습 지속&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실시간 로그 확인&lt;/strong>&lt;/td>
&lt;td>&lt;code>tmux&lt;/code> + &lt;code>tail -f /var/log/mlflow.log&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>권한 제한 사용자 구성&lt;/strong>&lt;/td>
&lt;td>&lt;code>sudoers.d&lt;/code>에서 tmux만 허용 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-오해-방지-포인트">❗ 오해 방지 포인트&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;code>rm&lt;/code> 허용 여부는 디렉터리 &lt;code>w&lt;/code> 권한&lt;/strong>에 달림&lt;/li>
&lt;li>&lt;code>su&lt;/code>는 전체 세션 전환 → 실무에서는 &lt;strong>보안상 위험&lt;/strong>&lt;/li>
&lt;li>&lt;code>tmux&lt;/code>는 &lt;strong>백그라운드 실행이 아니라 세션 유지 도구&lt;/strong>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>권한을 제대로 이해하고 다루는 건&lt;/p></description></item><item><title>[리눅스] 7장. Bash 설정</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/07/</link><pubDate>Mon, 14 Apr 2025 21:18:26 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/07/</guid><description>&lt;h3 id="-핵심-개념-요약">📌 핵심 개념 요약&lt;/h3>
&lt;blockquote>
&lt;p>Bash 설정은 개발 편의성 + 실수 방지 + 자동화 기반을 만들어준다.&lt;/p>
&lt;p>alias, 환경변수, 프롬프트, 설정파일은 &lt;strong>모든 실무 셸 환경의 기본 뼈대&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>핵심 설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>alias&lt;/strong>&lt;/td>
&lt;td>명령어 단축. 반복 명령·위험 명령 보호에 필수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Bash 옵션&lt;/strong>&lt;/td>
&lt;td>&lt;code>set&lt;/code>, &lt;code>shopt&lt;/code>로 셸 동작 커스터마이징 (예: 덮어쓰기 방지, 재귀 검색 허용 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>환경 변수&lt;/strong>&lt;/td>
&lt;td>&lt;code>export&lt;/code> 여부로 &lt;strong>자식 프로세스 전파 여부 결정&lt;/strong> (&lt;code>MLFLOW_&lt;/code>, &lt;code>CUDA_&lt;/code> 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PS1&lt;/strong>&lt;/td>
&lt;td>프롬프트 커스터마이징 → 서버 구분, 현재 위치 표시 등&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>설정 파일&lt;/strong>&lt;/td>
&lt;td>&lt;code>.bashrc&lt;/code>, &lt;code>.profile&lt;/code>, &lt;code>/etc/bash.bashrc&lt;/code> → &lt;strong>실행 시점과 범위 구분&lt;/strong> 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-흐름도-도식화">🖼️ 흐름도 도식화&lt;/h3>
&lt;pre tabindex="0">&lt;code>[alias 예시]
alias gs=&amp;#39;git status&amp;#39;
alias mlflow-dev=&amp;#39;mlflow ui ...&amp;#39;
[Bash 옵션]
set -o noclobber # &amp;gt; 덮어쓰기 방지
shopt -s globstar # **/*.py 허용
set -o ignoreeof # Ctrl+D 방지
[환경 변수]
export VAR=value # 자식 프로세스 전달
VAR=value # 현재 셸만 적용
[PS1 예시]
[\u@\h \W]\$ # 사용자@호스트 현재디렉터리$
[설정 파일 실행 흐름]
로그인 셸 → ~/.profile
비로그인 셸 → ~/.bashrc
시스템 전체 → /etc/bash.bashrc
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-연결">🔍 실무 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>적용 예&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>명령어 반복 줄이기&lt;/strong>&lt;/td>
&lt;td>&lt;code>alias mlflow-dev=&amp;quot;mlflow ui ...&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실수 방지&lt;/strong>&lt;/td>
&lt;td>&lt;code>alias rm='rm -i'&lt;/code>, &lt;code>set -o noclobber&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>서버 구분&lt;/strong>&lt;/td>
&lt;td>&lt;code>PS1='[\u@\h prod]\$'&lt;/code> → 프롬프트로 환경 식별&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>환경 자동 초기화&lt;/strong>&lt;/td>
&lt;td>&lt;code>.bashrc&lt;/code>에 &lt;code>export&lt;/code>, &lt;code>alias&lt;/code> 세팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>로그 탐색 자동화&lt;/strong>&lt;/td>
&lt;td>&lt;code>shopt -s globstar&lt;/code> + &lt;code>grep &amp;quot;**/*.log&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>&lt;code>alias&lt;/code>는 &lt;code>.bashrc&lt;/code>에 등록해야 셸 재시작 후 유지&lt;/li>
&lt;li>&lt;code>set -o noclobber&lt;/code>: 실수로 파일 덮어쓰기 방지&lt;/li>
&lt;li>&lt;code>export VAR=value&lt;/code>: 실험 환경 변수 설정에 필수&lt;/li>
&lt;li>&lt;code>source ~/.bashrc&lt;/code>: 변경사항 반영&lt;/li>
&lt;li>Docker 내 환경 통일 → &lt;code>.bashrc_profile&lt;/code> 등 활용&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>MLOps 활용 예&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>ENV 자동 세팅&lt;/strong>&lt;/td>
&lt;td>&lt;code>MLFLOW_TRACKING_URI&lt;/code>, &lt;code>CUDA_VISIBLE_DEVICES&lt;/code> 등 &lt;code>.bashrc&lt;/code>에 미리 정의&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 서빙 단축 명령어&lt;/strong>&lt;/td>
&lt;td>&lt;code>alias mlflow-dev=&amp;quot;mlflow ui --...&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>컨테이너 자동 초기화&lt;/strong>&lt;/td>
&lt;td>&lt;code>.bashrc_profile&lt;/code> → dev 환경 재현&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>로그 패턴 검색&lt;/strong>&lt;/td>
&lt;td>&lt;code>globstar&lt;/code> + &lt;code>grep&lt;/code> → 수천 로그 파일 탐색&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CI/CD 연동&lt;/strong>&lt;/td>
&lt;td>GitHub Actions/Jenkins에서도 &lt;code>.bashrc&lt;/code> 설정 반영 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-자주-헷갈리는-포인트">❗ 자주 헷갈리는 포인트&lt;/h3>
&lt;ul>
&lt;li>&lt;code>alias&lt;/code>는 일시적 → &lt;code>.bashrc&lt;/code>에 등록 필수&lt;/li>
&lt;li>&lt;code>set&lt;/code> vs &lt;code>shopt&lt;/code>: &lt;code>shopt&lt;/code>은 Bash 전용 기능&lt;/li>
&lt;li>프롬프트 설정(&lt;code>PS1&lt;/code>)은 실수 예방용 시각 장치&lt;/li>
&lt;li>환경 변수 설정 안 하면 &lt;code>mlflow&lt;/code>, &lt;code>torch&lt;/code> 등이 작동하지 않기도 함&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>Bash 설정은 “자동화와 실수 방지의 기반”이다.&lt;/p></description></item><item><title>[네트워크] 6장. 네트워크와 보안</title><link>https://keonhoban.github.io/mlops-journey/posts/network/06/</link><pubDate>Fri, 11 Apr 2025 20:17:21 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/network/06/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>보안은 인증 → 암호화 → 무결성 → 접근 통제 순서로 작동하며,&lt;/p>
&lt;p>MLOps에서 &lt;strong>API 보호, 데이터 유출 방지, 접근 제어&lt;/strong>에 반드시 필요하다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>핵심 설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>암호화&lt;/strong>&lt;/td>
&lt;td>데이터 노출 방지 (대칭/공개키)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>인증서&lt;/strong>&lt;/td>
&lt;td>신원 확인 (X.509, CA 발급)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>전자 서명&lt;/strong>&lt;/td>
&lt;td>위변조 방지 (Hash + 개인키)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>보안 프로토콜&lt;/strong>&lt;/td>
&lt;td>안전한 통신 수단 (SSL/TLS, SSH 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>방화벽&lt;/strong>&lt;/td>
&lt;td>접근 제한 (UFW, 보안 그룹)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>VPN&lt;/strong>&lt;/td>
&lt;td>외부에서 내부망 안전 연결 (IPSec, OpenVPN 등)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-흐름도-요약">🖼️ 흐름도 요약&lt;/h3>
&lt;pre tabindex="0">&lt;code>[ 보안 흐름 구조 ]
1. 인증서(CA) → 신원 확인
2. 암호화(SSL/SSH) → 데이터 보호
3. 전자 서명 → 무결성 검증
4. 방화벽/VPN → 접근 제어
↓ 모든 보안의 궁극적 목적
→ 기밀성 / 무결성 / 가용성 (CIA 3요소)
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-적용-포인트">🛠️ 실전 적용 포인트&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>한 줄 요약 실무 팁&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>SSH 접속&lt;/strong>&lt;/td>
&lt;td>&lt;code>ssh-keygen&lt;/code> + &lt;code>ssh-copy-id&lt;/code> → 비밀번호 없는 보안 접속&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>API 보안&lt;/strong>&lt;/td>
&lt;td>&lt;code>https://&lt;/code> + TLS 인증서 (Let&amp;rsquo;s Encrypt 추천)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>VPN 구성&lt;/strong>&lt;/td>
&lt;td>개발망 접속용 L2TP/IPSec 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>방화벽 설정&lt;/strong>&lt;/td>
&lt;td>&lt;code>ufw allow 22,443&lt;/code> → 최소 포트만 열기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>보고서 발송&lt;/strong>&lt;/td>
&lt;td>S/MIME 전자서명으로 이메일 위변조 방지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>인증서 관리&lt;/strong>&lt;/td>
&lt;td>&lt;code>certbot&lt;/code>으로 HTTPS 자동 갱신 구성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-체크리스트">✅ 실전 체크리스트&lt;/h3>
&lt;ul>
&lt;li>SSH는 &lt;strong>공개키 로그인&lt;/strong>, 비밀번호는 사용 지양&lt;/li>
&lt;li>HTTPS는 &lt;strong>모든 웹 기반 API에 필수&lt;/strong>&lt;/li>
&lt;li>방화벽은 &lt;strong>항상 22번 먼저 열고 설정할 것&lt;/strong>&lt;/li>
&lt;li>VPN은 &lt;strong>내부 자원 접근 시 로그 관리도 함께&lt;/strong>&lt;/li>
&lt;li>인증서 유효 기간 &amp;amp; 자동 갱신 체크!&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-자주-하는-실수">⚠️ 자주 하는 실수&lt;/h3>
&lt;ul>
&lt;li>비밀키 공유 ❌ (&lt;code>id_rsa&lt;/code> 노출 금지!)&lt;/li>
&lt;li>방화벽 설정 후 서버 접속 안 됨 → &lt;strong>22번 포트 미리 허용&lt;/strong>&lt;/li>
&lt;li>TLS 인증서 수동 갱신 누락 → &lt;strong>자동화 필수&lt;/strong>&lt;/li>
&lt;li>VPN 설정만 하고 로그/모니터링 미구성&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🔧 MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>보안 요소&lt;/th>
&lt;th>MLOps 실전 활용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>SSH&lt;/strong>&lt;/td>
&lt;td>모델 파일 &lt;code>scp&lt;/code> 전송 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>TLS&lt;/strong>&lt;/td>
&lt;td>FastAPI/MLflow 대시보드 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>인증서&lt;/strong>&lt;/td>
&lt;td>사용자별 API 접근 제어&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>VPN&lt;/strong>&lt;/td>
&lt;td>클라우드 내 K8s 접근 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>전자서명&lt;/strong>&lt;/td>
&lt;td>보고서/로그 신뢰성 확보&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>방화벽&lt;/strong>&lt;/td>
&lt;td>포트 제한 → 무단 접근 차단&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>실전에서는 인증서, SSH, TLS, 방화벽 구성부터 먼저 챙겨야&lt;/p></description></item><item><title>[리눅스] 6장. Vim</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/06/</link><pubDate>Fri, 11 Apr 2025 20:17:17 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/06/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>Vim은 “로그 + 설정 + 데이터 편집”을 위한 실무형 텍스트 도구&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>텍스트 파일&lt;/strong>&lt;/td>
&lt;td>&lt;code>.sh&lt;/code>, &lt;code>.csv&lt;/code>, &lt;code>.log&lt;/code> 등 → Vim으로 직접 편집 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Vim 검색&lt;/strong>&lt;/td>
&lt;td>&lt;code>/&lt;/code> (아래), &lt;code>?&lt;/code> (위), &lt;code>n&lt;/code>/&lt;code>N&lt;/code> (다음/이전) → 로그 분석 핵심&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>비주얼 블록 모드&lt;/strong>&lt;/td>
&lt;td>&lt;code>Ctrl + v&lt;/code> → 여러 줄에 동시에 삽입/편집&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>매크로&lt;/strong>&lt;/td>
&lt;td>반복 작업 자동화 (&lt;code>qa&lt;/code>, &lt;code>q&lt;/code>, &lt;code>@a&lt;/code>) → 스크립트급 효율&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-흐름도-실전-사용-패턴">🖼️ 흐름도: 실전 사용 패턴&lt;/h3>
&lt;pre tabindex="0">&lt;code>[로그 검색 흐름]
vim log.txt
↓
/error → n → n → N
[비주얼 블록 편집]
Ctrl + v → 방향키 → Shift + i → 삽입 → ESC
[매크로 실행]
qa → 편집 수행 → q → @a 또는 5@a
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-요약">🛠️ 실무 시나리오 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>Vim 활용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>모델 에러 탐색&lt;/td>
&lt;td>&lt;code>/loss&lt;/code>, &lt;code>/error&lt;/code>, &lt;code>n&lt;/code> 반복 이동&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대량 주석 처리&lt;/td>
&lt;td>&lt;code>Ctrl + v&lt;/code> → &lt;code>#&lt;/code> 삽입 → 여러 줄 자동 편집&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>config 다중 수정&lt;/td>
&lt;td>&lt;code>qa&lt;/code>로 수정 녹화 → &lt;code>@a&lt;/code>로 반복 실행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>.csv&lt;/code> 구조 정리&lt;/td>
&lt;td>&lt;code>:%s&lt;/code> or 비주얼 모드로 컬럼 이름 등 일괄 편집&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁">💡 실전 팁&lt;/h3>
&lt;ul>
&lt;li>&lt;code>:%s/old/new/gc&lt;/code> → 치환 전 &lt;strong>확인하며 진행&lt;/strong>&lt;/li>
&lt;li>매크로는 &amp;ldquo;녹화&amp;quot;임 → &lt;strong>스크립트와 다름&lt;/strong>&lt;/li>
&lt;li>&lt;code>ggVG&lt;/code>는 전체 선택 (삭제 아님)&lt;/li>
&lt;li>&lt;code>vim +&amp;lt;줄번호&amp;gt; &amp;lt;파일&amp;gt;&lt;/code> → 특정 위치에서 바로 시작&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🧩 MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>분야&lt;/th>
&lt;th>활용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>로그 분석&lt;/strong>&lt;/td>
&lt;td>서빙 로그에서 오류 메시지 빠르게 탐색&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 설정&lt;/strong>&lt;/td>
&lt;td>설정 파일 대량 수정 시 매크로로 일괄 편집&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터 전처리&lt;/strong>&lt;/td>
&lt;td>&lt;code>.csv&lt;/code> 헤더/라벨 텍스트 일괄 수정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>스크립트 정비&lt;/strong>&lt;/td>
&lt;td>다수 셸 스크립트에 공통 수정 자동 반영&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>Vim은 키보드 하나로 빠르고 반복적인 편집을 자동화&lt;/p></description></item><item><title>[네트워크] 5장. 네트워크 인터페이스 계층</title><link>https://keonhoban.github.io/mlops-journey/posts/network/05/</link><pubDate>Thu, 10 Apr 2025 20:38:05 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/network/05/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>TCP/IP의 가장 하단.&lt;/p>
&lt;p>실제 장비(MAC 주소)를 통해 &lt;strong>프레임 단위로 데이터 전송&lt;/strong>을 담당한다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>MAC 주소&lt;/strong>&lt;/td>
&lt;td>장비의 고유 식별자. 데이터 송·수신 대상 식별에 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프레임 구조&lt;/strong>&lt;/td>
&lt;td>&lt;code>Dest MAC&lt;/code>, &lt;code>Src MAC&lt;/code>, &lt;code>Payload&lt;/code>로 구성. 전송 단위&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>ARP&lt;/strong>&lt;/td>
&lt;td>IP → MAC 주소 매핑. 브로드캐스트로 MAC 주소 탐색&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>L2/L3 스위치&lt;/strong>&lt;/td>
&lt;td>L2: MAC 기반. L3: IP 기반 + 라우팅 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PPPoE&lt;/strong>&lt;/td>
&lt;td>인증·접속 관리 프로토콜. MTU 제한(1492) 존재&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>FTTx/xDSL&lt;/strong>&lt;/td>
&lt;td>인터넷 물리 매체. 광/전화선 기반 전송 방식&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-시각적-흐름도">🖼️ 시각적 흐름도&lt;/h3>
&lt;pre tabindex="0">&lt;code>[TCP/IP 계층 vs OSI 계층]
TCP/IP : Application → Transport → Internet → **Network Interface**
OSI : 7~5 → 4 → 3 → **2 + 1**
[이더넷 프레임 구조]
| Preamble | Dest MAC | Src MAC | EtherType | Payload | FCS |
[ARP 동작 흐름]
Client → &amp;#34;Who has 192.168.0.10?&amp;#34; (브로드캐스트)
↓
Owner → &amp;#34;192.168.0.10 is at 00:11:22:33:44:55&amp;#34;
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전에서-이렇게-연결돼요">🛠️ 실전에서 이렇게 연결돼요&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>실무 상황&lt;/th>
&lt;th>셸 명령어 / 설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>서버 네트워크 상태 확인&lt;/strong>&lt;/td>
&lt;td>&lt;code>ip a&lt;/code>, &lt;code>ip link&lt;/code> → MAC 주소/MTU 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>ARP 테이블 확인 및 초기화&lt;/strong>&lt;/td>
&lt;td>&lt;code>arp -a&lt;/code>, &lt;code>ip neigh flush all&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 배포 시 연결 불안정&lt;/strong>&lt;/td>
&lt;td>MTU 문제 (&lt;code>1492&lt;/code>) 의심 시 확인 → &lt;code>ping -M do -s 1472&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>서버 교체 후 네트워크 이슈&lt;/strong>&lt;/td>
&lt;td>ARP 캐시 갱신 필요 → &lt;code>arping&lt;/code> 또는 flush 명령 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>무선 네트워크 사용&lt;/strong>&lt;/td>
&lt;td>테스트 환경에서 패킷 손실 발생 가능성 주의 (가능하면 유선 사용)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-헷갈리기-쉬운-개념">⚠️ 헷갈리기 쉬운 개념&lt;/h3>
&lt;ul>
&lt;li>MAC 주소는 &lt;strong>고정이 아님&lt;/strong> → &lt;code>spoofing&lt;/code> 가능성 존재&lt;/li>
&lt;li>ARP는 &lt;strong>보안에 취약&lt;/strong> → ARP 스푸핑 공격 주의&lt;/li>
&lt;li>PPPoE 환경에서 &lt;strong>ping은 되지만 파일 전송이 실패할 수 있음&lt;/strong> (MTU 문제)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-실전-연결">🔧 MLOps 실전 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>실전 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>서버 연결 추적&lt;/strong>&lt;/td>
&lt;td>&lt;code>ip a&lt;/code> 확인 → MAC 주소 기준으로 스위치 포트 추적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 오류 분석&lt;/strong>&lt;/td>
&lt;td>MTU 제한으로 인한 전송 실패 → &lt;code>ping -M do -s&lt;/code> 테스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터 지연 분석&lt;/strong>&lt;/td>
&lt;td>무선 환경일 경우 패킷 손실/지연 우려 → 학습/테스트는 유선 권장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>ARP 이슈 대응&lt;/strong>&lt;/td>
&lt;td>서버 교체 시 IP는 같아도 MAC 변경 → &lt;code>ip neigh flush all&lt;/code> 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>네트워크 인터페이스 계층은&lt;/p></description></item><item><title>[리눅스] 5장. 파일 검색</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/05/</link><pubDate>Thu, 10 Apr 2025 20:38:01 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/05/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>파일이 어디 있는지, 명령어가 뭘 하는지, 시스템에서 어떻게 찾는지를 아는 것&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>기능 요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>find&lt;/code>&lt;/td>
&lt;td>실시간 디스크 탐색 (정밀, 느림, 조건 다양)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>locate&lt;/code>&lt;/td>
&lt;td>인덱스(DB) 기반 빠른 탐색 (가볍고 빠름, 최신 반영 X)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>which&lt;/code>&lt;/td>
&lt;td>명령어의 실제 실행 경로 확인 (&lt;code>$PATH&lt;/code> 기준)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>man / --help&lt;/code>&lt;/td>
&lt;td>명령어 옵션과 예제 확인용 문서&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-흐름도-요약">🖼️ 흐름도 요약&lt;/h3>
&lt;pre tabindex="0">&lt;code>[검색 방식]
1. find → 실시간 탐색
예: find /etc -name &amp;#39;*.conf&amp;#39; -type f
2. locate → 인덱스 기반
예: locate nginx.conf
[명령어 경로 확인]
명령어 입력
→ $PATH 경로 순회
→ 최초 발견 실행
→ 확인: which curl
[도움말 조회]
man 명령어 → 자세한 설명
명령어 --help → 간략 옵션 확인
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-상황-연결">🔍 실무 상황 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>실무 상황&lt;/th>
&lt;th>활용 명령어&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>모델 설정 찾기&lt;/strong>&lt;/td>
&lt;td>&lt;code>find /etc -name '*mlflow*.conf'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>빠른 위치 탐색&lt;/strong>&lt;/td>
&lt;td>&lt;code>locate airflow.cfg&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>스크립트 경로 확인&lt;/strong>&lt;/td>
&lt;td>&lt;code>which deploy.sh&lt;/code> + &lt;code>$PATH&lt;/code> 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>API 테스트 옵션 확인&lt;/strong>&lt;/td>
&lt;td>&lt;code>man curl&lt;/code>, &lt;code>curl --help&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>&lt;code>find '*.txt'&lt;/code> → 반드시 &lt;strong>따옴표&lt;/strong>로 감싸야 함&lt;/li>
&lt;li>&lt;code>locate&lt;/code>는 &lt;code>updatedb&lt;/code> 전에는 최신 파일 반영 안 됨&lt;/li>
&lt;li>&lt;code>$PATH&lt;/code>에 없는 명령어는 실행되지 않음 → &lt;code>export PATH=...&lt;/code>로 설정&lt;/li>
&lt;li>&lt;code>man -k 키워드&lt;/code> → 관련 명령어 검색 가능&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-실전-연결">🛠️ MLOps 실전 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>작업&lt;/th>
&lt;th>명령어&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>로그 자동 탐색&lt;/td>
&lt;td>&lt;code>find /var/log -name '*.log'&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>설정 파일 검증&lt;/td>
&lt;td>&lt;code>locate mlflow.conf&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>명령어 위치 확인&lt;/td>
&lt;td>&lt;code>which train_model.sh&lt;/code> (CI/CD 디버깅)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API 연동 옵션 파악&lt;/td>
&lt;td>&lt;code>man curl&lt;/code>, &lt;code>curl --help&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-오해-주의">⚠️ 오해 주의&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>find . -name *.txt&lt;/code> → 쉘이 먼저 확장 → ❌ 오류&lt;/p></description></item><item><title>[네트워크] 4장. 라우팅과 인터넷 계층</title><link>https://keonhoban.github.io/mlops-journey/posts/network/04/</link><pubDate>Wed, 09 Apr 2025 21:29:21 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/network/04/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>인터넷 계층은 IP 기반 통신의 중심&lt;/p>
&lt;p>패킷이 목적지까지 &lt;strong>“어떻게” 도달하는가&lt;/strong>를 책임진다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>핵심 내용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>IP 주소&lt;/strong>&lt;/td>
&lt;td>논리적 장비 식별자 (위치가 아님) → 라우팅에 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>라우팅&lt;/strong>&lt;/td>
&lt;td>IP 기반 목적지 경로 탐색 (정적/동적/인터넷 전역 경로)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>인터넷 계층 (L3)&lt;/strong>&lt;/td>
&lt;td>IP 패킷 분할, 재조립, 전달 → TCP/UDP 상위 계층 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>서브넷 마스크&lt;/strong>&lt;/td>
&lt;td>IP 주소의 네트워크/호스트 영역 구분 → CIDR 활용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프라이빗 IP&lt;/strong>&lt;/td>
&lt;td>외부 통신 불가한 내부 주소 → NAT로 변환 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>라우팅 프로토콜&lt;/strong>&lt;/td>
&lt;td>RIP, OSPF (내부), BGP (인터넷 간)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>ICMP&lt;/strong>&lt;/td>
&lt;td>상태 체크 및 오류 전달 (&lt;code>ping&lt;/code>, &lt;code>traceroute&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>DNS&lt;/strong>&lt;/td>
&lt;td>도메인 ↔ IP 변환 (서비스 식별)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>DHCP&lt;/strong>&lt;/td>
&lt;td>IP 자동 할당 (MAC 기반), 서브넷/게이트웨이 설정 포함&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-핵심-흐름도">🖼️ 핵심 흐름도&lt;/h3>
&lt;pre tabindex="0">&lt;code>사용자 → 도메인 입력 (ex. mlops.dev)
↓
DNS → IP 주소 변환
↓
라우터들 → 목적지까지 경로 탐색 (라우팅)
↓
패킷 전송 (인터넷 계층, IP 기반)
↓
NAT or 포트포워딩 → 내부 서버 도달
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-요약">🔧 실무 시나리오 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>시나리오&lt;/th>
&lt;th>핵심 동작&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>모델 API 외부 노출&lt;/strong>&lt;/td>
&lt;td>프라이빗 IP ↔ 퍼블릭 IP 매핑 (NAT or 포트포워딩)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>서버 상태 체크&lt;/strong>&lt;/td>
&lt;td>&lt;code>ping&lt;/code>, &lt;code>curl&lt;/code> 활용한 자동 헬스체크&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>도메인 연결&lt;/strong>&lt;/td>
&lt;td>DNS 설정 (ex. Route53)로 서비스 접근 간소화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>컨테이너 통신 설정&lt;/strong>&lt;/td>
&lt;td>Docker 내 DHCP, 서브넷 설정으로 IP 충돌 방지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>VPN 구성&lt;/strong>&lt;/td>
&lt;td>라우팅 테이블 직접 설정 필요 (CIDR, 게이트웨이 지정)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-정리">💡 실전 팁 정리&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>프라이빗 IP 대역&lt;/strong>&lt;/p></description></item><item><title>[리눅스] 4장. 파일 조작 기본</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/04/</link><pubDate>Wed, 09 Apr 2025 21:19:45 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/04/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>텍스트 탐색(less)과 링크 생성(ln)은&lt;/p>
&lt;p>&lt;strong>운영 자동화, 로그 분석, 버전 관리의 핵심 기초&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-핵심">🧠 결정적 핵심&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>핵심 요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>less&lt;/code>&lt;/td>
&lt;td>&lt;strong>대용량 파일 탐색&lt;/strong>에 특화. 페이지 단위 보기 + 검색 + 실시간 모니터링(&lt;code>+F&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ln&lt;/code>&lt;/td>
&lt;td>&lt;strong>링크 생성 명령어&lt;/strong>. 하드링크는 복제 느낌, 심볼릭은 경로 참조 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ln -s&lt;/code>&lt;/td>
&lt;td>&lt;strong>심볼릭 링크 생성&lt;/strong>. 자주 쓰이며, 원본 삭제 시 링크 깨짐 주의&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-구조-이해-흐름도">🖼️ 구조 이해 흐름도&lt;/h3>
&lt;pre tabindex="0">&lt;code>[ less 흐름도 ]
less &amp;lt;파일&amp;gt;
├─ Space / b → 앞/뒤 페이지 이동
├─ /검색어 → 키워드 탐색
├─ +F → 실시간 tail 모드
└─ q → 종료
[ ln 종류 비교 ]
ln ln -s
┌───────────┐ ┌────────────┐
│ 하드 링크 │ │ 심볼릭 링크 │
└───────────┘ └────────────┘
• inode 공유 • 경로 참조
• 원본 삭제 영향 없음 • 원본 삭제 시 끊어짐
• 같은 디스크만 가능 • 다른 디스크도 가능
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-시나리오-연결">🔍 실전 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>실무 상황&lt;/th>
&lt;th>명령어 활용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>로그 탐색&lt;/td>
&lt;td>&lt;code>less /var/log/mlflow.log&lt;/code> → 빠르게 분석 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실시간 확인&lt;/td>
&lt;td>&lt;code>less +F&lt;/code> → 실시간 tail + 중간 분석 (&lt;code>Ctrl+C&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>설정 경로 단축&lt;/td>
&lt;td>&lt;code>ln -s /opt/mlflow/config ./mlcfg&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 버전 전환&lt;/td>
&lt;td>&lt;code>ln -s model_v2/ current&lt;/code> → 최신 모델 지정 쉽게&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-체크포인트-요약">✅ 체크포인트 요약&lt;/h3>
&lt;ul>
&lt;li>&lt;code>less&lt;/code>는 로그, 설정 파일 분석에 적합 (검색, 이동 모두 지원)&lt;/li>
&lt;li>&lt;code>+F&lt;/code>는 &lt;code>tail -f&lt;/code> 대체 가능 + 탐색까지 가능&lt;/li>
&lt;li>&lt;code>ln&lt;/code> 기본은 &lt;strong>하드 링크&lt;/strong>, 디렉터리에는 사용 불가&lt;/li>
&lt;li>심볼릭 링크(&lt;code>s&lt;/code>)는 실무에서 &lt;strong>버전링/디렉터리 단축&lt;/strong>에 매우 유용&lt;/li>
&lt;li>컨테이너, S3 경로 마운트 시도 자주 사용됨&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-자주-헷갈리는-포인트">⚠️ 자주 헷갈리는 포인트&lt;/h3>
&lt;ul>
&lt;li>&lt;code>ln&lt;/code>만 쓰면 &lt;strong>심볼릭 아님&lt;/strong> → 하드 링크&lt;/li>
&lt;li>하드 링크는 파일 이름만 다를 뿐, &lt;strong>파일 내용은 동일&lt;/strong> (inode 공유)&lt;/li>
&lt;li>심볼릭 링크는 원본 삭제되면 링크 깨짐 (&lt;code>dangling link&lt;/code> 발생)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-포인트">🔧 MLOps 연결 포인트&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>목적&lt;/th>
&lt;th>활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>로그 실시간 분석&lt;/td>
&lt;td>&lt;code>less +F&lt;/code>로 MLflow 로그 확인 &amp;amp; 이슈 디버깅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>설정 경로 단축&lt;/td>
&lt;td>&lt;code>.mlcfg&lt;/code> 링크 생성 → Docker 컨테이너 경량화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 버전 관리&lt;/td>
&lt;td>&lt;code>ln -s model_v3/ current&lt;/code> → 자동 배포 스크립트 연동&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>S3 경로 연결&lt;/td>
&lt;td>&lt;code>/mnt/s3&lt;/code> 디렉터리 링크 → 고정 경로로 코드 단순화&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>less와 ln은 단순 조회/링크 명령어가 아니라,&lt;/p></description></item><item><title>[네트워크] 3장. 트랜스포트 계층</title><link>https://keonhoban.github.io/mlops-journey/posts/network/03/</link><pubDate>Tue, 08 Apr 2025 21:04:41 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/network/03/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>트랜스포트 계층은&lt;/p>
&lt;p>&lt;strong>&amp;ldquo;데이터가 목적지 애플리케이션까지 정확히 도달하게 해주는 계층&amp;rdquo;&lt;/strong>&lt;/p>
&lt;p>주인공은 &lt;strong>TCP(신뢰성)&lt;/strong>, &lt;strong>UDP(속도)&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>핵심 요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>트랜스포트 계층&lt;/strong>&lt;/td>
&lt;td>애플리케이션 간 데이터 송수신 담당 (TCP/UDP)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>TCP&lt;/strong>&lt;/td>
&lt;td>연결 기반, 순서 보장, 재전송, 흐름/혼잡 제어 → 안정성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>UDP&lt;/strong>&lt;/td>
&lt;td>비연결, 빠름, 손실 감수 → 실시간/속도 우선&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>포트 번호&lt;/strong>&lt;/td>
&lt;td>프로세스 식별자 (IP가 주소라면, 포트는 방 번호)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>흐름 제어&lt;/strong>&lt;/td>
&lt;td>수신 버퍼 상태에 맞게 송신 속도 조절 (송신자 중심)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>혼잡 제어&lt;/strong>&lt;/td>
&lt;td>네트워크 전체 혼잡 상황에 대응 (네트워크 중심)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-도식으로-보는-핵심-흐름">🖼️ 도식으로 보는 핵심 흐름&lt;/h3>
&lt;pre tabindex="0">&lt;code>[TCP 연결 과정 - 3 Way Handshake]
Client → SYN
Server → SYN+ACK
Client → ACK
[TCP 종료 과정 - 4 Way Handshake]
Client → FIN
Server → ACK → FIN
Client → ACK
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-연결">🔍 실무 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>실무 동작&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>모델 API 확인&lt;/td>
&lt;td>&lt;code>curl localhost:5000&lt;/code> 또는 &lt;code>ss -tulpn&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>컨테이너 포트 확인&lt;/td>
&lt;td>&lt;code>docker inspect&lt;/code>, &lt;code>lsof -i :PORT&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>포트 충돌 방지&lt;/td>
&lt;td>&lt;code>49152~65535&lt;/code> 동적 포트 사용 or 명시적 지정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP 상태 분석&lt;/td>
&lt;td>&lt;code>netstat&lt;/code>, &lt;code>ss&lt;/code>, &lt;code>Wireshark&lt;/code>로 연결 및 재전송 확인&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>&lt;code>ss -tulpn&lt;/code> → 현재 열려 있는 포트/서비스 확인&lt;/li>
&lt;li>&lt;code>lsof -i :포트번호&lt;/code> → 해당 포트를 쓰는 프로세스 추적&lt;/li>
&lt;li>Wireshark → &lt;code>tcp.analysis.flags&lt;/code> 필터로 재전송·지연 확인&lt;/li>
&lt;li>포트 = 앱 식별 / IP = 장비 식별 → 두 개 함께 사용됨&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-실전-연결-요약">🛠️ MLOps 실전 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>활용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>모델 서버 점검&lt;/strong>&lt;/td>
&lt;td>포트 열려 있는지 확인, 외부 요청 도달 여부 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 시 포트 충돌 방지&lt;/strong>&lt;/td>
&lt;td>컨테이너마다 다른 포트 할당, NGINX 리버스 프록시 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>로깅 시스템 연결&lt;/strong>&lt;/td>
&lt;td>로그 수집기(Fluentd 등) TCP 연결 실패 디버깅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>클러스터 내 통신 장애 대응&lt;/strong>&lt;/td>
&lt;td>UDP 기반 서비스는 재전송 로직 직접 구현 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-헷갈리기-쉬운-개념">⚠️ 헷갈리기 쉬운 개념&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>오해&lt;/th>
&lt;th>정답&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>포트는 애플리케이션 ID다?&lt;/td>
&lt;td>❌ 포트는 &lt;strong>트랜스포트 계층의 식별자&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP는 느리다?&lt;/td>
&lt;td>❌ 현대 TCP는 고속 옵션 다수 → 고성능 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>UDP는 신뢰성이 없다?&lt;/td>
&lt;td>✅ 하지만 앱에서 직접 보완 가능 (ex. QUIC)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>TCP는 정확히, UDP는 빠르게.&lt;/p></description></item><item><title>[리눅스] 3장. 파일과 디렉터리</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/03/</link><pubDate>Tue, 08 Apr 2025 21:00:13 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/03/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>리눅스는 단일 루트(/) 트리 구조로 파일/디렉터리를 구성하고,&lt;/p>
&lt;p>각 디렉터리는 &lt;strong>역할에 따라 위치가 정해져 있다&lt;/strong>.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>핵심 설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>디렉터리 구조&lt;/strong>&lt;/td>
&lt;td>&lt;code>/&lt;/code>부터 시작하는 &lt;strong>계층적 트리 구조&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>절대 vs 상대경로&lt;/strong>&lt;/td>
&lt;td>&lt;code>/etc/nginx&lt;/code>(절대) vs &lt;code>../config&lt;/code>(상대)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>FHS&lt;/strong>&lt;/td>
&lt;td>&lt;code>/etc&lt;/code>, &lt;code>/var&lt;/code>, &lt;code>/opt&lt;/code>, &lt;code>/usr&lt;/code> 등은 &lt;strong>기능에 따른 구분&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>와일드카드&lt;/strong>&lt;/td>
&lt;td>&lt;code>*&lt;/code>, &lt;code>?&lt;/code>로 패턴 매칭. 파일 정리에 자주 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>ls -F&lt;/strong>&lt;/td>
&lt;td>파일 유형을 &lt;code>/&lt;/code>, &lt;code>*&lt;/code>, &lt;code>@&lt;/code> 등으로 시각 표시&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-구조도-시각화">🖼️ 구조도 시각화&lt;/h3>
&lt;pre tabindex="0">&lt;code>[리눅스 주요 디렉터리]
/ (루트)
├── etc/ # 설정
├── var/ # 로그/큐
├── usr/ # 앱/라이브러리
├── opt/ # 외부 패키지
├── home/ # 사용자 디렉터리
├── tmp/ # 임시 파일
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[경로 구분]
절대: /etc/nginx/nginx.conf
상대: ./config/, ../ → 현재 위치 기준
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[ls -F 출력 예시]
run.sh* # 실행 파일
config/ # 디렉터리
data@ # 심볼릭 링크
README.md # 일반 파일
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-연결">🔍 실무 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>실무 활용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>모델 로그 확인&lt;/strong>&lt;/td>
&lt;td>&lt;code>/var/log/mlflow.log&lt;/code> → &lt;code>tail -f&lt;/code>로 실시간 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 설정 편집&lt;/strong>&lt;/td>
&lt;td>&lt;code>/etc/mlflow.conf&lt;/code> 또는 NGINX 설정 변경&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 저장 경로 지정&lt;/strong>&lt;/td>
&lt;td>&lt;code>/opt/ml/&lt;/code> 또는 &lt;code>/home/ubuntu/model/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>파일 일괄 삭제&lt;/strong>&lt;/td>
&lt;td>&lt;code>rm -f *.tmp&lt;/code>로 임시 파일 정리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실행 스크립트 확인&lt;/strong>&lt;/td>
&lt;td>&lt;code>ls -F&lt;/code>로 &lt;code>*&lt;/code> 붙은 파일 식별&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-팁-모음">💡 실전 팁 모음&lt;/h3>
&lt;ul>
&lt;li>설정 파일 찾을 땐 &lt;code>find&lt;/code>, &lt;code>locate&lt;/code> 활용&lt;/li>
&lt;li>로그는 &lt;code>/var/log/&lt;/code> 하위에 존재 (nginx, mlflow 등)&lt;/li>
&lt;li>배포 스크립트는 &lt;code>/usr/local/bin/&lt;/code> 또는 &lt;code>/opt/&lt;/code> 사용&lt;/li>
&lt;li>컨테이너 설계 시 디렉터리 구조 표준화 필요&lt;/li>
&lt;li>&lt;code>ls -F&lt;/code>는 실무에서 &lt;strong>파일 상태 빠른 확인&lt;/strong>에 유용&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>로그 저장 위치&lt;/strong>&lt;/td>
&lt;td>&lt;code>/var/log/&lt;/code>에 &lt;code>mlflow.log&lt;/code>, &lt;code>gunicorn.log&lt;/code> 등 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>설정 관리&lt;/strong>&lt;/td>
&lt;td>&lt;code>/etc/mlflow.conf&lt;/code>, &lt;code>/etc/supervisor/conf.d/&lt;/code> 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 저장소&lt;/strong>&lt;/td>
&lt;td>&lt;code>/opt/ml/&lt;/code>은 SageMaker, Docker 이미지 내 기본 경로&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>파일 정리 자동화&lt;/strong>&lt;/td>
&lt;td>&lt;code>*.log&lt;/code>, &lt;code>*.tmp&lt;/code> 패턴으로 주기적 삭제&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>디렉터리 설계&lt;/strong>&lt;/td>
&lt;td>컨테이너 배포 시 디렉터리 구조 미리 정의&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-자주-헷갈리는-포인트">❗ 자주 헷갈리는 포인트&lt;/h3>
&lt;ul>
&lt;li>리눅스는 &lt;strong>루트 &lt;code>/&lt;/code> 하나&lt;/strong>로 모든 경로 통합&lt;/li>
&lt;li>&lt;code>/tmp&lt;/code>는 &lt;strong>재부팅 시 초기화&lt;/strong> → 장기 보관 X&lt;/li>
&lt;li>설정은 &lt;code>/etc&lt;/code>, 사용자 데이터는 &lt;code>/home&lt;/code>, 앱은 &lt;code>/opt&lt;/code>, &lt;code>/usr&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>리눅스의 디렉터리 구조를 알면&lt;/p></description></item><item><title>[네트워크] 2장. 애플리케이션 계층 &amp; 주요 네트워크 서비스</title><link>https://keonhoban.github.io/mlops-journey/posts/network/02/</link><pubDate>Mon, 07 Apr 2025 22:38:55 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/network/02/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>애플리케이션 계층은 &amp;ldquo;사용자에 가장 가까운 계층&amp;rdquo;&lt;/p>
&lt;p>웹, 이메일, 파일 전송 같은 &lt;strong>직접 체감 가능한 서비스&lt;/strong>가 여기에 위치한다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>핵심 요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>애플리케이션 계층&lt;/strong>&lt;/td>
&lt;td>사용자 인터페이스를 담당하는 계층 (HTTP, FTP, SMTP 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>HTTP&lt;/strong>&lt;/td>
&lt;td>웹 통신 핵심 프로토콜. &lt;strong>Stateless&lt;/strong> 구조로, 쿠키/세션 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>쿠키/세션&lt;/strong>&lt;/td>
&lt;td>사용자의 로그인 상태 등 &lt;strong>정보 지속 유지&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SMTP/POP/IMAP&lt;/strong>&lt;/td>
&lt;td>이메일 송수신 구조 구성 (SMTP = 전송, POP/IMAP = 수신)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SSH/FTP&lt;/strong>&lt;/td>
&lt;td>원격 접속과 파일 전송에 필수. SSH는 &lt;strong>암호화 보안 채널&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>AJAX&lt;/strong>&lt;/td>
&lt;td>&lt;strong>페이지 새로고침 없이&lt;/strong> 서버와 비동기 통신 가능 (UX 개선)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-흐름도-정리">🖼️ 흐름도 정리&lt;/h3>
&lt;pre tabindex="0">&lt;code>[HTTP 요청 흐름]
Client Server
───────── GET /index.html ───────▶
◀─────── 200 OK + HTML ─────────
[이메일 구조 흐름]
Client → SMTP → Mail Server → POP3 or IMAP → Client
[쿠키/세션 유지 흐름]
서버: Set-Cookie → 클라이언트: Cookie 저장 → 서버가 세션 연결
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실전-시나리오-연결">🔍 실전 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>핵심 동작&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>API 응답 확인&lt;/strong>&lt;/td>
&lt;td>&lt;code>curl -I http://example.com&lt;/code> → &lt;code>200&lt;/code>, &lt;code>404&lt;/code>, &lt;code>500&lt;/code> 등 상태 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 서버 자동화 배포&lt;/strong>&lt;/td>
&lt;td>&lt;code>ssh&lt;/code>, &lt;code>scp&lt;/code>, &lt;code>autossh&lt;/code>로 원격 제어 및 파일 배포&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>알림 메일 발송&lt;/strong>&lt;/td>
&lt;td>SMTP 설정 후 MLflow/Airflow에서 이메일 전송 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>AJAX 응답 분석&lt;/strong>&lt;/td>
&lt;td>NGINX 로그 기반으로 비정상 응답(&lt;code>500&lt;/code>, &lt;code>404&lt;/code>) 탐지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>보안 설정&lt;/strong>&lt;/td>
&lt;td>Telnet 대신 SSH + 공개키 로그인 필수 구성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실무-팁-모음">💡 실무 팁 모음&lt;/h3>
&lt;ul>
&lt;li>HTTP는 Stateless → &lt;strong>상태 유지 직접 구현 필수&lt;/strong>&lt;/li>
&lt;li>FTP는 &lt;strong>방화벽 환경&lt;/strong>에서 Passive 모드 사용&lt;/li>
&lt;li>SMTP는 &lt;strong>메일 전송 전용&lt;/strong>, 수신은 POP3/IMAP&lt;/li>
&lt;li>SSH는 반드시 공개키 로그인 + 포트 변경 적용&lt;/li>
&lt;li>AJAX는 &amp;ldquo;기술&amp;quot;이 아닌 &lt;strong>통신 방식&lt;/strong>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-mlops-연결-요약">🛠️ MLOps 연결 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>MLOps 활용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>HTTP 상태 체크&lt;/strong>&lt;/td>
&lt;td>&lt;code>curl -s -o /dev/null -w &amp;quot;%{http_code}&amp;quot;&lt;/code> → 서비스 헬스체크&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SMTP 자동화&lt;/strong>&lt;/td>
&lt;td>Airflow/MLflow 알림 메일 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SSH 자동 접속&lt;/strong>&lt;/td>
&lt;td>&lt;code>~/.ssh/config&lt;/code> + 배포 스크립트 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>AJAX 응답 로깅&lt;/strong>&lt;/td>
&lt;td>모델 서빙 장애 감지, 응답 지연 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>세션 유지 설계&lt;/strong>&lt;/td>
&lt;td>사용자 인증 기반 서빙 환경 구축 시 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-자주-헷갈리는-부분">❗ 자주 헷갈리는 부분&lt;/h3>
&lt;ul>
&lt;li>HTTP = &lt;strong>Stateless&lt;/strong> → 세션은 별도 구현&lt;/li>
&lt;li>Telnet은 암호화 없음 → &lt;strong>실무에서는 사용 금지&lt;/strong>&lt;/li>
&lt;li>AJAX = 비동기 방식 (XML/JSON 기반 통신), 기술명 아님&lt;/li>
&lt;li>FTP 기본 모드는 &lt;strong>액티브&lt;/strong>, &lt;strong>방화벽 환경에서는 패시브&lt;/strong>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>애플리케이션 계층은 &amp;ldquo;사용자에게 보이는 모든 네트워크 서비스의 출발점&amp;rdquo;&lt;/p></description></item><item><title>[리눅스] 2장. 셸 단축키 &amp; 편집 기능</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/02/</link><pubDate>Mon, 07 Apr 2025 22:34:49 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/02/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>셸은 단순한 명령어 입력 도구가 아니라&lt;/p>
&lt;p>&lt;strong>효율적인 편집 + 빠른 복구 + 과거 재사용&lt;/strong>까지 가능한 작업 도구이다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-핵심">🧠 결정적 핵심&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>범주&lt;/th>
&lt;th>결정적 요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>편집 조작&lt;/strong>&lt;/td>
&lt;td>긴 명령어 수정: &lt;code>Ctrl + a/e&lt;/code>, 단어 단위: &lt;code>Meta + b/f&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>삭제 &amp;amp; 복원&lt;/strong>&lt;/td>
&lt;td>실수 복구: &lt;code>Ctrl + w/u/k&lt;/code> → 삭제, &lt;code>Ctrl + y&lt;/code> → 복원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>제어 단축키&lt;/strong>&lt;/td>
&lt;td>중단: &lt;code>Ctrl + c&lt;/code>, 멈춤/해제: &lt;code>Ctrl + s/q&lt;/code>, 화면 정리: &lt;code>Ctrl + l&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>명령 재사용&lt;/strong>&lt;/td>
&lt;td>히스토리 탐색: &lt;code>↑↓&lt;/code>, 키워드 검색: &lt;code>Ctrl + r&lt;/code>, 빠른 실행: &lt;code>!!&lt;/code>, &lt;code>!명령&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>인코딩 처리&lt;/strong>&lt;/td>
&lt;td>&lt;code>iconv&lt;/code>로 로그/CSV 인코딩 변환 (EUC-KR ↔ UTF-8)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-셸-단축키-활용-흐름">🖼️ 셸 단축키 활용 흐름&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>범주&lt;/th>
&lt;th>기능/역할&lt;/th>
&lt;th>단축키 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>🔹 &lt;strong>입력/편집&lt;/strong>&lt;/td>
&lt;td>줄 단위 이동&lt;/td>
&lt;td>&lt;code>Ctrl + a&lt;/code>, &lt;code>Ctrl + e&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>단어 단위 이동&lt;/td>
&lt;td>&lt;code>Meta + b&lt;/code>, &lt;code>Meta + f&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>삭제&lt;/td>
&lt;td>&lt;code>Ctrl + w&lt;/code>, &lt;code>Ctrl + u&lt;/code>, &lt;code>Ctrl + k&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>삭제 복원&lt;/td>
&lt;td>&lt;code>Ctrl + y&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>자동완성&lt;/td>
&lt;td>&lt;code>Tab&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>🔹 &lt;strong>제어/복구&lt;/strong>&lt;/td>
&lt;td>명령 중단 (강제 종료)&lt;/td>
&lt;td>&lt;code>Ctrl + c&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>출력 잠금 &amp;amp; 해제&lt;/td>
&lt;td>&lt;code>Ctrl + s&lt;/code>, &lt;code>Ctrl + q&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>화면 정리&lt;/td>
&lt;td>&lt;code>Ctrl + l&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>🔹 &lt;strong>히스토리&lt;/strong>&lt;/td>
&lt;td>명령어 히스토리 탐색&lt;/td>
&lt;td>&lt;code>↑&lt;/code>, &lt;code>↓&lt;/code>, &lt;code>Ctrl + p/n&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>키워드 검색 (인터랙티브)&lt;/td>
&lt;td>&lt;code>Ctrl + r&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>특정 명령 빠른 재실행&lt;/td>
&lt;td>&lt;code>!!&lt;/code>, &lt;code>!명령&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>🔹 &lt;strong>인코딩 처리&lt;/strong>&lt;/td>
&lt;td>파일 인코딩 변환&lt;/td>
&lt;td>&lt;code>iconv -f EUC-KR -t UTF-8 file.csv&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실전-시나리오-연결">🧩 실전 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>실무 상황&lt;/th>
&lt;th>단축키/기능&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>긴 배포 명령어 수정 중&lt;/td>
&lt;td>&lt;code>Ctrl + a/e&lt;/code>, &lt;code>Meta + b/f&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실수로 명령어 삭제&lt;/td>
&lt;td>&lt;code>Ctrl + y&lt;/code>로 복원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>원격 서버에서 터미널 멈춤&lt;/td>
&lt;td>&lt;code>Ctrl + q&lt;/code>로 해제 (&lt;code>Ctrl + s&lt;/code> 방지)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>이전 curl/kubectl 명령 복사&lt;/td>
&lt;td>&lt;code>Ctrl + r&lt;/code> + 키워드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>로그 인코딩 오류 발생&lt;/td>
&lt;td>&lt;code>iconv&lt;/code>로 UTF-8 변환 후 분석&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-실무-팁-정리">💡 실무 팁 정리&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>명령어 수정 빠르게&lt;/strong> → &lt;code>Ctrl + a/e&lt;/code>, &lt;code>Meta + b/f&lt;/code>&lt;/li>
&lt;li>&lt;strong>중간에 삭제해도 복원&lt;/strong> → &lt;code>Ctrl + y&lt;/code>&lt;/li>
&lt;li>&lt;strong>터미널 안 먹히면 당황 금지&lt;/strong> → &lt;code>Ctrl + q&lt;/code>로 잠금 해제&lt;/li>
&lt;li>&lt;strong>이전 명령 재사용&lt;/strong> → &lt;code>Ctrl + r&lt;/code>, &lt;code>!!&lt;/code>, &lt;code>!grep&lt;/code> 등&lt;/li>
&lt;li>&lt;strong>csv 인코딩 깨질 땐?&lt;/strong> → &lt;code>iconv -f EUC-KR -t UTF-8&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-오해-방지-포인트">⚠️ 오해 방지 포인트&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>오해&lt;/th>
&lt;th>실제 의미&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>Ctrl + s&lt;/code> = 저장?&lt;/td>
&lt;td>❌ 출력 잠금 (흐름 멈춤)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl + d&lt;/code> = 삭제?&lt;/td>
&lt;td>⛔ EOF → 셸 종료 주의&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl + r&lt;/code> = 즉시 실행?&lt;/td>
&lt;td>⛔ 입력 후 &lt;strong>엔터&lt;/strong> 눌러야 실행됨&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-mlops-실전-연결">🔧 MLOps 실전 연결&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>재사용성 확보&lt;/strong>: 복잡한 &lt;code>curl&lt;/code>, &lt;code>kubectl&lt;/code>, &lt;code>mlflow&lt;/code> 명령어 재활용 필수 → &lt;code>Ctrl + r&lt;/code> + 키워드&lt;/li>
&lt;li>&lt;strong>에러 없는 운영&lt;/strong>: 셸에서 바로 정리(&lt;code>Ctrl + l&lt;/code>), 강제 중단(&lt;code>Ctrl + c&lt;/code>) 등 조작 능력 필요&lt;/li>
&lt;li>&lt;strong>데이터 핸들링 전처리&lt;/strong>: 로그/CSV가 다른 인코딩일 경우 &lt;code>iconv&lt;/code>로 사전 처리 → API 오류 방지&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-마무리">🏁 마무리&lt;/h3>
&lt;blockquote>
&lt;p>셸 단축키는 명령어 생산성과 디버깅 속도를 높인다.&lt;/p></description></item><item><title>[네트워크] 1장. 컴퓨터 네트워크 개요</title><link>https://keonhoban.github.io/mlops-journey/posts/network/01/</link><pubDate>Sun, 06 Apr 2025 21:52:45 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/network/01/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>데이터를 여러 기기 사이에서 효율적이고 안전하게 전달하기 위한 구조&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>LAN / WAN&lt;/strong>&lt;/td>
&lt;td>거리 기반 구분: LAN은 근거리(회사/집), WAN은 광역(인터넷)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>패킷 교환&lt;/strong>&lt;/td>
&lt;td>데이터를 쪼개 전송 → 효율성 + 경로 유연성 확보&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>TCP/IP 4계층&lt;/strong>&lt;/td>
&lt;td>데이터 전달을 위한 표준 구조. 실무 문제 분석 기준&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>중앙 vs 분산 구조&lt;/strong>&lt;/td>
&lt;td>서버-클라이언트 vs P2P&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>대표 프로토콜&lt;/strong>&lt;/td>
&lt;td>TCP/UDP/IP, HTTP, DNS, ICMP, MAC&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>표준화 기관&lt;/strong>&lt;/td>
&lt;td>IETF (인터넷), IEEE (하드웨어), W3C (웹)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-핵심-도식-tcpip-4계층-구조">🖼️ 핵심 도식: TCP/IP 4계층 구조&lt;/h3>
&lt;pre tabindex="0">&lt;code>[ Application ] ← 사용자 요청 (HTTP, FTP, SMTP)
↓
[ Transport ] ← TCP/UDP, 포트 기반 통신, 신뢰성
↓
[ Internet ] ← IP 주소 기반 경로 설정
↓
[ Network Interface ] ← MAC 주소 기반 물리 전송
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>수신 측에서는 역순으로 계층별로 처리하며 원래 데이터 복원&lt;/p></description></item><item><title>[리눅스] 01장. 셸이란?</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/01/</link><pubDate>Sun, 06 Apr 2025 21:26:55 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/01/</guid><description>&lt;h3 id="-핵심-개념">📌 핵심 개념&lt;/h3>
&lt;blockquote>
&lt;p>셸은 사용자 ↔ 커널 사이를 연결하는 명령어 해석기&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="-결정적-핵심-요약">🧠 결정적 핵심 요약&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>커널&lt;/strong>&lt;/td>
&lt;td>시스템 자원(CPU, 메모리, 파일 등) 제어 담당&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>셸&lt;/strong>&lt;/td>
&lt;td>명령어 해석기. 사용자 입력을 커널로 전달&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>터미널&lt;/strong>&lt;/td>
&lt;td>셸과 사용자의 입출력 인터페이스&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>셸 스크립트&lt;/strong>&lt;/td>
&lt;td>반복 작업 자동화. 조건문/반복문 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>초기화 파일&lt;/strong>&lt;/td>
&lt;td>셸 시작 시 실행. 환경 변수/프롬프트 설정&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-셸-동작-흐름-도식화">🖼️ 셸 동작 흐름 (도식화)&lt;/h3>
&lt;pre tabindex="0">&lt;code>[ 사용자 입력 ]
↓
[ 터미널: 입출력 UI ]
↓
[ 셸: 명령어 해석기 ]
↓
[ 커널: 자원 제어 ]
↓
[ 하드웨어 ]
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-실무-시나리오-연결">🔍 실무 시나리오 연결&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>업무 상황&lt;/th>
&lt;th>셸 사용 방식&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>✅ 모델 로그 정리&lt;/td>
&lt;td>매일 &lt;code>bash&lt;/code>로 로그 백업 &amp;amp; 압축 (&lt;code>tar&lt;/code>, &lt;code>mv&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅ 배포 자동화&lt;/td>
&lt;td>&lt;code>curl + jq&lt;/code>로 MLflow API 호출, 모델 등록&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅ 서버 초기 설정&lt;/td>
&lt;td>&lt;code>bash&lt;/code>로 디렉터리 생성, 권한 변경, 변수 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅ 디버깅&lt;/td>
&lt;td>&lt;code>.bashrc&lt;/code>, &lt;code>$PATH&lt;/code>, &lt;code>echo $VAR&lt;/code>로 환경 확인&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>실무에서 셸은 &amp;ldquo;빠르고 가벼운 자동화 도구&amp;quot;로&lt;/p></description></item><item><title>About</title><link>https://keonhoban.github.io/mlops-journey/about/</link><pubDate>Sun, 06 Apr 2025 20:57:56 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/about/</guid><description>&lt;h1 id="-안녕하세요">👋 안녕하세요!&lt;/h1>
&lt;p>현재 &lt;strong>MLOps 엔지니어&lt;/strong>를 목표로 꾸준히 배우고 성장하고 있습니다.&lt;br>
&lt;strong>2년 3개월 동안 DevOps 엔지니어&lt;/strong>로 일하며 시스템 운영, 인프라 관리, 자동화의 기본기를 다졌습니다.&lt;br>
이제는 더 깊은 통합 역량을 가진 MLOps 전문가로 나아가고자 합니다.&lt;/p>
&lt;p>제 목표는 &lt;strong>기업에서 신뢰할 수 있는 실전형 MLOps 엔지니어&lt;/strong>가 되는 것입니다.&lt;br>
이 블로그는 그 여정을 기록하는 공간이자, 기술과 성장의 아카이브입니다.&lt;/p>
&lt;hr>
&lt;h2 id="-현재-주요-관심-분야-및-학습-중인-기술">🛠️ 현재 주요 관심 분야 및 학습 중인 기술&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>MLOps&lt;/strong>: MLflow, Kubeflow, Airflow&lt;/li>
&lt;li>&lt;strong>인프라 자동화&lt;/strong>: AWS, Kubernetes, Terraform&lt;/li>
&lt;li>&lt;strong>프로그래밍 언어&lt;/strong>: Python, Java, Bash&lt;/li>
&lt;li>&lt;strong>데이터 엔지니어링&lt;/strong>: 데이터 파이프라인 설계 및 구축&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="-경력-및-자격증">🚀 경력 및 자격증&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>DevOps 엔지니어&lt;/strong> (2년 3개월 경험)&lt;/li>
&lt;li>&lt;strong>보유 자격증&lt;/strong>
&lt;ul>
&lt;li>AWS SAA (Solutions Architect – Associate)&lt;/li>
&lt;li>정보처리기사&lt;/li>
&lt;li>리눅스 마스터 2급&lt;/li>
&lt;li>네트워크 관리사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="-이-블로그에서-다루는-내용">📌 이 블로그에서 다루는 내용&lt;/h2>
&lt;ul>
&lt;li>MLOps 실무 기술 및 학습 노트&lt;/li>
&lt;li>프로젝트/실습 기록 및 코드 공유&lt;/li>
&lt;li>인프라 운영 및 자동화 노하우&lt;/li>
&lt;li>기술 면접 및 자격증 준비 과정&lt;/li>
&lt;li>실전에서 부딪히며 얻은 &lt;strong>결정적 지식&lt;/strong>과 실무 팁&lt;/li>
&lt;li>DevOps → MLOps로의 &lt;strong>전환 여정&lt;/strong>과 개인적인 성장 이야기&lt;/li>
&lt;/ul>
&lt;p>이 블로그가 같은 길을 걷는 분들에게도&lt;br>
작은 인사이트와 응원이 되길 바랍니다 😊&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>🏔️ MLOps Journey on 🏔️ MLOps Journey</title><link>https://keonhoban.github.io/mlops-journey/</link><description>Recent content in 🏔️ MLOps Journey on 🏔️ MLOps Journey</description><generator>Hugo -- 0.145.0</generator><language>ko</language><lastBuildDate>Sun, 06 Apr 2025 21:52:45 +0900</lastBuildDate><atom:link href="https://keonhoban.github.io/mlops-journey/index.xml" rel="self" type="application/rss+xml"/><item><title>network-01</title><link>https://keonhoban.github.io/mlops-journey/posts/network/01/</link><pubDate>Sun, 06 Apr 2025 21:52:45 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/network/01/</guid><description>&lt;h1 id="-1장-컴퓨터-네트워크-개요-실무--mlops-관점">✅ 1장. 컴퓨터 네트워크 개요 (실무 + MLOps 관점)&lt;/h1>
&lt;hr>
&lt;h2 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>핵심 요약&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>LAN vs WAN&lt;/strong>&lt;/td>
&lt;td>거리 기준으로 네트워크 구분 (LAN: 근거리 / WAN: 원거리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>클라이언트-서버 / P2P&lt;/strong>&lt;/td>
&lt;td>중앙 집중 vs 분산 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>패킷 교환&lt;/strong>&lt;/td>
&lt;td>데이터를 쪼개서 전송, 효율적이고 유연한 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>TCP/IP 4계층&lt;/strong>&lt;/td>
&lt;td>애플리케이션 → 트랜스포트 → 인터넷 → 네트워크 인터페이스&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주요 프로토콜&lt;/strong>&lt;/td>
&lt;td>HTTP, DNS, TCP, UDP, IP, ICMP, MAC 등&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>표준화 기관&lt;/strong>&lt;/td>
&lt;td>IETF, IEEE, W3C → 각각 다른 계층/기술에 표준 제시&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-핵심-구조도-tcpip-4계층">🔄 핵심 구조도: TCP/IP 4계층&lt;/h2>
&lt;pre tabindex="0">&lt;code>[송신 측]
1. Application Layer → 웹/메일/FTP 요청
2. Transport Layer → TCP/UDP로 포트 분리, 신뢰성 처리
3. Internet Layer → IP 주소 부여
4. Network Interface Layer → MAC 주소 + 물리적 전송
[수신 측]
→ 역순으로 계층마다 헤더 제거하며 처리
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-실무-연결-예시">🔧 실무 연결 예시&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>명령어 또는 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>네트워크 상태 확인&lt;/td>
&lt;td>&lt;code>ping&lt;/code>, &lt;code>traceroute&lt;/code>, &lt;code>nslookup&lt;/code>, &lt;code>curl&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>포트 열림 확인&lt;/td>
&lt;td>&lt;code>telnet&lt;/code>, &lt;code>nc&lt;/code>, &lt;code>ss -tuln&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>네트워크 구조 시각화&lt;/td>
&lt;td>&lt;code>ip addr&lt;/code>, &lt;code>ip route&lt;/code>, &lt;code>netstat&lt;/code>, &lt;code>ifconfig&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버/클라이언트 테스트&lt;/td>
&lt;td>Python: &lt;code>socket&lt;/code>, &lt;code>curl&lt;/code> ↔ &lt;code>flask&lt;/code> 서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>게임/영상/모니터링&lt;/td>
&lt;td>대부분 &lt;code>UDP&lt;/code> 기반 (빠른 응답 필요)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-실전-체크리스트">✅ 실전 체크리스트&lt;/h2>
&lt;ul>
&lt;li>TCP/IP 4계층은 &lt;strong>실무 네트워크 트러블슈팅의 기준&lt;/strong>&lt;/li>
&lt;li>실제 송수신 과정에서 각 계층이 어떤 정보를 추가/해석하는지 기억&lt;/li>
&lt;li>&lt;strong>IP = 논리 주소 / MAC = 물리 주소&lt;/strong> → 스위치 vs 라우터 역할 이해&lt;/li>
&lt;li>&lt;strong>프로토콜 조합&lt;/strong>은 트래픽 해석(패킷 분석)과 보안 정책 설정 시 핵심&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="-오해-주의-포인트">⚠️ 오해 주의 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>실수&lt;/th>
&lt;th>바로잡기&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>TCP가 항상 더 좋은 프로토콜&lt;/td>
&lt;td>UDP가 필요한 경우도 많음 (영상 스트리밍 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MAC 주소는 인터넷 전체에서 고유함&lt;/td>
&lt;td>아니고, &lt;strong>로컬 네트워크 내에서만 유효&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNS는 IP 주소를 관리한다&lt;/td>
&lt;td>❌ 도메인 ↔ IP 변환만 함 (위치 관리 X)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>linux-01</title><link>https://keonhoban.github.io/mlops-journey/posts/linux/01/</link><pubDate>Sun, 06 Apr 2025 21:26:55 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/posts/linux/01/</guid><description>&lt;h1 id="-1장-셸이란">✅ 1장. 셸이란?&lt;/h1>
&lt;hr>
&lt;h2 id="-결정적-지식-요약">🧠 결정적 지식 요약&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>개념&lt;/th>
&lt;th>핵심 내용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>커널&lt;/strong>&lt;/td>
&lt;td>OS의 핵심: 하드웨어 제어, 프로세스/파일/네트워크 관리 담당. 셸을 통해 간접 제어&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>셸&lt;/strong>&lt;/td>
&lt;td>커널과 사용자 사이의 인터페이스. 명령어를 해석하여 커널 호출. bash, zsh 등 다양한 종류&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프롬프트&lt;/strong>&lt;/td>
&lt;td>셸이 입력을 기다리는 상태 표시. 사용자 구분 (&lt;code>$&lt;/code>, &lt;code>#&lt;/code>) 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>셸 스크립트&lt;/strong>&lt;/td>
&lt;td>반복 작업 자동화. 조건문/반복문/함수 등 프로그래밍 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>로그인/비로그인 셸&lt;/strong>&lt;/td>
&lt;td>로그인 시 환경 설정(&lt;code>/etc/profile&lt;/code>), 서브 셸은 &lt;code>.bashrc&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>터미널&lt;/strong>&lt;/td>
&lt;td>입출력 UI 제공 인터페이스. 셸은 그 안에서 명령어 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>셸 ≠ 터미널&lt;/strong>&lt;/td>
&lt;td>터미널은 인터페이스, 셸은 해석기. 기능 분리됨&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-핵심-도식화--구조도-포맷">🔄 핵심 도식화 / 구조도 포맷&lt;/h2>
&lt;pre tabindex="0">&lt;code>[User 입력]
↓
[터미널 (입출력 인터페이스)]
↓
[셸 (명령어 해석기)]
↓
[커널 (시스템 자원 제어)]
↓
[하드웨어: CPU, 메모리, I/O 등]
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[셸 종류 예시]
bash | zsh | sh | fish
↓ ↓ ↓
문법/기능 차이 → 스크립트 이식성 주의
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[셸 초기화 파일 흐름도]
로그인 셸: /etc/profile → ~/.bash_profile
비로그인 셸: ~/.bashrc
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-실무-연결-예시">🔧 실무 연결 예시&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>셸 활용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>로그 정리 자동화&lt;/strong>&lt;/td>
&lt;td>모델 서버 로그를 특정 디렉토리로 이동, 압축&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>에러 핸들링&lt;/strong>&lt;/td>
&lt;td>셸 스크립트에 &lt;code>set -euo pipefail&lt;/code> 적용해 실패 즉시 종료&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모델 배포&lt;/strong>&lt;/td>
&lt;td>셸에서 &lt;code>curl&lt;/code> + &lt;code>jq&lt;/code> 조합으로 MLflow REST API 호출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>환경별 설정 관리&lt;/strong>&lt;/td>
&lt;td>&lt;code>.bashrc&lt;/code>/&lt;code>.bash_profile&lt;/code>에서 PATH, 프롬프트 다르게 설정&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-실전-체크리스트">✅ 실전 체크리스트&lt;/h2>
&lt;ul>
&lt;li>&lt;code>#!/usr/bin/env bash&lt;/code> → 이식성 확보&lt;/li>
&lt;li>&lt;code>set -euo pipefail&lt;/code> → 안정성 강화&lt;/li>
&lt;li>실행 권한은 &lt;code>chmod +x&lt;/code> 또는 &lt;code>chmod 700&lt;/code>&lt;/li>
&lt;li>원격 서버/컨테이너 환경 → &lt;code>.bashrc&lt;/code> 실행 여부 확인&lt;/li>
&lt;li>&lt;code>$SHELL&lt;/code>, &lt;code>ps -p $$&lt;/code> → 현재 셸 상태 점검&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="-오해-주의-포인트">⚠️ 오해 주의 포인트&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>터미널과 셸은 다르다&lt;/strong>: 터미널은 UI, 셸은 명령 해석기&lt;/li>
&lt;li>&lt;code>set -e&lt;/code>는 파이프라인 전체가 아닌 &lt;em>첫 실패 명령어만 종료&lt;/em> → &lt;code>pipefail&lt;/code>과 병행 필수&lt;/li>
&lt;li>비로그인 셸에서는 &lt;code>.bashrc&lt;/code>만 실행되며, &lt;code>.bash_profile&lt;/code>은 무시됨&lt;/li>
&lt;/ul></description></item><item><title>About</title><link>https://keonhoban.github.io/mlops-journey/about/</link><pubDate>Sun, 06 Apr 2025 20:57:56 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/about/</guid><description>&lt;h1 id="-안녕하세요">👋 안녕하세요!&lt;/h1>
&lt;p>현재 &lt;strong>MLOps 엔지니어&lt;/strong>를 목표로 꾸준히 배우고 성장하고 있습니다.&lt;br>
&lt;strong>2년 3개월 동안 DevOps 엔지니어&lt;/strong>로 일하며 시스템 운영, 인프라 관리, 자동화의 기본기를 다졌습니다.&lt;br>
이제는 더 깊은 통합 역량을 가진 MLOps 전문가로 나아가고자 합니다.&lt;/p>
&lt;p>제 목표는 &lt;strong>기업에서 신뢰할 수 있는 실전형 MLOps 엔지니어&lt;/strong>가 되는 것입니다.&lt;br>
이 블로그는 그 여정을 기록하는 공간이자, 기술과 성장의 아카이브입니다.&lt;/p>
&lt;hr>
&lt;h2 id="-현재-주요-관심-분야-및-학습-중인-기술">🛠️ 현재 주요 관심 분야 및 학습 중인 기술&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>MLOps&lt;/strong>: MLflow, Kubeflow, Airflow&lt;/li>
&lt;li>&lt;strong>인프라 자동화&lt;/strong>: AWS, Kubernetes, Terraform&lt;/li>
&lt;li>&lt;strong>프로그래밍 언어&lt;/strong>: Python, Java, Bash&lt;/li>
&lt;li>&lt;strong>데이터 엔지니어링&lt;/strong>: 데이터 파이프라인 설계 및 구축&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="-경력-및-자격증">🚀 경력 및 자격증&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>DevOps 엔지니어&lt;/strong> (2년 3개월 경험)&lt;/li>
&lt;li>&lt;strong>보유 자격증&lt;/strong>
&lt;ul>
&lt;li>AWS SAA (Solutions Architect – Associate)&lt;/li>
&lt;li>정보처리기사&lt;/li>
&lt;li>리눅스 마스터 2급&lt;/li>
&lt;li>네트워크 관리사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="-이-블로그에서-다루는-내용">📌 이 블로그에서 다루는 내용&lt;/h2>
&lt;ul>
&lt;li>MLOps 실무 기술 및 학습 노트&lt;/li>
&lt;li>프로젝트/실습 기록 및 코드 공유&lt;/li>
&lt;li>인프라 운영 및 자동화 노하우&lt;/li>
&lt;li>기술 면접 및 자격증 준비 과정&lt;/li>
&lt;li>실전에서 부딪히며 얻은 &lt;strong>결정적 지식&lt;/strong>과 실무 팁&lt;/li>
&lt;li>DevOps → MLOps로의 &lt;strong>전환 여정&lt;/strong>과 개인적인 성장 이야기&lt;/li>
&lt;/ul>
&lt;p>이 블로그가 같은 길을 걷는 분들에게도&lt;br>
작은 인사이트와 응원이 되길 바랍니다 😊&lt;/p></description></item><item><title>Projects</title><link>https://keonhoban.github.io/mlops-journey/projects/</link><pubDate>Sun, 06 Apr 2025 19:02:16 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/</guid><description>&lt;h1 id="-프로젝트-준비-중입니다">🛠️ 프로젝트 준비 중입니다!&lt;/h1>
&lt;p>현재 진행 중인 MLOps, DevOps, 데이터 엔지니어링 프로젝트를&lt;br>
정리하여 이 공간에 업로드할 예정입니다. 😊&lt;/p>
&lt;ul>
&lt;li>Terraform, Kubernetes, MLflow, Airflow 실습 프로젝트&lt;/li>
&lt;li>AWS 기반 인프라 자동화 예제&lt;/li>
&lt;li>Kubeflow 파이프라인 구성 실전 사례&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>곧 다양한 실전 경험을 담아 멋진 포트폴리오로 채워갈게요!&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>📝 블로그 글로 먼저 일부 내용을 보시려면 👉 &lt;a href="https://keonhoban.github.io/mlops-journey/posts/">📚 Blog&lt;/a>&lt;/p></description></item></channel></rss>
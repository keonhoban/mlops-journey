<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Projects on 🏔️ MLOps Journey</title><link>https://keonhoban.github.io/mlops-journey/projects/</link><description>Recent content in Projects on 🏔️ MLOps Journey</description><generator>Hugo -- 0.145.0</generator><language>ko</language><lastBuildDate>Tue, 15 Jul 2025 17:55:05 +0900</lastBuildDate><atom:link href="https://keonhoban.github.io/mlops-journey/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>[MLOps 플랫폼 구축 : Airflow-MLflow-FastAPI (Helm)]</title><link>https://keonhoban.github.io/mlops-journey/projects/mlops_pipeline/helm/</link><pubDate>Tue, 15 Jul 2025 17:55:05 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/mlops_pipeline/helm/</guid><description>&lt;h2 id="-실전-시나리오-기반-구성-배경">🧩 실전 시나리오 기반 구성 배경&lt;/h2>
&lt;blockquote>
&lt;p>이 프로젝트는 단순 실습을 넘어서, 실제 발생하는 다음과 같은 문제들을 해결하기 위한 MLOps 인프라 구축을 목표로 설계되었습니다.&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>여러 모델 실험 결과가 뒤섞여 추적이 어려운 문제&lt;/strong>&lt;br>
→ MLflow Tracking 서버 + PostgreSQL 메타데이터 저장소 구성&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>모델 파일 및 로그가 로컬에만 저장되어 협업 및 재현성이 떨어지는 문제&lt;/strong>&lt;br>
→ S3 기반 artifact store 구성 + pyfunc 기반 모델 서빙 구조 설계&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>수작업 DAG 등록, 모델 배포 등의 비효율적 운영 문제&lt;/strong>&lt;br>
→ Airflow + GitSync 연동으로 파이프라인 자동화 및 버전 관리 가능&lt;/p></description></item><item><title>[Airflow 기초 자동화 - Airflow → MLflow → FastAPI]</title><link>https://keonhoban.github.io/mlops-journey/projects/mlops_pipeline/basic/</link><pubDate>Fri, 13 Jun 2025 20:58:51 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/mlops_pipeline/basic/</guid><description>&lt;h2 id="-전체-흐름-예시">🧭 전체 흐름 예시&lt;/h2>
&lt;pre tabindex="0">&lt;code>[AIRFLOW DAG 실행]
↓
[train_mlflow.py]
- iris 모델 학습
- 파라미터/메트릭 로깅
- 모델 Registry 등록
↓
[promote_mlflow.py]
- 최신 모델을 Production으로 전환
↓
[FastAPI]
- models:/IrisModel/Production → 실시간 예측
&lt;/code>&lt;/pre>&lt;p>👉 실습 코드는 &lt;a href="https://github.com/keonhoban/mlops-infra-labs/tree/main/airflow_mlflow_fastapi_dockerCompose">🔗 GitHub (Airflow + MLflow + FastAPI)&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="-1단계-프로젝트-기본-폴더-구조-설계">✅ [1단계] 프로젝트 기본 폴더 구조 설계&lt;/h2>
&lt;h3 id="-1-전체-디렉토리-구성도">📁 1. 전체 디렉토리 구성도&lt;/h3>
&lt;pre tabindex="0">&lt;code>mlops_project/
├── airflow/ 🛫 Airflow 설정 및 DAG 스케줄러
│ ├── dags/ ← DAG 정의 디렉토리
│ │ └── train_with_mlflow.py ← 학습 DAG (MLflow 연동)
│ ├── Dockerfile.airflow ← Airflow용 Dockerfile
│ ├── requirements.txt ← Airflow 의존성
│ └── .dockerignore
│
├── fastapi/ ⚡ FastAPI 예측 API 서버
│ ├── app/
│ │ └── main.py ← 모델 서빙 엔드포인트
│ ├── Dockerfile.api ← FastAPI용 Dockerfile
│ ├── requirements.txt ← FastAPI 의존성
│ └── .dockerignore
│
├── ml_code/ 🧠 ML 학습 및 프로모션 코드
│ ├── train_mlflow.py ← 모델 학습 및 MLflow 로깅
│ └── promte_mlflow.py ← 모델 프로모션 (Staging → Production)
│
├── mlflow_store/ 🗂️ MLflow 저장소 경로 (볼륨)
│ ├── Dockerfile.mlflow ← MLflow 서버 커스터마이징
│ ├── mlflow.db ← Model Registry DB (sqlite)
│ ├── mlruns/ ← 실험 로그 디렉토리
│ ├── artifacts/ ← 모델 아티팩트 저장소
│ └── .dockerignore
│
├── docker-compose.yaml 🧩 전체 서비스 구성 정의
├── .env 🔐 민감 정보 (.env로 분리)
├── README.md 📝 전체 프로젝트 문서화
├── .gitignore
└── .dockerignore
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-2단계-docker-composeyaml-통합-구성">✅ [2단계] &lt;code>docker-compose.yaml&lt;/code> 통합 구성&lt;/h2>
&lt;h3 id="-구성-목표">🧭 구성 목표&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>서비스명&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>포트&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>airflow&lt;/code>&lt;/td>
&lt;td>DAG 실행 환경 (webserver/scheduler)&lt;/td>
&lt;td>&lt;code>8080&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>postgres&lt;/code>&lt;/td>
&lt;td>Airflow 메타데이터 저장용 DB&lt;/td>
&lt;td>내부 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>mlflow&lt;/code>&lt;/td>
&lt;td>MLflow UI + Registry 기능&lt;/td>
&lt;td>&lt;code>5000&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fastapi&lt;/code>&lt;/td>
&lt;td>추론 API 서버 (모델 로딩)&lt;/td>
&lt;td>&lt;code>8000&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>이미지 사용시 주의 (UI만 제공하는 이미지 존재)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-docker-composeyaml-전체-예시">📄 &lt;code>docker-compose.yaml&lt;/code> 전체 예시&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;3.8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 📦 PostgreSQL: Airflow 메타데이터 저장용 DB&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">postgres&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">postgres:13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">postgres&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env_file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">.env &lt;/span> &lt;span style="color:#75715e"># ← 민감정보 분리 (아이디/비번)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">POSTGRES_USER&lt;/span>: &lt;span style="color:#ae81ff">${POSTGRES_USER}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">POSTGRES_PASSWORD&lt;/span>: &lt;span style="color:#ae81ff">${POSTGRES_PASSWORD}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">POSTGRES_DB&lt;/span>: &lt;span style="color:#ae81ff">${POSTGRES_DB}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>: &lt;span style="color:#75715e"># ← 코드/데이터 공유 및 영속성 보장&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">postgres_data:/var/lib/postgresql/data &lt;/span> &lt;span style="color:#75715e"># ← DB 데이터 유지 (재시작 대비)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 🛫 Airflow: DAG 스케줄러 및 태스크 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">airflow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">build&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">context&lt;/span>: &lt;span style="color:#ae81ff">./airflow &lt;/span> &lt;span style="color:#75715e"># → Airflow 전용 Dockerfile 경로&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dockerfile&lt;/span>: &lt;span style="color:#ae81ff">Dockerfile.airflow&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">airflow&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>: &lt;span style="color:#ae81ff">standalone &lt;/span> &lt;span style="color:#75715e"># → 로컬 테스트용 간단 실행 명령 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># (- Scheduler + Webserver + DB 초기화까지 자동으로 한번에 실행)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># (- 실무/운영에서는 airflow-webserver, airflow-scheduler 필드 분리)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;8080:8080&amp;#34;&lt;/span> &lt;span style="color:#75715e"># → Airflow 웹 UI (localhost:8080)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">depends_on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">postgres &lt;/span> &lt;span style="color:#75715e"># → DB가 먼저 올라와야 Airflow 시작 가능&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env_file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">.env&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Airflow 메타데이터 DB 연결 주소&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">AIRFLOW__CORE__SQL_ALCHEMY_CONN&lt;/span>: &lt;span style="color:#ae81ff">${AIRFLOW__CORE__SQL_ALCHEMY_CONN}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Airflow 예제 DAG 불러올지 여부&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">AIRFLOW__CORE__LOAD_EXAMPLES&lt;/span>: &lt;span style="color:#ae81ff">${AIRFLOW__CORE__LOAD_EXAMPLES} &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MLFLOW_TRACKING_URI&lt;/span>: &lt;span style="color:#ae81ff">http://mlflow:5000 &lt;/span> &lt;span style="color:#75715e"># → DAG 코드에서 MLflow 연동&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./airflow/dags:/opt/airflow/dags &lt;/span> &lt;span style="color:#75715e"># DAG 파일 mount&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./ml_code:/opt/airflow/ml_code &lt;/span> &lt;span style="color:#75715e"># 학습 코드 공유&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./mlflow_store:/mlflow &lt;/span> &lt;span style="color:#75715e"># 모델 저장소 공유&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 🔬 MLflow: 실험 추적 + 모델 레지스트리 서버&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mlflow&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">build&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">context&lt;/span>: &lt;span style="color:#ae81ff">./mlflow_store &lt;/span> &lt;span style="color:#75715e"># 커스텀 Dockerfile 위치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dockerfile&lt;/span>: &lt;span style="color:#ae81ff">Dockerfile.mlflow&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;5000:5000&amp;#34;&lt;/span> &lt;span style="color:#75715e"># → MLflow UI (localhost:5000)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./mlflow_store:/mlflow &lt;/span> &lt;span style="color:#75715e"># 실험 로그 + DB + artifacts 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">MLFLOW_TRACKING_URI=http://0.0.0.0:5000 &lt;/span> &lt;span style="color:#75715e"># 내부 컨테이너 기준 URI&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ⚡ FastAPI: 모델 서빙 API&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">fastapi&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">build&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">context&lt;/span>: &lt;span style="color:#ae81ff">./fastapi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dockerfile&lt;/span>: &lt;span style="color:#ae81ff">Dockerfile.api&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">fastapi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;8000:8000&amp;#34;&lt;/span> &lt;span style="color:#75715e"># → 예측 API 엔드포인트 (localhost:8000)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./fastapi/app:/app/app &lt;/span> &lt;span style="color:#75715e"># FastAPI app 디렉토리 mount&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./ml_code:/app/ml_code &lt;/span> &lt;span style="color:#75715e"># 학습/모델 코드 공유&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./mlflow_store:/mlflow &lt;/span> &lt;span style="color:#75715e"># 저장된 모델 불러오기 위한 mount&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 🗂️ 볼륨 정의 (Postgres DB 영속성 유지)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">postgres_data&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-추가로-해야-할-것">🎁 추가로 해야 할 것&lt;/h2>
&lt;ul>
&lt;li>Airflow 첫 실행 후엔 보통 &lt;strong>관리자 계정 생성&lt;/strong>도 해줘야 함:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># airflow 컨테이너 접속&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker exec -it airflow bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 관리자 계정 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>airflow users create &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --username airflow &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --password airflow &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --firstname Keoho &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --lastname Ban &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --role Admin &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --email airflow@example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="-구축-tip-airflow-fastapi-mlflow-간-공유-볼륨-구조-확인">🔁 [구축 Tip] &lt;strong>Airflow, FastAPI, MLflow 간 공유 볼륨 구조 확인&lt;/strong>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>공유 리소스&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>./mlflow_store:/mlflow&lt;/code> (MLflow)&lt;/td>
&lt;td>MLflow 서버가 쓰는 로그/모델 저장소&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>./mlflow_store:/mlflow&lt;/code> (Airflow)&lt;/td>
&lt;td>학습 후 모델 저장 위치 공유&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>./mlflow_store:/mlflow&lt;/code> (FastAPI)&lt;/td>
&lt;td>모델 추론 시 로드 경로 공유&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>➡ &lt;strong>경로 통일성&lt;/strong>이 매우 중요함! 지금은 모두 &lt;code>./mlflow&lt;/code>로 공유 (./mlflow 하위에 /mlruns 존재)&lt;/p></description></item><item><title>[MLflow : Tracking + FastAPI 연동]</title><link>https://keonhoban.github.io/mlops-journey/projects/mlflow/01/</link><pubDate>Fri, 06 Jun 2025 15:14:40 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/mlflow/01/</guid><description>&lt;blockquote>
&lt;p>목표&lt;/p>
&lt;ol>
&lt;li>MLflow Tracking Server 구성&lt;/li>
&lt;li>실험(Experiment), 파라미터, 메트릭, 아티팩트 기록&lt;/li>
&lt;li>모델 등록 → Stage 이동 → API 연동까지&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;p>👉 실습 코드는 &lt;a href="https://github.com/keonhoban/mlops-infra-labs/tree/main/mlflow">🔗 GitHub (Mlflow - Tracking + FastAPI)&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="-실습-전체-흐름-요약">🧭 실습 전체 흐름 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>[1단계] MLflow Tracking Server 구성 (로컬 환경에서 실행)
[2단계] 실험 실행 (train.py) → 모델 학습, 기록
[3단계] 모델 등록 및 Stage 설정 (Production 이동)
[4단계] FastAPI 연동 → 예측 API 서비스
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-실습-디렉토리-예시">🧩 실습 디렉토리 예시&lt;/h2>
&lt;pre tabindex="0">&lt;code>mlops-mlflow/
├── app/
│ ├── train.py # 모델 훈련 및 실험 기록
│ └── model.pkl # 저장된 모델
├── mlruns/ # 실험 데이터 자동 생성
├── fastapi_app/
│ └── app.py # FastAPI 예측 API
├── Dockerfile (선택)
└── README.md
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-1단계-mlflow-설치--실행">✅ [1단계] MLflow 설치 &amp;amp; 실행&lt;/h2>
&lt;h3 id="-가상-환경-설정">🛠️ 가상 환경 설정&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 1. venv 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install python3-venv -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 2. 가상환경 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python3 -m venv .venv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 3. 가상환경 활성화&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source .venv/bin/activate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 4. 패키지 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip install mlflow scikit-learn pandas fastapi uvicorn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 5. 나갈 때&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deactivate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="-mlflow-서버-실행">🔧 MLflow 서버 실행&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mlflow ui --port &lt;span style="color:#ae81ff">5000&lt;/span> &lt;span style="color:#75715e"># http://localhost:5000 에서 UI 확인&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-2단계-실험-실행-trainpy">🧪 [2단계] 실험 실행 (train.py)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># app/train.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> mlflow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> mlflow.sklearn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sklearn.ensemble &lt;span style="color:#f92672">import&lt;/span> RandomForestClassifier
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sklearn.datasets &lt;span style="color:#f92672">import&lt;/span> load_iris
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sklearn.model_selection &lt;span style="color:#f92672">import&lt;/span> train_test_split
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># MLflow 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mlflow&lt;span style="color:#f92672">.&lt;/span>set_tracking_uri(&lt;span style="color:#e6db74">&amp;#34;http://localhost:5000&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mlflow&lt;span style="color:#f92672">.&lt;/span>set_experiment(&lt;span style="color:#e6db74">&amp;#34;iris-rf-exp&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> mlflow&lt;span style="color:#f92672">.&lt;/span>start_run():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iris &lt;span style="color:#f92672">=&lt;/span> load_iris()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> X_train, X_test, y_train, y_test &lt;span style="color:#f92672">=&lt;/span> train_test_split(iris&lt;span style="color:#f92672">.&lt;/span>data, iris&lt;span style="color:#f92672">.&lt;/span>target, test_size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clf &lt;span style="color:#f92672">=&lt;/span> RandomForestClassifier(n_estimators&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">100&lt;/span>, max_depth&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clf&lt;span style="color:#f92672">.&lt;/span>fit(X_train, y_train)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> acc &lt;span style="color:#f92672">=&lt;/span> clf&lt;span style="color:#f92672">.&lt;/span>score(X_test, y_test)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mlflow&lt;span style="color:#f92672">.&lt;/span>log_param(&lt;span style="color:#e6db74">&amp;#34;n_estimators&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">100&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mlflow&lt;span style="color:#f92672">.&lt;/span>log_param(&lt;span style="color:#e6db74">&amp;#34;max_depth&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mlflow&lt;span style="color:#f92672">.&lt;/span>log_metric(&lt;span style="color:#e6db74">&amp;#34;accuracy&amp;#34;&lt;/span>, acc)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mlflow&lt;span style="color:#f92672">.&lt;/span>sklearn&lt;span style="color:#f92672">.&lt;/span>log_model(clf, &lt;span style="color:#e6db74">&amp;#34;model&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실험 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python app/train.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>실험이 끝나면 mlruns/ 폴더에 실험 기록 및 모델이 저장&lt;/p></description></item><item><title>[Terraform] EC2 &amp; S3 리소스 자동화 구축</title><link>https://keonhoban.github.io/mlops-journey/projects/terraform/01/</link><pubDate>Wed, 04 Jun 2025 12:51:32 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/terraform/01/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Terraform 도입 배경&lt;/strong>&lt;/p>
&lt;p>수동 콘솔 설정은 반복성과 확장성에 한계가 있음&lt;/p>
&lt;p>Terraform은 &lt;strong>버전 관리가 가능한 코드형 인프라(IaC)&lt;/strong> 로,&lt;/p>
&lt;p>&lt;strong>협업 시 동일한 환경을 빠르게 구축&lt;/strong>할 수 있는 강점을 가짐&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>이번 실습 목표&lt;/strong>&lt;/p>
&lt;p>IAM 사용자 생성부터 EC2 &amp;amp; S3 자동화까지, Terraform 기반 인프라 구축 전체 흐름을 실습&lt;/p>&lt;/blockquote>
&lt;p>👉 실습 디렉토리 전체 코드
&lt;a href="https://github.com/keonhoban/mlops-infra-labs/tree/main/terraform/01-ec2-s3-basic">🔗 GitHub – terraform/01-ec2-s3-basic&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="-전체-실습-흐름-요약">🔭 전체 실습 흐름 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>[1단계] IAM 사용자 생성 (Access Key 발급)
[2단계] AWS CLI 설치 및 configure
[3단계] Terraform 설치
[4단계] 실습 디렉토리 + 코드 구성
[5단계] terraform init → plan → apply → EC2 &amp;amp; S3 생성
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-실습-준비-체크리스트">🧩 실습 준비 체크리스트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AWS 계정&lt;/td>
&lt;td>루트 계정으로 로그인 후, IAM 사용자 생성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IAM 사용자&lt;/td>
&lt;td>프로그래밍 접근 + AdministratorAccess 부여&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS CLI&lt;/td>
&lt;td>&lt;code>aws configure&lt;/code>로 API 키 등록&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Terraform&lt;/td>
&lt;td>CLI 설치 필요 (OS별 방법 상이)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SSH 키페어&lt;/td>
&lt;td>EC2 접속용 &lt;code>.pem&lt;/code> 키 직접 생성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-1단계-iam-사용자-생성">🪪 1단계: IAM 사용자 생성&lt;/h2>
&lt;ol>
&lt;li>AWS 콘솔 → IAM → 사용자 추가&lt;/li>
&lt;li>액세스 유형: &lt;strong>프로그래밍 방식 액세스&lt;/strong> 체크&lt;/li>
&lt;li>권한: &lt;code>AdministratorAccess&lt;/code> 정책 부여
&lt;ul>
&lt;li>실습 목적이므로 관리자 권한줬지만, 이후 필요시 Least Privilege 원칙 적용
&lt;ul>
&lt;li>ex) EC2FullAccess, S3FullAccess&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>생성 후 &lt;code>Access Key ID&lt;/code>, &lt;code>Secret Access Key&lt;/code> 복사 (중요!)&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="-2단계-aws-cli-설치-및-구성">⚙️ 2단계: AWS CLI 설치 및 구성&lt;/h2>
&lt;h3 id="-설치-명령어">✅ 설치 명령어&lt;/h3>
&lt;p>&lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html">🔗 AWS CLI 설치 공식 문서&lt;/a>&lt;/p></description></item><item><title>[코드업] 기초 100제. 십자 뒤집기, 설탕과자 뽑기, 성실한 개미</title><link>https://keonhoban.github.io/mlops-journey/projects/online_judge/01/</link><pubDate>Sat, 10 May 2025 12:25:32 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/online_judge/01/</guid><description>&lt;h1 id="-codeup-문제-요약">📘 CodeUp 문제 요약&lt;/h1>
&lt;hr>
&lt;h2 id="-6096---십자-뒤집기">🔹 6096 - 십자 뒤집기&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a href="https://codeup.kr/problem.php?id=6096">https://codeup.kr/problem.php?id=6096&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>📝 바둑판(19x19)에서 특정 좌표를 기준으로 가로줄, 세로줄을 뒤집기&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>board &lt;span style="color:#f92672">=&lt;/span> [list(map(int, input()&lt;span style="color:#f92672">.&lt;/span>split())) &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">19&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n &lt;span style="color:#f92672">=&lt;/span> int(input())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x, y &lt;span style="color:#f92672">=&lt;/span> map(int, input()&lt;span style="color:#f92672">.&lt;/span>split())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">19&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> board[x][j] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">-&lt;/span> board[x][j]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> board[j][y] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">-&lt;/span> board[j][y]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> row &lt;span style="color:#f92672">in&lt;/span> board:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(map(str, row)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>🔑 &lt;strong>포인트 정리&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>배열 순서: &lt;code>board[row][col]&lt;/code>&lt;/li>
&lt;li>좌표 보정: &lt;code>x -= 1&lt;/code>, &lt;code>y -= 1&lt;/code> (1-based → 0-based)&lt;/li>
&lt;li>&lt;code>1 - x&lt;/code>: 값 반전 (0 ↔ 1)&lt;/li>
&lt;li>중심 좌표는 두 번 뒤집히므로 원래 값 유지됨&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="-6097--설탕-과자-뽑기">🔹 6097 – 설탕 과자 뽑기&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a href="https://codeup.kr/problem.php?id=6097">https://codeup.kr/problem.php?id=6097&lt;/a>&lt;/p></description></item><item><title>[셸 스크립트] 04. Monitoring</title><link>https://keonhoban.github.io/mlops-journey/projects/shell_script/04/</link><pubDate>Fri, 25 Apr 2025 11:08:02 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/shell_script/04/</guid><description>&lt;h1 id="-디스크-사용률-초과-시-자동-로그-정리">✅ 디스크 사용률 초과 시 자동 로그 정리&lt;/h1>
&lt;blockquote>
&lt;p>운영 중 디스크 용량 초과로 장애가 발생하기 전에,
서버가 스스로 로그를 정리하도록 만드는 자동화 스크립트입니다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="1--목표">1. 🎯 목표&lt;/h2>
&lt;ul>
&lt;li>✅ 디스크 사용률이 일정 기준을 초과하면,&lt;/li>
&lt;li>✅ 지정된 경로에서 &lt;strong>오래된 로그 파일을 자동으로 삭제&lt;/strong>&lt;/li>
&lt;li>✅ 삭제된 파일은 로그로 기록&lt;/li>
&lt;/ul>
&lt;p>이 스크립트 하나로 &lt;strong>디스크 감시 + 자동 삭제 + 운영 기록 보관&lt;/strong>까지 가능합니다.&lt;/p>
&lt;hr>
&lt;h2 id="2--전체-구조-흐름">2. 🧠 전체 구조 흐름&lt;/h2>
&lt;pre tabindex="0">&lt;code>df → 각 디스크 사용률 확인
↓
사용률이 THRESHOLD 이상이면
↓
지정 경로에서 mtime 기반 오래된 로그 탐색
↓
삭제 + 로그 기록
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>예시 실행 흐름:&lt;/p></description></item><item><title>[셸 스크립트] 03. Deployment</title><link>https://keonhoban.github.io/mlops-journey/projects/shell_script/03/</link><pubDate>Fri, 25 Apr 2025 11:07:57 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/shell_script/03/</guid><description>&lt;h1 id="-모델-패키징-및-배포">✅ 모델 패키징 및 배포&lt;/h1>
&lt;h2 id="1--목표">1. 🎯 목표&lt;/h2>
&lt;blockquote>
&lt;p>머신러닝 모델을 운영 환경에 안전하게 배포하기 위한&lt;/p>
&lt;p>&lt;strong>모델 파일 점검 → 압축 → 복원 → 원격 배포&lt;/strong> 과정을&lt;/p>
&lt;p>&lt;strong>하나의 통합 스크립트&lt;/strong>로 자동화합니다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="2--흐름-요약">2. 🧠 흐름 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>[모델 디렉토리 점검]
↓
[모델 압축 (archive)]
↓
[필요시 복원 (restore)]
↓
[배포 서버에 SCP 전송 (deploy)]
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="3--전체-코드-주석-포함">3. 🔧 전체 코드 (주석 포함)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MODE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>1&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;check&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># check, archive, restore, deploy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TARGET_DIR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>2&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/opt/ml/models&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ARCHIVE_FILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>3&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;models.tar.gz&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>REQUIRED_FILES&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;model.py&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;requirements.txt&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;config.yaml&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 간단한 로그 함수&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;[&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date &lt;span style="color:#e6db74">&amp;#39;+%F %T&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">] &lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 1. 필수 파일 존재 여부 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>check&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">{&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Missing dir: &lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; exit 1; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> file in &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>REQUIRED_FILES[@]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> -e &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">/&lt;/span>$file&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">{&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Missing file: &lt;/span>$file&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; exit 1; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log &lt;span style="color:#e6db74">&amp;#34;File check complete&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 2. 모델 디렉토리 압축&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>archive&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tar -czf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -C &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span> .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log &lt;span style="color:#e6db74">&amp;#34;Archive created: &lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 3. 압축된 모델 복원&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>restore&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> -e &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">{&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Missing archive: &lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; exit 1; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tar -xzf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -C &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log &lt;span style="color:#e6db74">&amp;#34;Restore done to &lt;/span>$TARGET_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 4. 모델 원격 서버로 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deploy&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USER&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>4&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ubuntu&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HOST&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>5&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;127.0.0.1&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DEST&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>6&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/opt/ml/models&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scp &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$USER&lt;span style="color:#e6db74">@&lt;/span>$HOST&lt;span style="color:#e6db74">:&lt;/span>$DEST&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Deployed to &lt;/span>$HOST&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">{&lt;/span> log &lt;span style="color:#e6db74">&amp;#34;Deployment failed&amp;#34;&lt;/span>; exit 1; &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실행 분기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$MODE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> check&lt;span style="color:#f92672">)&lt;/span> check ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> archive&lt;span style="color:#f92672">)&lt;/span> archive ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restore&lt;span style="color:#f92672">)&lt;/span> restore ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deploy&lt;span style="color:#f92672">)&lt;/span> deploy &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$@&lt;span style="color:#e6db74">&amp;#34;&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Usage: &lt;/span>$0&lt;span style="color:#e6db74"> [check|archive|restore|deploy] [target_dir] [archive_file] [user] [host] [remote_path]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="4--주요-기능-설명">4. 📌 주요 기능 설명&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>check&lt;/code>&lt;/td>
&lt;td>모델 디렉토리에 필수 파일 존재 여부 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>archive&lt;/code>&lt;/td>
&lt;td>디렉토리 전체 압축 → &lt;code>.tar.gz&lt;/code> 생성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>restore&lt;/code>&lt;/td>
&lt;td>압축 해제 후 원상 복원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>deploy&lt;/code>&lt;/td>
&lt;td>&lt;code>scp&lt;/code>로 원격 서버 전송, 사용자/호스트 지정 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>log()&lt;/code>&lt;/td>
&lt;td>모든 결과 시간 기록 포함, 운영 추적 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="5--실무-활용--확장-포인트">5. 🛠️ 실무 활용 &amp;amp; 확장 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>확장 방향&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>배포 자동화&lt;/td>
&lt;td>&lt;code>CI/CD&lt;/code> 파이프라인에서 이 스크립트 호출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>환경 설정 외부화&lt;/td>
&lt;td>&lt;code>.env&lt;/code> 파일로 사용자/호스트 설정 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>배포 확인 로직 추가&lt;/td>
&lt;td>&lt;code>ssh &amp;quot;$HOST&amp;quot; &amp;quot;ls $DEST&amp;quot;&lt;/code>로 전송 검증 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 보안 강화&lt;/td>
&lt;td>&lt;code>scp&lt;/code> → &lt;code>rsync&lt;/code>, &lt;code>ssh key&lt;/code> 연동, &lt;code>Ansible&lt;/code> 등으로 확장&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="6--mlops-실전-연결">6. 🔧 MLOps 실전 연결&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>MLOps 흐름&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>모델 체크포인트 보존&lt;/td>
&lt;td>&lt;code>archive&lt;/code>를 통해 학습 모델 압축 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 서빙 환경 이관&lt;/td>
&lt;td>&lt;code>deploy&lt;/code>를 통해 서버 간 모델 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 리포지터리 백업&lt;/td>
&lt;td>&lt;code>restore&lt;/code>로 필요시 복원 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GitHub Actions + SCP 배포&lt;/td>
&lt;td>배포 자동화 스크립트에 직접 연동 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="7--정리">7. ✅ 정리&lt;/h2>
&lt;blockquote>
&lt;p>단순히 scp로 모델을 보내는 스크립트가 아니라,&lt;/p></description></item><item><title>[셸 스크립트] 02. Data Processing</title><link>https://keonhoban.github.io/mlops-journey/projects/shell_script/02/</link><pubDate>Thu, 24 Apr 2025 23:20:08 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/shell_script/02/</guid><description>&lt;h1 id="-오래된-로그-정리-및-보관">✅ 오래된 로그 정리 및 보관&lt;/h1>
&lt;h2 id="1--목표">1. 🎯 목표&lt;/h2>
&lt;blockquote>
&lt;p>지정한 경로의 오래된 로그 파일을 삭제하거나, 압축 보관하는&lt;/p>
&lt;p>&lt;strong>모드 기반 자동화 스크립트&lt;/strong>입니다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="2--흐름-요약">2. 🧠 흐름 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>입력: [모드] [경로] [로그 위치] [기준 날짜]
↓
[clean] → 오래된 로그 삭제 + 로그 기록
[archive] → 오래된 로그 압축 백업
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="3--전체-코드">3. 🔧 전체 코드&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 인자 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MODE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>1&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clean&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TARGET_PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>2&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/var/log&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOG_DIR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>3&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/backup/logs&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DAYS_OLD&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>4&lt;span style="color:#66d9ef">:-&lt;/span>30&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DATE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date &lt;span style="color:#e6db74">&amp;#39;+%F&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$MODE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;clean&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> find &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -type f -mtime +$DAYS_OLD -exec ls -lh &lt;span style="color:#f92672">{}&lt;/span> &lt;span style="color:#ae81ff">\;&lt;/span> &amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_DIR&lt;span style="color:#e6db74">/cleaned_&lt;/span>$DATE&lt;span style="color:#e6db74">.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> find &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -type f -mtime +$DAYS_OLD -delete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[CLEAN] Done: &lt;/span>$DATE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">elif&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$MODE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;archive&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ARCHIVE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_DIR&lt;span style="color:#e6db74">/logs_&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>DAYS_OLD&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">days_&lt;/span>$DATE&lt;span style="color:#e6db74">.tar.gz&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> find &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$TARGET_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -type f -name &lt;span style="color:#e6db74">&amp;#34;*.log&amp;#34;&lt;/span> -mtime +$DAYS_OLD -print | tar czf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ARCHIVE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -T - &lt;span style="color:#f92672">||&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;No logs to archive&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[ARCHIVE] Done: &lt;/span>$ARCHIVE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Usage: &lt;/span>$0&lt;span style="color:#e6db74"> [clean|archive] [path] [log_dir] [days]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="4--주요-기능-설명">4. 💡 주요 기능 설명&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>기능&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>MODE&lt;/code> 인자&lt;/td>
&lt;td>clean / archive 모드 분기 → 멀티 용도 스크립트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tar -T -&lt;/code>&lt;/td>
&lt;td>&lt;code>find&lt;/code> 결과를 안전하게 바로 압축&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ls -lh&lt;/code> → 로그 보관&lt;/td>
&lt;td>삭제 전 파일 목록을 보관 → 감사 로그&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Usage&lt;/code> 출력&lt;/td>
&lt;td>잘못된 인자 대응 → 실전 운영 스크립트 기준 충족&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="5--실무-활용--확장-포인트">5. 🛠️ 실무 활용 &amp;amp; 확장 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>확장&lt;/th>
&lt;th>방법&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>crontab 자동화&lt;/td>
&lt;td>&lt;code>0 1 * * * /path/cleaner.sh clean /var/log /backup/logs 30&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장자 다양화&lt;/td>
&lt;td>&lt;code>-name &amp;quot;*.log&amp;quot; -o -name &amp;quot;*.out&amp;quot;&lt;/code> 등으로 확장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>압축 후 업로드&lt;/td>
&lt;td>&lt;code>aws s3 cp &amp;quot;$ARCHIVE&amp;quot; s3://log-backup-bucket/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>logrotate와 연동&lt;/td>
&lt;td>&lt;code>/etc/logrotate.d&lt;/code> → 일정 주기 log 정리 후 이 스크립트 사용&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="6--mlops-실무-연결">6. 🔧 MLOps 실무 연결&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>흐름&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ML 학습 로그 정리&lt;/td>
&lt;td>&lt;code>/opt/ml/logs&lt;/code> 폴더 주기적 clean&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>모델 기록 정리&lt;/td>
&lt;td>&lt;code>mlruns/&lt;/code> 내 오래된 run data 보관&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Kubeflow pipeline 로그 정리&lt;/td>
&lt;td>&lt;code>/var/log/kubeflow/*&lt;/code> 압축 보관&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="7--정리">7. ✅ 정리&lt;/h2>
&lt;blockquote>
&lt;p>단순한 로그 정리가 아니라,&lt;/p></description></item><item><title>[셸 스크립트] 01. Backup</title><link>https://keonhoban.github.io/mlops-journey/projects/shell_script/01/</link><pubDate>Thu, 24 Apr 2025 23:19:56 +0900</pubDate><guid>https://keonhoban.github.io/mlops-journey/projects/shell_script/01/</guid><description>&lt;h1 id="-하루-한-번-자동-백업">✅ 하루 한 번, 자동 백업&lt;/h1>
&lt;h2 id="1--목표">1. 🎯 목표&lt;/h2>
&lt;blockquote>
&lt;p>서버에서 특정 디렉토리를 매일 자동으로 백업하고,&lt;/p>
&lt;p>로그까지 남기는 &lt;strong>안정적인 자동화 스크립트&lt;/strong>를 작성합니다.&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h2 id="2--전체-흐름-요약">2. 🧠 전체 흐름 요약&lt;/h2>
&lt;pre tabindex="0">&lt;code>[백업할 경로] → [압축 tar.gz 생성] → [로그 기록] → [저장 경로 이동]
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="3--전체-스크립트-주석-포함">3. 🔧 전체 스크립트 (주석 포함)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 백업할 경로와 저장 경로 (인자 or 기본값)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SRC_PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>1&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/home/ubuntu&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DST_PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>2&lt;span style="color:#66d9ef">:-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/backup/ubuntu_backup&amp;#34;&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 오늘 날짜 기준 파일명 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ARCHIVE_NAME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date &lt;span style="color:#e6db74">&amp;#39;+%F&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">.tar.gz&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOG_FILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DST_PATH&lt;span style="color:#e6db74">/backup.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실패 시 로그에 남기기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trap &lt;span style="color:#e6db74">&amp;#39;echo &amp;#34;[ERROR] Backup failed!&amp;#34; &amp;gt;&amp;gt; $LOG_FILE&amp;#39;&lt;/span> ERR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 백업 경로 미존재 시 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DST_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실제 백업 수행&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$SRC_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[INFO] Backup started at &lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &amp;gt;&amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tar -czf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$DST_PATH&lt;span style="color:#e6db74">/&lt;/span>$ARCHIVE_NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -C &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$SRC_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> . &lt;span style="color:#f92672">||&lt;/span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[INFO] Backup success: &lt;/span>$ARCHIVE_NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &amp;gt;&amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;[ERROR] Source path not found: &lt;/span>$SRC_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &amp;gt;&amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$LOG_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="4--핵심-설계-포인트">4. 💡 핵심 설계 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>요소&lt;/th>
&lt;th>설계 이유&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>set -euo pipefail&lt;/code>&lt;/td>
&lt;td>예외 발생 즉시 종료 + 예측 불가능한 오류 방지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>${1:-}&lt;/code>&lt;/td>
&lt;td>인자 없을 시 기본값으로 동작 → 재사용성 강화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>trap '...' ERR&lt;/code>&lt;/td>
&lt;td>실패 시 로그 자동 기록 → 디버깅 편의&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tar -czf&lt;/code>&lt;/td>
&lt;td>표준 압축 포맷으로 백업&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>mkdir -p&lt;/code>&lt;/td>
&lt;td>실행 시 폴더 미존재 문제 예방&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="5--실무-적용--확장-아이디어">5. 🛠️ 실무 적용 &amp;amp; 확장 아이디어&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>확장&lt;/th>
&lt;th>방법&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>매일 자동 실행&lt;/td>
&lt;td>&lt;code>crontab -e&lt;/code> → &lt;code>0 2 * * * /path/to/script.sh&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>백업 후 업로드&lt;/td>
&lt;td>&lt;code>aws s3 cp $ARCHIVE_NAME s3://bucket/path/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>환경 설정 분리&lt;/td>
&lt;td>&lt;code>.env&lt;/code> 파일에서 SRC/DST 설정 불러오기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>백업 알림&lt;/td>
&lt;td>&lt;code>mail&lt;/code> or 슬랙 알림 연동&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="6--mlops-실전-연결-포인트">6. 🔧 MLOps 실전 연결 포인트&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>흐름&lt;/th>
&lt;th>적용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>학습 결과 자동 백업&lt;/td>
&lt;td>모델 checkpoint 자동 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실험 로그 보존&lt;/td>
&lt;td>&lt;code>~/mlruns&lt;/code> 디렉토리 백업&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>환경 복원 대비&lt;/td>
&lt;td>&lt;code>Dockerfile&lt;/code>, &lt;code>.env&lt;/code> 백업&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="7--정리">7. ✅ 정리&lt;/h2>
&lt;blockquote>
&lt;p>작은 자동화지만, 이 스크립트 하나로&lt;/p></description></item></channel></rss>